<!DOCTYPE HTML>


<html xmlns:ng="http://angularjs.org" id="ng-app" lang="en" ng-app="TH">

<head ng-controller="DZHeadController">
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <meta name="description" ng-attr-content="{{ service.description }}" content="This article takes an in-depth look at Spring Boot 2 RESTful API documentation with Swagger 2 tutorial.">
    <meta name="keywords" ng-attr-content="{{ service.keywords }}" content="programming, software development, devops, java, agile, web, iot, database, mobile, big data, cloud,integration,tutorial,spring boot,restful api documentation,rest apis,swagger 2,spring boot 2,article">

    <meta property="og:description" ng-attr-content="{{ service.description }}" content="This article takes an in-depth look at Spring Boot 2 RESTful API documentation with Swagger 2 tutorial.">

    <meta ng-attr-content="{{ service.noIndex ? 'noindex' : '' }}" ng-attr-name="{{ service.noIndex ? 'robots' : '' }}"
          name="" content="">

    <meta property="og:site_name" ng-attr-content="{{ service.siteName }}" content="dzone.com">
    <meta property="og:title" ng-attr-content="{{ service.title }}" content="Spring Boot 2 RESTful API Documentation With Swagger 2 Tutorial - DZone Integration">
    <meta property="og:url" ng-attr-content="{{ service.canonical }}" content="https://dzone.com/articles/spring-boot-2-restful-api-documentation-with-swagg">
    <meta ng-if="service.img" ng-attr-content="{{ service.img }}" property="og:image" content="https://dz2cdn4.dzone.com/storage/article-thumb/10654447-thumb.jpg">
    <meta ng-if="service.type" ng-attr-content="{{ service.type }}" property="og:type" content="article">

    <meta name="twitter:site" content="@DZoneInc">
    <meta ng-if="service.twitterImage" ng-attr-content="{{ service.twitterImage }}" name="twitter:image" content="https://dz2cdn4.dzone.com/storage/article-thumb/10654447-thumb.jpg">
    <meta name="twitter:card" content="summary_large_image">
    <meta name="twitter:description" ng-attr-content="{{ service.description }}" content="This article takes an in-depth look at Spring Boot 2 RESTful API documentation with Swagger 2 tutorial.">
    <meta name="twitter:title" ng-attr-content="{{ service.title }}" content="Spring Boot 2 RESTful API Documentation With Swagger 2 Tutorial - DZone Integration">

    <meta ng-if="service.wordCount" property="article:wordcount" ng-attr-content="{{service.wordCount}}" content="2513">
    <meta name="referrer" content="origin">
    <meta name="google-site-verification" content="kndbhxcupfEqWmZclhCpB6vlgOs7QSmx2UHAGGnP2mA">

    <link rel="dns-prefetch" href="//www.googletagservices.com">
    <link rel="dns-prefetch" href="//secure.adnxs.com">
    <link rel="dns-prefetch" href="//hn.inspectlet.com">
    <link rel="dns-prefetch" href="//inspectletws.herokuapp.com">
    <link rel="dns-prefetch" href="//www.google-analytics.com">
    <link rel="dns-prefetch" href="//a.optnmstr.com">
    <link rel="dns-prefetch" href="//ajax.googleapis.com">
    <link rel="dns-prefetch" href="//cdn.inspectlet.com">
    <link rel="dns-prefetch" href="//csi.gstatic.com">

    <link rel="image_src" ng-href="{{ service.img }}" href="https://dz2cdn4.dzone.com/storage/article-thumb/10654447-thumb.jpg">

    <link ng-if="service.prevPage" rel="prev" ng-href="{{ service.prevPage }}" href="">
    <link ng-if="service.nextPage" rel="next" ng-href="{{ service.nextPage }}" href="">
    <link rel="icon" type="image/x-icon" href="/themes/dz20/images/favicon.png">

    <title ng-bind="service.title">Spring Boot 2 RESTful API Documentation With Swagger 2 Tutorial - DZone Integration</title>

    <meta name="df-verify" content="df0d76632b4543">

<link rel="stylesheet" type="text/css" href="//dz2cdn3.dzone.com/storage/pub/13202139-combined.css" charset="utf-8"/><link rel="stylesheet" type="text/css" href="//dz2cdn3.dzone.com/storage/pub/13202151-combined.css" charset="utf-8"/></head>
<body>

    <script type="application/ld+json">
        {
            "@context": "https://schema.org",
            "@type": "Organization",
            "url": "https://dzone.com",
            "logo": "https://dzone.com/themes/dz20/images/dz_cropped.png",
            "contactPoint": [{
                "@type": "ContactPoint",
                "telephone": "+1-919-678-0300",
                "contactType": "customer service"
            }]
        }
    </script>

    <toast></toast>

    <div class="container-fluid header" th-element="header" th-element-groups="[]" ng-hide="$root.isHidden('header')" data-th-element-name="header"><div class="row mainHeaderRow" th-element="mainHeaderRow" th-element-groups="['header']" ng-hide="$root.isHidden('mainHeaderRow')" data-th-element-name="mainHeaderRow"><div class="col-md-12 mainHeader headerHeaderV2 oUhbWOfRPSwBoUhM" th-element="mainHeader" th-element-groups="['header','mainHeaderRow']" ng-hide="$root.isHidden('mainHeader')" data-th-element-name="mainHeader" data-th-widget="header.headerV2" data-widget-header-header-v2="" ng-controller="mainHeader">
<script type="text/ng-template" id="like-article.html">
        <div class="dz-like"
             ng-class='{liked: status.liked}'
             ng-click='like()'

<a href="#">
    <i ng-class="{'icon-thumbs-up-alt': status.liked, 'icon-thumbs-up liked': !status.liked}"></i>
    <span>Like ({{ status.score }})</span>
</a>
</div>
</script>

<script type="text/ng-template" id="refcard-save.html">
    <button type="button" ng-class="{'icon-star gold': status.saved, 'icon-star-empty': !status.saved}"
            ng-click="save()" class="btn btn-save btn-lg"><span class="save-title">Save</span><span ng-if="status.saved"
                                                                                                    class="d-letter">D</span>
    </button>
</script>

<div class="header-top">
    <div class="header-container">
        <div class="pull-left logo-container">
            <div class="logo" >
                <a class="inner" href="/"><img src="/themes/dz20/images/dz_cropped.png" alt="DZone"></a>
            </div>

        <div class="active-portal"><a href="/enterprise-integration-training-tools-news">Integration Zone</a></div>
        </div>

        <div class="pull-right login-and-search">

                <div class="dz-intro">Over a million developers have joined DZone.</div>
                <div class="mobile-invisible sign-in-join" ng-if="!$root.user.authenticated"><a href="#" ng-click="login()">Log In</a> <span class="dz-intro-span">/</span> <a href="#" ng-click="signIn()">Join</a></div>
                <button class="join-icon"><i class="icon-user" ng-if="!$root.user.authenticated" ng-click="login()"></i></button>
                <div class="headerSearch">
                    <button class="icon-search dropdown-toggle" ng-click="focusSearch()" id="dropdownMenu2" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"></button>
                    <ul class="dropdown-menu" aria-labelledby="dropdownMenu2">
                        <li>
                            <form class="form-wrapper">
                                <label for="search" class="sr-only">Search</label>
                                <input id="search" role="search" ng-model="searchT" type="text" placeholder="Search" required>
                                <input type="button" value="Search" class="btn btn-action search-button" ng-click="allResults()" ng-disabled="searchT.length < 3">
                            </form>
                        </li>

                      <div class="results-area" ng-cloak>
                          <div class="col-md-12"><th-loader flag="loading"></th-loader></div>
                          <li ng-repeat="node in nodes">
                              <div class="results-container">
                                  <img dz-image-fid-width="80" dz-image-fid="{{ node.thumb }}">
                                  <div class="results-content">
                                    <a class="title" target="{{ node.type=='link'? '_blank' : '_self'}}" ng-href="{{node.urlOrigin}}">{{node.title}}</a>
                                    <p class="source">
                                        <span class="type">{{node.type}}</span>
                                        <span class="source-bullet"> &middot;</span>
                                        <span ng-if="node.type=='link'" class="link-source">{{ node.urlSource.name }}</span>
                                        <span ng-if="node.type=='link'" aria-hidden="true" class="source-bullet"> &middot;</span>
                                        <span class="source-date" am-time-ago="node.articleDate"></span>
                                        <span ng-if="node.type != 'guide'">
                                            by <a ng-bind-html="node.authors[0].realName" href="{{ node.authors[0].url }}" target="_blank" class="author-name" th-popup="users.profile.mini" popup-data="{user: node.authors[0].id}"></a>
                                        </span>
                                    </p>
                                    <div class="hover-buttons" ng-if="node.type=='refcard'">
                                        <a type="button" class="btn download" href="{{node.pdf}}"><i class="icon-download"></i> Download</a>
                                        <dz-save template="refcard-save.html" node="node" class="save-btn"></dz-save>
                                        <span class="download-count"><i class="icon-download"></i> {{node.downloads}}</span>
                                    </div>
                                  </div>
                                  <div class="clear"></div>
                              </div>
                          </li>
                      </div>

                      <div class="results-additional-actions" ng-if="totalResults || haveResults">
                        <div class="totalResults" ng-if="totalResults"><span>{{totalResults}} search results</span></div>
                        <li class="btn-vall" ng-if="haveResults">
                            <input type="button" value="View All Results" ng-click="allResults()" class="btn btn-action" ng-disabled="searchT.length < 3">
                        </li>
                      </div>
                    </ul>
                </div>

        </div>
    </div>
</div>

<div class="header-bottom">



    <ul class="portals header-container scrollable-ul">
            <li >
                <a href="/refcardz" id="header-refcardz"
                   
                >
                    <em>
                      Refcardz
                    </em>
                </a>
            </li>
            <li >
                <a href="/research" id="header-research"
                   
                >
                    <em>
                      Research
                    </em>
                </a>
            </li>
            <li >
                <a href="/webinars" id="header-webinars"
                   
                >
                    <em>
                      Webinars
                    </em>
                </a>
            </li>
            <li class="last-portal-link">
                <a href="/portals" id="header-portals"
                   
                      ng-click="toggleZones('/portals', $event)"
                >
                    <em>
                      Zones
                      <span class="collapsible-toggle {{zonesOpen ? 'open': ''}}">
                        <i class="icon-angle-down"></i>
                        <i class="icon-angle-up"></i>
                      </span>
                    </em>
                </a>
            </li>

        <li class="separator" aria-hidden="true" style="color: #d9dcdd">|</li>
        <li class="portal-topics {{zonesOpen ? 'open': ''}}">
          <ul>
                <li>
                    <a href="/agile-methodology-training-tools-news" id="header-2"
                       ng-class="{'active-state': isActivePortal(2)}"
                    >
                        Agile
                    </a>
                </li>
                <li>
                    <a href="/artificial-intelligence-tutorials-tools-news" id="header-4001"
                       ng-class="{'active-state': isActivePortal(4001)}"
                    >
                        AI
                    </a>
                </li>
                <li>
                    <a href="/big-data-analytics-tutorials-tools-news" id="header-3"
                       ng-class="{'active-state': isActivePortal(3)}"
                    >
                        Big Data
                    </a>
                </li>
                <li>
                    <a href="/cloud-computing-tutorials-tools-news" id="header-4"
                       ng-class="{'active-state': isActivePortal(4)}"
                    >
                        Cloud
                    </a>
                </li>
                <li>
                    <a href="/database-sql-nosql-tutorials-tools-news" id="header-5"
                       ng-class="{'active-state': isActivePortal(5)}"
                    >
                        Database
                    </a>
                </li>
                <li>
                    <a href="/devops-tutorials-tools-news" id="header-6"
                       ng-class="{'active-state': isActivePortal(6)}"
                    >
                        DevOps
                    </a>
                </li>
                <li>
                    <a href="/enterprise-integration-training-tools-news" id="header-7"
                                class="active-state"
                       ng-class="{'active-state': isActivePortal(7)}"
                    >
                        Integration
                    </a>
                </li>
                <li>
                    <a href="/iot-developer-tutorials-tools-news-reviews" id="header-8"
                       ng-class="{'active-state': isActivePortal(8)}"
                    >
                        IoT
                    </a>
                </li>
                <li>
                    <a href="/java-jdk-development-tutorials-tools-news" id="header-1"
                       ng-class="{'active-state': isActivePortal(1)}"
                    >
                        Java
                    </a>
                </li>
                <li>
                    <a href="/microservices-news-tutorials-tools" id="header-6001"
                       ng-class="{'active-state': isActivePortal(6001)}"
                    >
                        Microservices
                    </a>
                </li>
                <li>
                    <a href="/open-source-news-tutorials-tools" id="header-7001"
                       ng-class="{'active-state': isActivePortal(7001)}"
                    >
                        Open Source
                    </a>
                </li>
                <li>
                    <a href="/apm-tools-performance-monitoring-optimization" id="header-10"
                       ng-class="{'active-state': isActivePortal(10)}"
                    >
                        Performance
                    </a>
                </li>
                <li>
                    <a href="/application-web-network-security" id="header-2001"
                       ng-class="{'active-state': isActivePortal(2001)}"
                    >
                        Security
                    </a>
                </li>
                <li>
                    <a href="/web-development-programming-tutorials-tools-news" id="header-11"
                       ng-class="{'active-state': isActivePortal(11)}"
                    >
                        Web Dev
                    </a>
                </li>
          </ul>
        </li>
    </ul>
</div></div></div></div><div class="container-fluid body withSlider" th-element="body" th-element-groups="[]" ng-hide="$root.isHidden('body')" data-th-element-name="body"><div class="row mainContentRow" th-element="mainContentRow" th-element-groups="['body']" ng-hide="$root.isHidden('mainContentRow')" data-th-element-name="mainContentRow"><div class="col-md-12 announcementBar1 announcementBar oUhbYlrRaqMaoUhM" th-element="announcementBar1" th-element-groups="['body','mainContentRow']" ng-hide="$root.isHidden('announcementBar1')" data-th-element-name="announcementBar1" data-th-widget="announcementBar" data-widget-announcement-bar="" ng-controller="announcementBar1"><div ng-if="announcement && toShow" back-img hasImage="{{announcement.hasImage}}" img="{{announcement.img}}" imgBackup="{{announcement.img2}}" id="acontainer" class="ann-container" ng-cloak>
    <div class="ann-body">{{announcement.body}}</div><a ng-if="announcement.link" class="ann-link" ng-click="track(announcement.id)" ng-ref="{{announcement.link}}">{{announcement.title}}<span class="icon-right-dir"></span></a>
</div>
</div><div class="col-md-12 articleContent4 articleContent oUhbblYOaqbcblYOaqbcC" th-element="articleContent4" th-element-groups="['body','mainContentRow']" ng-hide="$root.isHidden('articleContent4')" data-th-element-name="articleContent4" data-th-widget="article.content" data-widget-article-content="" header-change-trigger="" ng-controller="articleContent4">
<script type="text/ng-template" id="like-article.html">
        <div class="dz-like"
             ng-class='{liked: status.liked}'
             ng-click='like()'

<a href="#">
    <i ng-class="{'icon-thumbs-up-alt': status.liked, 'icon-thumbs-up liked': !status.liked}"></i>
    <span>Like ({{ status.score }})</span>
</a>
</div>
</script>

<script type="text/ng-template" id="link-article-save.html">
    <div class="save "
         ng-class="{'icon-star gold': status.saved, 'icon-star-empty': !status.saved}"
         ng-click="save()"><span
                class="action-label">
                {{ status.saved ? 'Saved' : 'Save' }}</span></div>
</script>

<script type="text/ng-template" id="like-article.html">
    <div class="dz-like" ng-class="{'icon-thumbs-up-alt liked': status.liked, 'icon-thumbs-up': !status.liked}" ng-click="like()"><span class="action-label"><span>Like</span><span ng-if="status.liked" class="d-letter">d</span></span>
        <a href="#">
            <span>({{ status.score }})</span>
        </a>
    </div>
</script>

<div class="articles-wrap" ng-if="articles[0].id == 2559278">
        <div ng-if="ads.top.show() && articles[0].readyForAd"
             class="ad-container">
            <div dc-slot="ads.top.slot()" tags="ads.top.tags(articles[0])" size="ads.top.size()"></div>
        </div>


    <div>
        <th-if-scroll relative-to="top" from="0" to="50" callback="activateT(articles[0])"></th-if-scroll>
    </div>


    <div class="article-stream widget-top-border"
         ng-class="{'widget-top-border': articles[0].published }"
         ng-if="articles[0].id == 2559278">
    <div class="social-media-icons mobile-only" follow-dzone><div class="top-social">
    <p>Let's be friends:</p>
    <ul class="icons-only" ng-class="{open: isOpen}" click-outside="outside()">
        <li class="rss-icon" id="rss-spotlight-1">
            <a href="/pages/feeds"><i class="icon-rss-1"></i></a>
        </li>
        <li class="twitter-icon">
            <a href="https://twitter.com/DZoneInc" target="_blank"><i class="icon-twitter"></i></a>
        </li>
        <li class="facebook-icon">
            <a href="https://www.facebook.com/DZoneInc" target="_blank"><i class="icon-facebook-1"></i></a>
        </li>
        <li class="google-icon">
            <a href="https://plus.google.com/+dzone/posts" target="_blank"><i class="icon-gplus"></i></a>
        </li>
        <li class="linkedin-icon">
            <a href="https://www.linkedin.com/company/devada-team" target="_blank"><i class="icon-linkedin-1"></i></a>
        </li>

    </ul>
</div>
</div>
        <div ng-show="!edition || (width > 1024 && edition)" class="content-right-images"
             header-affix-element="div.content">

           <!--Sponsor Logo-->
           <div class="sidebar-ad" ng-if="articles[0].readyForAd && (width > 1024)" dc-slot="ads.sl1.slot(articles[0], 0)"
                 tags="ads.sl1.tags(articles[0], 0)" size="ads.sl1.size(articles[0], 0)" style="border:0px;"></div>

            <div class="sidebar-ad" ng-if="articles[0].readyForAd && (width > 1024)" dc-slot="ads.sb1.slot(articles[0], 0)"
                 tags="ads.sb1.tags(articles[0], 0)" size="ads.sb1.size(articles[0], 0)"></div>

            <div ng-if="articles[0].readyForAd && 0 > 1 && !articles[0].partner.isSponsoringArticle && (width > 1024)"
                 dc-slot="ads.sb2.slot(articles[0], 0)"
                 tags="ads.sb2.tags(articles[0], 0)" size="ads.sb2.size(articles[0], 0)"></div>

        </div>

            <div id="article-2559278">
                <script type="application/ld+json">
                    {
                        "@context": "http://schema.org",
                        "@type": "Article",
                        "headline": "Spring Boot 2 RESTful API Documentation With Swagger 2 Tutorial",
                        "author": {
                            "@type": "Person",
                            "name": "Ramesh Fadatare"
                        },
                        "audience": "software developers",
                        "keywords": "integration,tutorial,spring boot,restful api documentation,rest apis,swagger 2,spring boot 2",
                        "timeRequired": "PT11M",
                        "commentCount": 2,
                        "wordCount": "2533",
                        "accessMode": "textual, visual",
                        "dateCreated": "2018-11-12T18:05:03Z",
                        "datePublished": "2018-11-12T00:00:00Z",
                        "dateModified": "2019-08-09T09:04:00Z",
                        "articleSection": "enterprise-integration-training-tools-news",
                        "publisher": {
                            "@type": "Organization",
                            "name": "DZone",
                            "url": "https://dzone.com",
                            "logo": {
                                "@type": "ImageObject",
                                "url": "https://dzone.com/themes/dz20/images/dz_cropped.png"
                            }
                        },
                        "articleBody": "In this article, we will discuss how to use Swagger 2 for a Spring Boot 2 RESTful API Documentation. For this article, we will use the Springfox implementation of the Swagger 2 specification. As we know that Spring Boot makes developing RESTful services ridiculously easy — and using Swagger makes documenting your RESTful services easy. In this article, we will create Spring Boot 2 JPA CRUD RESTFul application and MySQL as a database and then we will integrate Swagger 2 for REST APIs documentation. In order to generate the Swagger documentation, swagger-core offers a set of annotations to declare and manipulate the output. In this tutorial, we will use below set of swagger-core annotations to build a RESTFul API documentation. A Quick Overview of Swagger-Core Annotations @Api Marks a class as a Swagger resource. @ApiModel Provides additional information about Swagger models. @ApiModelProperty Adds and manipulates data of a model property. @ApiOperation Describes an operation or typically an HTTP method against a specific path. @ApiParam Adds additional meta-data for operation parameters. @ApiResponse Describes a possible response of an operation. @ApiResponses A wrapper to allow a list of multiple ApiResponse objects. You can find more detailed about swagger annotations on https://github.com/swagger-api/swagger-core/wiki/annotations Table of Contents Tools and Technologies Used Packaging Structure The pom.xml File — Adding Swagger Dependencies Create JPA Entity — Employee.java Swagger 2 Annotations for REST Endpoints — EmployeeController.java Create Spring Data Repository — EmployeeRepository.java Exception(Error) Handling for RESTful Services Configuring Swagger 2 in the Application Swagger 2 Annotations for REST Endpoints Swagger 2 Annotations for Model Launching Swagger UI 1. Tools and Technologies Used Spring Boot — 2.0.5.RELEASE JDK — 1.8 or later Spring Framework — 5.0.8 RELEASE Hibernate — 5.2.17.Final JPA Maven — 3.2+ Swagger — 2+ springfox-swagger2 — 2.8.0 springfox-swagger-ui — 2.8.0 IDE — Eclipse or Spring Tool Suite (STS) Let's create and import Spring application in your favorite IDE. There are many ways to create a Spring Boot application. The simplest way is to use Spring Initializr at http://start.spring.io/, which is an online Spring Boot application generator. Please refer below project code structure for your reference. 2. Project Code Structure Finally, our project code looks like this: 3. Adding Swagger Dependencies The Swagger 2 specification, which is known as OpenAPI specification, has several implementations. Currently, Springfox that has replaced Swagger-SpringMVC (Swagger 1.2 and older) is popular for Spring Boot applications. Springfox supports both Swagger 1.2 and 2.0. We will be using Springfox in our project. To bring it in, we need the following dependency declaration in our Maven POM. &lt;dependency&gt; &lt;groupId&gt;io.springfox&lt;/groupId&gt; &lt;artifactId&gt;springfox-swagger2&lt;/artifactId&gt; &lt;version&gt;2.8.0&lt;/version&gt; &lt;/dependency&gt; In addition to Springfox , we also require Swagger UI. The code to include Swagger UI is this. &lt;dependency&gt; &lt;groupId&gt;io.springfox&lt;/groupId&gt; &lt;artifactId&gt;springfox-swagger-ui&lt;/artifactId&gt; &lt;version&gt;2.8.0&lt;/version&gt; &lt;/dependency&gt; The complete pom.xml file for your reference: &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; &lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt; &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt; &lt;groupId&gt;net.guides.springboot2&lt;/groupId&gt; &lt;artifactId&gt;springboot2-jpa-swagger2&lt;/artifactId&gt; &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt; &lt;packaging&gt;jar&lt;/packaging&gt; &lt;name&gt;springboot2-jpa-swagger2&lt;/name&gt; &lt;description&gt;Demo project for Spring Boot&lt;/description&gt; &lt;parent&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt; &lt;version&gt;2.0.5.RELEASE&lt;/version&gt; &lt;relativePath /&gt; &lt;!-- lookup parent from repository --&gt; &lt;/parent&gt; &lt;properties&gt; &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt; &lt;project.reporting.outputEncoding&gt;UTF-8&lt;/project.reporting.outputEncoding&gt; &lt;java.version&gt;1.8&lt;/java.version&gt; &lt;/properties&gt; &lt;dependencies&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-data-jpa&lt;/artifactId&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt; &lt;scope&gt;test&lt;/scope&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;mysql&lt;/groupId&gt; &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt; &lt;scope&gt;runtime&lt;/scope&gt; &lt;/dependency&gt; &lt;!-- Swagger --&gt; &lt;dependency&gt; &lt;groupId&gt;io.springfox&lt;/groupId&gt; &lt;artifactId&gt;springfox-swagger2&lt;/artifactId&gt; &lt;version&gt;2.8.0&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;io.springfox&lt;/groupId&gt; &lt;artifactId&gt;springfox-swagger-ui&lt;/artifactId&gt; &lt;version&gt;2.8.0&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;io.springfox&lt;/groupId&gt; &lt;artifactId&gt;springfox-bean-validators&lt;/artifactId&gt; &lt;version&gt;2.8.0&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;javax.xml&lt;/groupId&gt; &lt;artifactId&gt;jaxb-api&lt;/artifactId&gt; &lt;version&gt;2.1&lt;/version&gt; &lt;/dependency&gt; &lt;/dependencies&gt; &lt;build&gt; &lt;plugins&gt; &lt;plugin&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt; &lt;/plugin&gt; &lt;/plugins&gt; &lt;/build&gt; &lt;/project&gt; Let's first quickly create a CRUD Spring Boot RESTFul web services then we will integrate with swagger. 4. Create JPA Entity — Employee.java import javax.persistence.Column; import javax.persistence.Entity; import javax.persistence.GeneratedValue; import javax.persistence.GenerationType; import javax.persistence.Id; import javax.persistence.Table; @Entity @Table(name = &quot;employees&quot;) public class Employee { private long id; private String firstName; private String lastName; private String emailId; public Employee() { } public Employee(String firstName, String lastName, String emailId) { this.firstName = firstName; this.lastName = lastName; this.emailId = emailId; } @Id @GeneratedValue(strategy = GenerationType.AUTO) public long getId() { return id; } public void setId(long id) { this.id = id; } @Column(name = &quot;first_name&quot;, nullable = false) public String getFirstName() { return firstName; } public void setFirstName(String firstName) { this.firstName = firstName; } @Column(name = &quot;last_name&quot;, nullable = false) public String getLastName() { return lastName; } public void setLastName(String lastName) { this.lastName = lastName; } @Column(name = &quot;email_address&quot;, nullable = false) public String getEmailId() { return emailId; } public void setEmailId(String emailId) { this.emailId = emailId; } @Override public String toString() { return &quot;Employee [id=&quot; + id + &quot;, firstName=&quot; + firstName + &quot;, lastName=&quot; + lastName + &quot;, emailId=&quot; + emailId + &quot;]&quot;; } } 5. Create Spring Data Repository - EmployeeRepository.java import org.springframework.data.jpa.repository.JpaRepository; import org.springframework.stereotype.Repository; import net.guides.springboot2.springboot2jpacrudexample.model.Employee; @Repository public interface EmployeeRepository extends JpaRepository&lt;Employee, Long&gt;{ } 6. Create Spring Rest Controller - EmployeeController.java package net.guides.springboot2.springboot2jpacrudexample.controller; import java.util.HashMap; import java.util.List; import java.util.Map; import javax.validation.Valid; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.http.ResponseEntity; import org.springframework.web.bind.annotation.DeleteMapping; import org.springframework.web.bind.annotation.GetMapping; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.PostMapping; import org.springframework.web.bind.annotation.PutMapping; import org.springframework.web.bind.annotation.RequestBody; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RestController; import net.guides.springboot2.springboot2jpacrudexample.exception.ResourceNotFoundException; import net.guides.springboot2.springboot2jpacrudexample.model.Employee; import net.guides.springboot2.springboot2jpacrudexample.repository.EmployeeRepository; @RestController @RequestMapping(&quot;/api/v1&quot;) public class EmployeeController { @Autowired private EmployeeRepository employeeRepository; @GetMapping(&quot;/employees&quot;) public List&lt;Employee&gt; getAllEmployees() { return employeeRepository.findAll(); } @GetMapping(&quot;/employees/{id}&quot;) public ResponseEntity&lt;Employee&gt; getEmployeeById(@PathVariable(value = &quot;id&quot;) Long employeeId) throws ResourceNotFoundException { Employee employee = employeeRepository.findById(employeeId) .orElseThrow(() -&gt; new ResourceNotFoundException(&quot;Employee not found for this id :: &quot; + employeeId)); return ResponseEntity.ok().body(employee); } @PostMapping(&quot;/employees&quot;) public Employee createEmployee(@Valid @RequestBody Employee employee) { return employeeRepository.save(employee); } @PutMapping(&quot;/employees/{id}&quot;) public ResponseEntity&lt;Employee&gt; updateEmployee(@PathVariable(value = &quot;id&quot;) Long employeeId, @Valid @RequestBody Employee employeeDetails) throws ResourceNotFoundException { Employee employee = employeeRepository.findById(employeeId) .orElseThrow(() -&gt; new ResourceNotFoundException(&quot;Employee not found for this id :: &quot; + employeeId)); employee.setEmailId(employeeDetails.getEmailId()); employee.setLastName(employeeDetails.getLastName()); employee.setFirstName(employeeDetails.getFirstName()); final Employee updatedEmployee = employeeRepository.save(employee); return ResponseEntity.ok(updatedEmployee); } @DeleteMapping(&quot;/employees/{id}&quot;) public Map&lt;String, Boolean&gt; deleteEmployee(@PathVariable(value = &quot;id&quot;) Long employeeId) throws ResourceNotFoundException { Employee employee = employeeRepository.findById(employeeId) .orElseThrow(() -&gt; new ResourceNotFoundException(&quot;Employee not found for this id :: &quot; + employeeId)); employeeRepository.delete(employee); Map&lt;String, Boolean&gt; response = new HashMap&lt;&gt;(); response.put(&quot;deleted&quot;, Boolean.TRUE); return response; } } 7. Exception(Error) Handling for RESTful Services Spring Boot provides a good default implementation for exception handling for RESTful Services. Let's quickly look at the default Exception Handling features provided by Spring Boot. Resource Not Present Heres what happens when you fire a request to not resource found: http://localhost:8080/some-dummy-url { &quot;timestamp&quot;: 1512713804164, &quot;status&quot;: 404, &quot;error&quot;: &quot;Not Found&quot;, &quot;message&quot;: &quot;No message available&quot;, &quot;path&quot;: &quot;/some-dummy-url&quot; } What Happens When We Throw an Exception? Let's see what Spring Boot does when an exception is thrown from a Resource. we can specify the Response Status for a specific exception along with the definition of the Exception of '@ResponseStatus' annotation. Lets create a ResourceNotFoundException.java class. import org.springframework.http.HttpStatus; import org.springframework.web.bind.annotation.ResponseStatus; @ResponseStatus(value = HttpStatus.NOT_FOUND) public class ResourceNotFoundException extends Exception{ private static final long serialVersionUID = 1L; public ResourceNotFoundException(String message){ super(message); } } Customizing Error Response Structure Default error response provided by Spring Boot contains all the details that are typically needed. However, you might want to create a framework independent response structure for your organization. In that case, you can define a specific error response structure. Let's define a simple error response bean. import java.util.Date; public class ErrorDetails { private Date timestamp; private String message; private String details; public ErrorDetails(Date timestamp, String message, String details) { super(); this.timestamp = timestamp; this.message = message; this.details = details; } public Date getTimestamp() { return timestamp; } public String getMessage() { return message; } public String getDetails() { return details; } } To use ErrorDetails to return the error response, let's create a GlobalExceptionHandler class annotated with @ControllerAdvice annotation. This class handles exception specific and global exception in single place. import java.util.Date; import org.springframework.http.HttpStatus; import org.springframework.http.ResponseEntity; import org.springframework.web.bind.annotation.ControllerAdvice; import org.springframework.web.bind.annotation.ExceptionHandler; import org.springframework.web.context.request.WebRequest; @ControllerAdvice public class GlobalExceptionHandler { @ExceptionHandler(ResourceNotFoundException.class) public ResponseEntity&lt;?&gt; resourceNotFoundException(ResourceNotFoundException ex, WebRequest request) { ErrorDetails errorDetails = new ErrorDetails(new Date(), ex.getMessage(), request.getDescription(false)); return new ResponseEntity&lt;&gt;(errorDetails, HttpStatus.NOT_FOUND); } @ExceptionHandler(Exception.class) public ResponseEntity&lt;?&gt; globleExcpetionHandler(Exception ex, WebRequest request) { ErrorDetails errorDetails = new ErrorDetails(new Date(), ex.getMessage(), request.getDescription(false)); return new ResponseEntity&lt;&gt;(errorDetails, HttpStatus.INTERNAL_SERVER_ERROR); } } 8. Configuring Swagger 2 in the Application Springfox provides @EnableSwagger2 annotation which indicates that Swagger support should be enabled. This should be applied to a Spring Java config and should have an accompanying '@Configuration' annotation. Let's create a Docket bean in a Spring Boot configuration to configure Swagger 2 for the application. A Springfox Docket instance provides the primary API configuration with sensible defaults and convenience methods for configuration. Let's customizing Swagger by providing information about our API in the Swagger2Config class like this. package net.guides.springboot2.springboot2swagger2.config; import static springfox.documentation.builders.PathSelectors.regex; import java.util.Collections; import org.springframework.context.annotation.Bean; import org.springframework.context.annotation.Configuration; import springfox.documentation.builders.ApiInfoBuilder; import springfox.documentation.builders.PathSelectors; import springfox.documentation.builders.RequestHandlerSelectors; import springfox.documentation.service.ApiInfo; import springfox.documentation.service.Contact; import springfox.documentation.spi.DocumentationType; import springfox.documentation.spring.web.plugins.Docket; import springfox.documentation.swagger2.annotations.EnableSwagger2; @Configuration @EnableSwagger2 public class Swagger2Config { @Bean public Docket api() { return new Docket(DocumentationType.SWAGGER_2).select() .apis(RequestHandlerSelectors .basePackage(&quot;net.guides.springboot2.springboot2swagger2.controller&quot;)) .paths(PathSelectors.regex(&quot;/.*&quot;)) .build().apiInfo(apiEndPointsInfo()); } private ApiInfo apiEndPointsInfo() { return new ApiInfoBuilder().title(&quot;Spring Boot REST API&quot;) .description(&quot;Employee Management REST API&quot;) .contact(new Contact(&quot;Ramesh Fadatare&quot;, &quot;www.javaguides.net&quot;, &quot;ramesh24fadatare@gmail.com&quot;)) .license(&quot;Apache 2.0&quot;) .licenseUrl(&quot;http://www.apache.org/licenses/LICENSE-2.0.html&quot;) .version(&quot;1.0.0&quot;) .build(); } } In this configuration class, the @EnableSwagger2 annotation enables Swagger support in the class. The select() method called on the Docket bean instance returns an ApiSelectorBuilder , which provides the apis() and paths() methods that are used to filter the controllers and methods that are being documented using String predicates. In the code, the RequestHandlerSelectors.basePackage predicate matches the net.guides.springboot2.springboot2swagger2.controller base package to filter the API. In the Swagger2Config class, we have added an apiEndPointsInfo() method that returns and ApiInfo object initialized with information about our API. The Swagger 2-generated documentation now looks similar to this: 9. Swagger 2 Annotations for REST Endpoints Let's discuss the important annotations that swagger provided to customize REST endpoints documentation. We can use the @Api annotation on our EmployeeController class to describe our API. @Api(value=&quot;Employee Management System&quot;, description=&quot;Operations pertaining to employee in Employee Management System&quot;) public class EmployeeController {} For each of our operation endpoints, we can use the @ApiOperation annotation to describe the endpoint and its response type, like this: @ApiOperation(value = &quot;View a list of available employees&quot;, response = List.class) @GetMapping(&quot;/employees&quot;) public List &lt; Employee &gt; getAllEmployees() { return employeeRepository.findAll(); } Swagger 2 also allows overriding the default response messages of HTTP methods. You can use the @ApiResponse annotation to document other responses, in addition to the regular HTTP 200 OK, like this. @ApiOperation(value = &quot;View a list of available employees&quot;, response = List.class) @ApiResponses(value = { @ApiResponse(code = 200, message = &quot;Successfully retrieved list&quot;), @ApiResponse(code = 401, message = &quot;You are not authorized to view the resource&quot;), @ApiResponse(code = 403, message = &quot;Accessing the resource you were trying to reach is forbidden&quot;), @ApiResponse(code = 404, message = &quot;The resource you were trying to reach is not found&quot;) }) @GetMapping(&quot;/employees&quot;) public List &lt; Employee &gt; getAllEmployees() { return employeeRepository.findAll(); } We can also use @ApiParam annotation to add additional meta-data for operation parameters like this: @ApiOperation(value = &quot;Add an employee&quot;) @PostMapping(&quot;/employees&quot;) public Employee createEmployee( @ApiParam(value = &quot;Employee object store in database table&quot;, required = true) @Valid @RequestBody Employee employee) { return employeeRepository.save(employee); } The complete EmployeeController code with swagger annotations: package net.guides.springboot2.springboot2swagger2.controller; import java.util.HashMap; import java.util.List; import java.util.Map; import javax.validation.Valid; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.http.ResponseEntity; import org.springframework.web.bind.annotation.DeleteMapping; import org.springframework.web.bind.annotation.GetMapping; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.PostMapping; import org.springframework.web.bind.annotation.PutMapping; import org.springframework.web.bind.annotation.RequestBody; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RestController; import io.swagger.annotations.Api; import io.swagger.annotations.ApiOperation; import io.swagger.annotations.ApiParam; import io.swagger.annotations.ApiResponse; import io.swagger.annotations.ApiResponses; import net.guides.springboot2.springboot2swagger2.exception.ResourceNotFoundException; import net.guides.springboot2.springboot2swagger2.model.Employee; import net.guides.springboot2.springboot2swagger2.repository.EmployeeRepository; @RestController @RequestMapping(&quot;/api/v1&quot;) @Api(value = &quot;Employee Management System&quot;, description = &quot;Operations pertaining to employee in Employee Management System&quot;) public class EmployeeController { @Autowired private EmployeeRepository employeeRepository; @ApiOperation(value = &quot;View a list of available employees&quot;, response = List.class) @ApiResponses(value = { @ApiResponse(code = 200, message = &quot;Successfully retrieved list&quot;), @ApiResponse(code = 401, message = &quot;You are not authorized to view the resource&quot;), @ApiResponse(code = 403, message = &quot;Accessing the resource you were trying to reach is forbidden&quot;), @ApiResponse(code = 404, message = &quot;The resource you were trying to reach is not found&quot;) }) @GetMapping(&quot;/employees&quot;) public List &lt; Employee &gt; getAllEmployees() { return employeeRepository.findAll(); } @ApiOperation(value = &quot;Get an employee by Id&quot;) @GetMapping(&quot;/employees/{id}&quot;) public ResponseEntity &lt; Employee &gt; getEmployeeById( @ApiParam(value = &quot;Employee id from which employee object will retrieve&quot;, required = true) @PathVariable(value = &quot;id&quot;) Long employeeId) throws ResourceNotFoundException { Employee employee = employeeRepository.findById(employeeId) .orElseThrow(() - &gt; new ResourceNotFoundException(&quot;Employee not found for this id :: &quot; + employeeId)); return ResponseEntity.ok().body(employee); } @ApiOperation(value = &quot;Add an employee&quot;) @PostMapping(&quot;/employees&quot;) public Employee createEmployee( @ApiParam(value = &quot;Employee object store in database table&quot;, required = true) @Valid @RequestBody Employee employee) { return employeeRepository.save(employee); } @ApiOperation(value = &quot;Update an employee&quot;) @PutMapping(&quot;/employees/{id}&quot;) public ResponseEntity &lt; Employee &gt; updateEmployee( @ApiParam(value = &quot;Employee Id to update employee object&quot;, required = true) @PathVariable(value = &quot;id&quot;) Long employeeId, @ApiParam(value = &quot;Update employee object&quot;, required = true) @Valid @RequestBody Employee employeeDetails) throws ResourceNotFoundException { Employee employee = employeeRepository.findById(employeeId) .orElseThrow(() - &gt; new ResourceNotFoundException(&quot;Employee not found for this id :: &quot; + employeeId)); employee.setEmailId(employeeDetails.getEmailId()); employee.setLastName(employeeDetails.getLastName()); employee.setFirstName(employeeDetails.getFirstName()); final Employee updatedEmployee = employeeRepository.save(employee); return ResponseEntity.ok(updatedEmployee); } @ApiOperation(value = &quot;Delete an employee&quot;) @DeleteMapping(&quot;/employees/{id}&quot;) public Map &lt; String, Boolean &gt; deleteEmployee( @ApiParam(value = &quot;Employee Id from which employee object will delete from database table&quot;, required = true) @PathVariable(value = &quot;id&quot;) Long employeeId) throws ResourceNotFoundException { Employee employee = employeeRepository.findById(employeeId) .orElseThrow(() - &gt; new ResourceNotFoundException(&quot;Employee not found for this id :: &quot; + employeeId)); employeeRepository.delete(employee); Map &lt; String, Boolean &gt; response = new HashMap &lt; &gt; (); response.put(&quot;deleted&quot;, Boolean.TRUE); return response; } } The output of the operation endpoints on the browser is this: The current documentation is missing one thing: documentation of the Employee JPA entity. We will generate documentation for our model in the next step. 10. Swagger 2 Annotations for Model You can use the @ApiModelProperty annotation to describe the properties of the Employee model. With @ApiModelProperty, we can also document a property as required. The code of our Employee class is this. package net.guides.springboot2.springboot2swagger2.model; import javax.persistence.Column; import javax.persistence.Entity; import javax.persistence.GeneratedValue; import javax.persistence.GenerationType; import javax.persistence.Id; import javax.persistence.Table; import io.swagger.annotations.ApiModel; import io.swagger.annotations.ApiModelProperty; @Entity @Table(name = &quot;employees&quot;) @ApiModel(description = &quot;All details about the Employee. &quot;) public class Employee { @ApiModelProperty(notes = &quot;The database generated employee ID&quot;) private long id; @ApiModelProperty(notes = &quot;The employee first name&quot;) private String firstName; @ApiModelProperty(notes = &quot;The employee last name&quot;) private String lastName; @ApiModelProperty(notes = &quot;The employee email id&quot;) private String emailId; public Employee() { } public Employee(String firstName, String lastName, String emailId) { this.firstName = firstName; this.lastName = lastName; this.emailId = emailId; } @Id @GeneratedValue(strategy = GenerationType.AUTO) public long getId() { return id; } public void setId(long id) { this.id = id; } @Column(name = &quot;first_name&quot;, nullable = false) public String getFirstName() { return firstName; } public void setFirstName(String firstName) { this.firstName = firstName; } @Column(name = &quot;last_name&quot;, nullable = false) public String getLastName() { return lastName; } public void setLastName(String lastName) { this.lastName = lastName; } @Column(name = &quot;email_address&quot;, nullable = false) public String getEmailId() { return emailId; } public void setEmailId(String emailId) { this.emailId = emailId; } @Override public String toString() { return &quot;Employee [id=&quot; + id + &quot;, firstName=&quot; + firstName + &quot;, lastName=&quot; + lastName + &quot;, emailId=&quot; + emailId + &quot;]&quot;; } } The Swagger 2 generated documentation for Employee is this: 11. Launching Swagger UI Let's use the Swagger UI available at http://localhost:8080/swagger-ui.html. Below screenshot shows the Home Page of Swagger UI. It shows a list of all the resources that are exposed. Expand employee-controller and Models looks as below screenshots: Expand each REST API and you can use the ‘Try it out’ button to execute a request and see the response. Below are a demo of getting all employees and delete employee looks like this: Check out the source code of this tutorial on GitHub - https://github.com/RameshMF/spring-boot-tutorial/tree/master/springboot2-jpa-swagger2",
                        "mainEntityOfPage": {
                            "@type": "WebPage",
                            "@id": "https://dzone.com/articles/spring-boot-2-restful-api-documentation-with-swagg"
                        },
                        "image": {
                            "@type": "ImageObject",
                            "url": "https://dzone.com//dz2cdn4.dzone.com/storage/article-thumb/10654447-thumb.jpg"
                        }
                    }
                </script>
            </div>

            <script type="application/ld+json">
                {
                    "@context": "https://schema.org",
                    "@type": "BreadcrumbList",
                    "itemListElement": [{
                        "@type": "ListItem",
                        "position": 1,
                        "name": "DZone",
                        "item": "https://dzone.com"
                    }, {
                        "@type": "ListItem",
                        "position": 2,
                        "name": "Integration Zone",
                        "item": "https://dzone.com/enterprise-integration-training-tools-news"
                    }, {
                        "@type": "ListItem",
                        "position": 3,
                        "name": "Spring Boot 2 RESTful API Documentation With Swagger 2 Tutorial",
                        "item": "https://dzone.com/articles/spring-boot-2-restful-api-documentation-with-swagg"
                    }]
                }
            </script>

        <article>
            <div class="content" ng-class="{'content-full': (width <= 1024 && edition)}" >
                <div class="header">
                    <div class="col-xs-12 breadcrumb-padding">
                        <a href="/">DZone</a>
                        >
                            <a href="/enterprise-integration-training-tools-news">Integration Zone</a>
                            >
                            <a href="#">Spring Boot 2 RESTful API Documentation With Swagger 2 Tutorial</a>
                    </div>
                    <div class="header-title">
                        <div class="title" ng-if="articles[0].rawType != 'guide'">
                            <h1 class="article-title">
                                Spring Boot 2 RESTful API Documentation With Swagger 2 Tutorial
                            </h1>
                        </div>

                        <div class="guide-title" ng-if="articles[0].rawType == 'guide'" ng-cloak>
                            <div class="guide-intro">
                                DZone 's Guide to
                            </div>
                            <h1 class="article-title">
                                Spring Boot 2 RESTful API Documentation With Swagger 2 Tutorial
                            </h1>
                        </div>

                        <div class="subhead">
                            <h3>
                                Let's look at Spring Boot 2 RESTful API documentation with Swagger 2 tutorial.
                            </h3>
                        </div>

                        <div class="publish-meta"
                             ng-if="articles[0].rawType != 'guide' && articles[0].rawType != 'whitepaper'">


    <div class="article-author-meta" >
        <a href="/users/3439641/ramesh-fadatare.html" >
             <img src="" data-src="https://dz2cdn2.dzone.com/thumbnail?fid=10398005&w=80"                     class="avatar lazyload"
                    width="40"/>
        </a> by

        <div class="author-info">
            <span class="author-name">
                    <a th-popup="users.profile.mini" popup-data="{user: 3439641}" href="/users/3439641/ramesh-fadatare.html">
                       Ramesh Fadatare
                    </a>
            </span>
        </div>


            <span ng-if="author.isCore" class="badge-container">
                <i tooltip="DZone Core" class="icon-core-1"></i>CORE
            </span>

        &middot;
    </div>
                            <span class="author-date">Nov. 12, 18</span>
                            &middot;
                                <a href="/enterprise-integration-training-tools-news"
                                    id="portal-name"><span
                                            class="portal-name">Integration
                                Zone</span></a>
                            &middot;
                                <article-type type="'tutorial'"></article-type>
                        </div>

                        <div class="publish-meta" ng-if="articles[0].rawType == 'whitepaper'" ng-cloak>
                            Free Resource
                        </div>

                    </div>
                </div>
                    <div class="obsolete-warning" ng-if="article.isOld" ng-cloak>
                        <old-warning-message time="article.articleDate" body="daysOldBody" type="article.rawType"
                                             title="daysOldTitle"></old-warning-message>
                    </div>

                <div class="author-n-useraction">
                    <div class="like action">
                        <dz-like template="like-article.html"
                                 node="articles[0]">        <div class="dz-like"
             

<a href="#">
    <i ng-class="{'icon-thumbs-up-alt': status.liked, 'icon-thumbs-up liked': !status.liked}"></i>
    <span>Like (30)</span>
</a>
</div>

                            </dz-like>
                    </div>

                    <div class="comment action">
                        <p ng-show="!articles[0].isLocked" slider-toggle="commentsSlider"
                           slider-data="{parent: articles[0]}"
                           activate-with-url-params="{showComments: articles[0].id}">
                            <span><i class="icon-comment"
                                     tooltip-html-unsafe="{{ commentTooltip(articles[0]) }}"></span></i>
                            Comment (<span class="comment-after number-of-comments"
                                           ng-bind="articles[0].nComments">2</span>)
                        </p>
                        <p ng-show="articles[0].isLocked">
                <span ng-cloak><i class="icon-icon-comment comment-disabled"
                                  tooltip-html-unsafe="Comments have been disabled for this article"></i></span>
                        </p>
                    </div>

                    <div class="save action">
                        <dz-save template="link-article-save.html" node="articles[0]"
                                 class="save">    <div class="save icon-star-empty"
         ><span
                class="action-label">Save</span></div>

                            </dz-save>
                    </div>

                    <div class="tweet action"><a ng-href="#"
                                                 ng-click='shareTwitter($event, articles[0].header.title, articles[0].url)'
                                                 class="title" target="_blank"><span><i class="icon-twitter"></i></span>
                            <span class="action-label">Tweet</span></a>
                    </div>

                    <div class="pull-right">
                        <div class="article-views action" ng-cloak><i class="icon-eye"></i> {{ articles[0].views |
                            formatCount}}

                            <span class="action-label">Views</span>
                        </div>

                            <div class="user-n-admin-action action" ng-if="canEdit(articles[0]) || canDelete(articles[0])">
                                <div class="mod-tools" dropdown is-open="dropdown.open" ng-cloak>
                            <span dropdown-toggle>
                                <i class="icon-cog"></i>
                            </span>
                                    <ul class="dropdown-menu">
                                        <li><a ng-if="canEdit(articles[0])"
                                               ng-href="/content/{{ articles[0].id }}/edit.html">Edit</a>
                                        </li>
                                        <li><a href="#" ng-if="canDelete(articles[0])"
                                               ng-click="delete(articles[0])">Delete</a>
                                        </li>
                                        <li><a href="#" ng-if="perms.canPublish"
                                               ng-click="toggleComments(articles[0])">{{ articles[0].isLocked
                                                ? 'Enable' : 'Disable' }} comments</a></li>
                                        <li><a href="#" ng-if="perms.canPublish && !articles[0].isLocked"
                                               ng-click="toggleLimitComments(articles[0])">
                                                {{ articles[0].isLimited ? 'Remove comment limits' : 'Enable moderated
                                                comments' }}
                                            </a></li>

                                    </ul>
                                </div>
                            </div>
                    </div>
                </div>
                    <div class="signin-prompt">
                        <p>Join the DZone community and get the full member experience.</p>
                        <a id="article-signin-prompt" href="#" ng-click="loginForm()">Join For Free</a>
                    </div>
                    <div class="arrow-down"></div>

                <div ng-if="articles[0].readyForAd">
                  <div class="article-bumper  article-bumper-top" dc-slot="ads.bt1.slot(articles[0], 0)"
                       tags="ads.bt1.tags(articles[0], 0)" size="ads.bt1.size(articles[0], 0)"></div>
                </div>

                <div ng-if="!edition || (articles[0].rawType != 'refcard' && articles[0].rawType != 'guide')">
                    <div class="content-html" dz-code-container
                         ng-non-bindable>
                    <p pid="140">In this article, we will discuss how to use <em>Swagger 2</em> for a Spring Boot 2 RESTful API Documentation. For this article, we will use the <em>Springfox</em> implementation of the <em>Swagger 2</em> specification.</p> 
<p pid="141">As we know that <a href="http://www.javaguides.net/p/spring-boot-tutorial.html" target="_blank" rel="nofollow">Spring Boot</a> makes developing RESTful services ridiculously easy — and using <a href="https://swagger.io/" target="_blank" rel="nofollow">Swagger</a> makes documenting your RESTful services easy.</p> 
<p pid="142">In this article, we will create Spring Boot 2 JPA CRUD RESTFul application and MySQL as a database and then we will integrate &nbsp;<code>Swagger 2</code><span id="_tmp_pre_8">&nbsp;</span>&nbsp;for REST APIs documentation.</p> 
<p pid="143">In order to generate the Swagger documentation, swagger-core offers a set of annotations to declare and manipulate the output. In this tutorial, we will use below set of swagger-core annotations to build a RESTFul API documentation.</p> 
<h2>A Quick Overview of Swagger-Core Annotations</h2> 
<div> 
 <table> 
  <tbody> 
   <tr> 
    <td>@Api</td> 
    <td>Marks a class as a Swagger resource.</td> 
   </tr> 
   <tr> 
    <td>@ApiModel</td> 
    <td>Provides additional information about Swagger models.</td> 
   </tr> 
   <tr> 
    <td>@ApiModelProperty</td> 
    <td>Adds and manipulates data of a model property.</td> 
   </tr> 
   <tr> 
    <td>@ApiOperation</td> 
    <td>Describes an operation or typically an HTTP method against a specific path.</td> 
   </tr> 
   <tr> 
    <td>@ApiParam</td> 
    <td>Adds additional meta-data for operation parameters.</td> 
   </tr> 
   <tr> 
    <td>@ApiResponse</td> 
    <td>Describes a possible response of an operation.</td> 
   </tr> 
   <tr> 
    <td>@ApiResponses</td> 
    <td><p>A wrapper to allow a list of multiple ApiResponse objects.</p></td> 
   </tr> 
  </tbody> 
 </table> 
</div> 
<p pid="144">You can find more detailed about swagger annotations on <a href="https://github.com/swagger-api/swagger-core/wiki/annotations" target="_blank" rel="nofollow">https://github.com/swagger-api/swagger-core/wiki/annotations</a></p> 
<h2>Table of Contents</h2> 
<ol> 
 <li>Tools and Technologies Used</li> 
 <li>Packaging Structure</li> 
 <li>The pom.xml File — Adding Swagger Dependencies</li> 
 <li>Create JPA Entity — Employee.java</li> 
 <li>Swagger 2 Annotations for REST Endpoints — EmployeeController.java</li> 
 <li>Create Spring Data Repository — EmployeeRepository.java</li> 
 <li>Exception(Error) Handling for RESTful Services</li> 
 <li>Configuring Swagger 2 in the Application</li> 
 <li>Swagger 2 Annotations for REST Endpoints</li> 
 <li>Swagger 2 Annotations for Model</li> 
 <li>Launching Swagger UI</li> 
</ol> 
<h2>1. Tools and Technologies Used</h2> 
<ul> 
 <li>Spring Boot — 2.0.5.RELEASE</li> 
 <li>JDK — 1.8 or later</li> 
 <li>Spring Framework — 5.0.8 RELEASE</li> 
 <li>Hibernate — 5.2.17.Final</li> 
 <li>JPA</li> 
 <li>Maven — 3.2+</li> 
 <li>Swagger — 2+</li> 
 <li>springfox-swagger2 — 2.8.0</li> 
 <li>springfox-swagger-ui — 2.8.0</li> 
 <li>IDE — Eclipse or Spring Tool Suite (STS)</li> 
</ul> 
<p pid="145">Let's create and import Spring application in your favorite IDE. There are many ways to create a Spring Boot application. The simplest way is to use Spring Initializr at <a href="http://start.spring.io/" target="_blank" rel="nofollow">http://start.spring.io/</a>, which is an online Spring Boot application generator.</p> 
<p pid="146">Please refer below project code structure for your reference.</p> 
<h2>2. Project Code Structure</h2> 
<p pid="147">Finally, our project code looks like this:</p> 
<p pid="148"><a href="https://2.bp.blogspot.com/-LidAjYVtXg0/W9CC4q86VjI/AAAAAAAAEbo/5pTcTpkSTpIPbUDlabr868EOR3kavSRKwCLcBGAs/s1600/project-code-structure.PNG" rel="nofollow"><img class="fr-fin fr-dib" src="https://2.bp.blogspot.com/-LidAjYVtXg0/W9CC4q86VjI/AAAAAAAAEbo/5pTcTpkSTpIPbUDlabr868EOR3kavSRKwCLcBGAs/s1600/project-code-structure.PNG" /></a></p> 
<h2>3. Adding Swagger Dependencies</h2> 
<p pid="149">The <code>Swagger 2</code> specification, which is known as OpenAPI specification, has several implementations. Currently, <code>Springfox</code> that has replaced Swagger-SpringMVC (Swagger 1.2 and older) is popular for Spring Boot applications. Springfox supports both Swagger 1.2 and 2.0.</p> 
<p pid="150">We will be using <code>Springfox</code> in our project. To bring it in, we need the following dependency declaration in our Maven POM.</p> 
<pre><code lang="application/xml">&lt;dependency&gt;
    &lt;groupId&gt;io.springfox&lt;/groupId&gt;
    &lt;artifactId&gt;springfox-swagger2&lt;/artifactId&gt;
    &lt;version&gt;2.8.0&lt;/version&gt;
&lt;/dependency&gt;</code></pre> 
<p pid="151">In addition to <code>Springfox</code> , we also require Swagger UI. The code to include Swagger UI is this.</p> 
<pre><code lang="application/xml">&lt;dependency&gt;
    &lt;groupId&gt;io.springfox&lt;/groupId&gt;
    &lt;artifactId&gt;springfox-swagger-ui&lt;/artifactId&gt;
    &lt;version&gt;2.8.0&lt;/version&gt;
&lt;/dependency&gt;</code></pre> 
<p pid="152">The complete <strong>pom.xml</strong> file for your reference:</p> 
<pre><code lang="application/xml">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;project
    xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot;
    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;
 xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;
    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;
    &lt;groupId&gt;net.guides.springboot2&lt;/groupId&gt;
    &lt;artifactId&gt;springboot2-jpa-swagger2&lt;/artifactId&gt;
    &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;
    &lt;packaging&gt;jar&lt;/packaging&gt;
    &lt;name&gt;springboot2-jpa-swagger2&lt;/name&gt;
    &lt;description&gt;Demo project for Spring Boot&lt;/description&gt;
    &lt;parent&gt;
        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
        &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;
        &lt;version&gt;2.0.5.RELEASE&lt;/version&gt;
        &lt;relativePath /&gt;
        &lt;!-- lookup parent from repository --&gt;
    &lt;/parent&gt;
    &lt;properties&gt;
        &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;
        &lt;project.reporting.outputEncoding&gt;UTF-8&lt;/project.reporting.outputEncoding&gt;
        &lt;java.version&gt;1.8&lt;/java.version&gt;
    &lt;/properties&gt;
    &lt;dependencies&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
            &lt;artifactId&gt;spring-boot-starter-data-jpa&lt;/artifactId&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
            &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
            &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;
            &lt;scope&gt;test&lt;/scope&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;mysql&lt;/groupId&gt;
            &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;
            &lt;scope&gt;runtime&lt;/scope&gt;
        &lt;/dependency&gt;
        &lt;!-- Swagger --&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;io.springfox&lt;/groupId&gt;
            &lt;artifactId&gt;springfox-swagger2&lt;/artifactId&gt;
            &lt;version&gt;2.8.0&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;io.springfox&lt;/groupId&gt;
            &lt;artifactId&gt;springfox-swagger-ui&lt;/artifactId&gt;
            &lt;version&gt;2.8.0&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;io.springfox&lt;/groupId&gt;
            &lt;artifactId&gt;springfox-bean-validators&lt;/artifactId&gt;
            &lt;version&gt;2.8.0&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;javax.xml&lt;/groupId&gt;
            &lt;artifactId&gt;jaxb-api&lt;/artifactId&gt;
            &lt;version&gt;2.1&lt;/version&gt;
        &lt;/dependency&gt;
    &lt;/dependencies&gt;
    &lt;build&gt;
        &lt;plugins&gt;
            &lt;plugin&gt;
                &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
                &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;
            &lt;/plugin&gt;
        &lt;/plugins&gt;
    &lt;/build&gt;
&lt;/project&gt;</code></pre> 
<p pid="153">Let's first quickly create a CRUD Spring Boot RESTFul web services then we will integrate with swagger.</p> 
<h2>4. Create JPA Entity — Employee.java</h2> 
<pre><code lang="text/x-java">import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;

@Entity
@Table(name = &quot;employees&quot;)
public class Employee {

 private long id;
 private String firstName;
 private String lastName;
 private String emailId;

 public Employee() {

 }

 public Employee(String firstName, String lastName, String emailId) {
  this.firstName = firstName;
  this.lastName = lastName;
  this.emailId = emailId;
 }

 @Id
 @GeneratedValue(strategy = GenerationType.AUTO)
 public long getId() {
  return id;
 }
 public void setId(long id) {
  this.id = id;
 }

 @Column(name = &quot;first_name&quot;, nullable = false)
 public String getFirstName() {
  return firstName;
 }
 public void setFirstName(String firstName) {
  this.firstName = firstName;
 }

 @Column(name = &quot;last_name&quot;, nullable = false)
 public String getLastName() {
  return lastName;
 }
 public void setLastName(String lastName) {
  this.lastName = lastName;
 }

 @Column(name = &quot;email_address&quot;, nullable = false)
 public String getEmailId() {
  return emailId;
 }
 public void setEmailId(String emailId) {
  this.emailId = emailId;
 }

 @Override
 public String toString() {
  return &quot;Employee [id=&quot; + id + &quot;, firstName=&quot; + firstName + &quot;, lastName=&quot; + lastName + &quot;, emailId=&quot; + emailId
    + &quot;]&quot;;
 }

}</code></pre> 
<h2>5. Create Spring Data Repository - EmployeeRepository.java</h2> 
<pre><code lang="text/x-java">import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.stereotype.Repository;

import net.guides.springboot2.springboot2jpacrudexample.model.Employee;

@Repository
public interface EmployeeRepository extends JpaRepository&lt;Employee, Long&gt;{

}</code></pre> 
<h2>6. Create Spring Rest Controller - EmployeeController.java</h2> 
<pre><code lang="text/x-java">package net.guides.springboot2.springboot2jpacrudexample.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import net.guides.springboot2.springboot2jpacrudexample.exception.ResourceNotFoundException;
import net.guides.springboot2.springboot2jpacrudexample.model.Employee;
import net.guides.springboot2.springboot2jpacrudexample.repository.EmployeeRepository;

@RestController
@RequestMapping(&quot;/api/v1&quot;)
public class EmployeeController {
 @Autowired
 private EmployeeRepository employeeRepository;

 @GetMapping(&quot;/employees&quot;)
 public List&lt;Employee&gt; getAllEmployees() {
  return employeeRepository.findAll();
 }

 @GetMapping(&quot;/employees/{id}&quot;)
 public ResponseEntity&lt;Employee&gt; getEmployeeById(@PathVariable(value = &quot;id&quot;) Long employeeId)
   throws ResourceNotFoundException {
  Employee employee = employeeRepository.findById(employeeId)
    .orElseThrow(() -&gt; new ResourceNotFoundException(&quot;Employee not found for this id :: &quot; + employeeId));
  return ResponseEntity.ok().body(employee);
 }

 @PostMapping(&quot;/employees&quot;)
 public Employee createEmployee(@Valid @RequestBody Employee employee) {
  return employeeRepository.save(employee);
 }

 @PutMapping(&quot;/employees/{id}&quot;)
 public ResponseEntity&lt;Employee&gt; updateEmployee(@PathVariable(value = &quot;id&quot;) Long employeeId,
   @Valid @RequestBody Employee employeeDetails) throws ResourceNotFoundException {
  Employee employee = employeeRepository.findById(employeeId)
    .orElseThrow(() -&gt; new ResourceNotFoundException(&quot;Employee not found for this id :: &quot; + employeeId));

  employee.setEmailId(employeeDetails.getEmailId());
  employee.setLastName(employeeDetails.getLastName());
  employee.setFirstName(employeeDetails.getFirstName());
  final Employee updatedEmployee = employeeRepository.save(employee);
  return ResponseEntity.ok(updatedEmployee);
 }

 @DeleteMapping(&quot;/employees/{id}&quot;)
 public Map&lt;String, Boolean&gt; deleteEmployee(@PathVariable(value = &quot;id&quot;) Long employeeId)
   throws ResourceNotFoundException {
  Employee employee = employeeRepository.findById(employeeId)
    .orElseThrow(() -&gt; new ResourceNotFoundException(&quot;Employee not found for this id :: &quot; + employeeId));

  employeeRepository.delete(employee);
  Map&lt;String, Boolean&gt; response = new HashMap&lt;&gt;();
  response.put(&quot;deleted&quot;, Boolean.TRUE);
  return response;
 }
}</code></pre> 
<h2>7. Exception(Error) Handling for RESTful Services</h2> 
<p pid="154">Spring Boot provides a good default implementation for exception handling for RESTful Services. Let's quickly look at the default Exception Handling features provided by Spring Boot.</p> 
<h3>Resource Not Present</h3> 
<p pid="155">Heres what happens when you fire a request to not resource found: <a href="http://localhost:8080/some-dummy-url" target="_blank" rel="nofollow">http://localhost:8080/some-dummy-url</a></p> 
<pre><code lang="application/json">{
  &quot;timestamp&quot;: 1512713804164,
  &quot;status&quot;: 404,
  &quot;error&quot;: &quot;Not Found&quot;,
  &quot;message&quot;: &quot;No message available&quot;,
  &quot;path&quot;: &quot;/some-dummy-url&quot;
}</code></pre> 
<h2 pid="70">What Happens When We Throw an Exception?</h2> 
<p pid="156">Let's see what Spring Boot does when an exception is thrown from a Resource. we can specify the Response Status for a specific exception along with the definition of the Exception of '@ResponseStatus' annotation.</p> 
<p pid="157">Lets create a <strong>ResourceNotFoundException.java </strong>class.</p> 
<pre><code lang="text/x-java">import org.springframework.http.HttpStatus;
import org.springframework.web.bind.annotation.ResponseStatus;

@ResponseStatus(value = HttpStatus.NOT_FOUND)
public class ResourceNotFoundException extends Exception{

 private static final long serialVersionUID = 1L;

 public ResourceNotFoundException(String message){
     super(message);
    }
}</code></pre> 
<h3>Customizing Error Response Structure</h3> 
<p pid="158">Default error response provided by Spring Boot contains all the details that are typically needed.</p> 
<p pid="159">However, you might want to create a framework independent response structure for your organization. In that case, you can define a specific error response structure.</p> 
<p pid="160">Let's define a simple error response bean.</p> 
<pre><code lang="text/x-java">import java.util.Date;

public class ErrorDetails {
 private Date timestamp;
 private String message;
 private String details;

 public ErrorDetails(Date timestamp, String message, String details) {
  super();
  this.timestamp = timestamp;
  this.message = message;
  this.details = details;
 }

 public Date getTimestamp() {
  return timestamp;
 }

 public String getMessage() {
  return message;
 }

 public String getDetails() {
  return details;
 }
}</code></pre> 
<p pid="161">To use <strong>ErrorDetails</strong> to return the error response, let's create a <strong>GlobalExceptionHandler </strong>class annotated with &nbsp;<code>@ControllerAdvice</code><span id="_tmp_pre_9">&nbsp;</span>&nbsp;annotation. This class handles exception specific and global exception in single place.</p> 
<pre><code lang="text/x-java">import java.util.Date;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.ControllerAdvice;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.context.request.WebRequest;

@ControllerAdvice
public class GlobalExceptionHandler {
 @ExceptionHandler(ResourceNotFoundException.class)
 public ResponseEntity&lt;?&gt; resourceNotFoundException(ResourceNotFoundException ex, WebRequest request) {
  ErrorDetails errorDetails = new ErrorDetails(new Date(), ex.getMessage(), request.getDescription(false));
  return new ResponseEntity&lt;&gt;(errorDetails, HttpStatus.NOT_FOUND);
 }

 @ExceptionHandler(Exception.class)
 public ResponseEntity&lt;?&gt; globleExcpetionHandler(Exception ex, WebRequest request) {
  ErrorDetails errorDetails = new ErrorDetails(new Date(), ex.getMessage(), request.getDescription(false));
  return new ResponseEntity&lt;&gt;(errorDetails, HttpStatus.INTERNAL_SERVER_ERROR);
 }
}</code></pre> 
<h2>8. Configuring Swagger 2 in the Application</h2> 
<p pid="162">Springfox provides &nbsp;<code>@EnableSwagger2</code><span id="_tmp_pre_10">&nbsp;</span>&nbsp;annotation which indicates that Swagger support should be enabled. This should be applied to a Spring Java config and should have an accompanying '@Configuration' annotation. </p> 
<p pid="163">Let's create a <strong>Docket</strong> bean in a Spring Boot configuration to configure Swagger 2 for the application. A <em>&nbsp;<code>Springfox</code><span id="_tmp_pre_11">&nbsp;</span>&nbsp;</em><strong>Docket </strong>instance provides the primary API configuration with sensible defaults and convenience methods for configuration. </p> 
<p pid="164">Let's customizing Swagger by providing information about our API in the &nbsp;<code>Swagger2Config</code><span id="_tmp_pre_12">&nbsp;</span>&nbsp;class like this.</p> 
<pre><code lang="text/x-java">package net.guides.springboot2.springboot2swagger2.config;

import static springfox.documentation.builders.PathSelectors.regex;

import java.util.Collections;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

import springfox.documentation.builders.ApiInfoBuilder;
import springfox.documentation.builders.PathSelectors;
import springfox.documentation.builders.RequestHandlerSelectors;
import springfox.documentation.service.ApiInfo;
import springfox.documentation.service.Contact;
import springfox.documentation.spi.DocumentationType;
import springfox.documentation.spring.web.plugins.Docket;
import springfox.documentation.swagger2.annotations.EnableSwagger2;

@Configuration
@EnableSwagger2
public class Swagger2Config {
    @Bean
    public Docket api() {
        return new Docket(DocumentationType.SWAGGER_2).select()
            .apis(RequestHandlerSelectors
                .basePackage(&quot;net.guides.springboot2.springboot2swagger2.controller&quot;))
            .paths(PathSelectors.regex(&quot;/.*&quot;))
            .build().apiInfo(apiEndPointsInfo());
    }

    private ApiInfo apiEndPointsInfo() {

        return new ApiInfoBuilder().title(&quot;Spring Boot REST API&quot;)
            .description(&quot;Employee Management REST API&quot;)
            .contact(new Contact(&quot;Ramesh Fadatare&quot;, &quot;www.javaguides.net&quot;, &quot;ramesh24fadatare@gmail.com&quot;))
            .license(&quot;Apache 2.0&quot;)
            .licenseUrl(&quot;http://www.apache.org/licenses/LICENSE-2.0.html&quot;)
            .version(&quot;1.0.0&quot;)
            .build();
    }
}</code></pre> 
<p pid="165">In this configuration class, the &nbsp;<code>@EnableSwagger2</code><span id="_tmp_pre_13">&nbsp;</span>&nbsp;annotation enables Swagger support in the class. The &nbsp;<code>select()</code><span id="_tmp_pre_15">&nbsp;</span>&nbsp;method called on the Docket bean instance returns an &nbsp;<code>ApiSelectorBuilder</code><span id="_tmp_pre_14">&nbsp;</span>, which provides the &nbsp;<code>apis()</code><span id="_tmp_pre_16">&nbsp;</span>&nbsp;and &nbsp;<code>paths()</code><span id="_tmp_pre_17">&nbsp;</span>&nbsp;methods that are used to filter the controllers and methods that are being documented using String predicates.</p> 
<p pid="166">In the code, the <strong>RequestHandlerSelectors.basePackage</strong> predicate matches the &nbsp;<code>net.guides.springboot2.springboot2swagger2.controller</code><span id="_tmp_pre_18">&nbsp;</span>&nbsp;base package to filter the API.</p> 
<p pid="167">In the &nbsp;<code>Swagger2Config</code><span id="_tmp_pre_19">&nbsp;</span>&nbsp;class, we have added an&nbsp;<code> apiEndPointsInfo()</code><span id="_tmp_pre_20">&nbsp;</span>&nbsp;method that returns and <strong>ApiInfo</strong> object initialized with information about our API.</p> 
<p pid="168">The Swagger 2-generated documentation now looks similar to this:</p> 
<p pid="169"><a href="https://2.bp.blogspot.com/-0P_T-U_YmFU/W9CD87JnyJI/AAAAAAAAEb0/dB9xRud-iIMhFD3QWA9a3bi8YXQgxO_7gCLcBGAs/s1600/swagger-config.PNG" rel="nofollow"><img class="fr-fin fr-dib" src="https://2.bp.blogspot.com/-0P_T-U_YmFU/W9CD87JnyJI/AAAAAAAAEb0/dB9xRud-iIMhFD3QWA9a3bi8YXQgxO_7gCLcBGAs/s1600/swagger-config.PNG" /></a></p> 
<h2>9. Swagger 2 Annotations for REST Endpoints</h2> 
<p pid="170">Let's discuss the important annotations that swagger provided to customize REST endpoints documentation.</p> 
<p pid="171">We can use the <strong>@Api</strong> annotation on our &nbsp;<code>EmployeeController</code><span id="_tmp_pre_7">&nbsp;</span>&nbsp;class to describe our API.</p> 
<pre><code lang="text/x-java">@Api(value=&quot;Employee Management System&quot;, description=&quot;Operations pertaining to employee in Employee Management System&quot;)
public class EmployeeController {}</code></pre> 
<p pid="172">For each of our operation endpoints, we can use the <strong>@ApiOperation</strong> annotation to describe the endpoint and its response type, like this:</p> 
<pre><code lang="text/x-java">@ApiOperation(value = &quot;View a list of available employees&quot;, response = List.class)
@GetMapping(&quot;/employees&quot;)
public List &lt; Employee &gt; getAllEmployees() {
    return employeeRepository.findAll();
}</code></pre> 
<p pid="173">&nbsp;<code>Swagger 2</code><span id="_tmp_pre_6">&nbsp;</span>&nbsp;also allows overriding the default response messages of HTTP methods. You can use the <strong>@ApiResponse</strong> annotation to document other responses, in addition to the regular HTTP 200 OK, like this.</p> 
<pre><code lang="text/x-java">@ApiOperation(value = &quot;View a list of available employees&quot;, response = List.class)
@ApiResponses(value = {
    @ApiResponse(code = 200, message = &quot;Successfully retrieved list&quot;),
    @ApiResponse(code = 401, message = &quot;You are not authorized to view the resource&quot;),
    @ApiResponse(code = 403, message = &quot;Accessing the resource you were trying to reach is forbidden&quot;),
    @ApiResponse(code = 404, message = &quot;The resource you were trying to reach is not found&quot;)
})
@GetMapping(&quot;/employees&quot;)
public List &lt; Employee &gt; getAllEmployees() {
    return employeeRepository.findAll();
}</code></pre> 
<p pid="174">We can also use <strong>@ApiParam</strong> annotation to add additional meta-data for operation parameters like this:</p> 
<pre><code lang="text/x-java">@ApiOperation(value = &quot;Add an employee&quot;)
@PostMapping(&quot;/employees&quot;)
public Employee createEmployee(
    @ApiParam(value = &quot;Employee object store in database table&quot;, required = true) @Valid @RequestBody Employee employee) {
    return employeeRepository.save(employee);
}</code></pre> 
<p pid="175">The complete &nbsp;<code>EmployeeController</code><span id="_tmp_pre_5">&nbsp;</span>&nbsp;code with swagger annotations:</p> 
<pre><code lang="text/x-java">package net.guides.springboot2.springboot2swagger2.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;
import net.guides.springboot2.springboot2swagger2.exception.ResourceNotFoundException;
import net.guides.springboot2.springboot2swagger2.model.Employee;
import net.guides.springboot2.springboot2swagger2.repository.EmployeeRepository;

@RestController
@RequestMapping(&quot;/api/v1&quot;)
@Api(value = &quot;Employee Management System&quot;, description = &quot;Operations pertaining to employee in Employee Management System&quot;)
public class EmployeeController {
    @Autowired
    private EmployeeRepository employeeRepository;

    @ApiOperation(value = &quot;View a list of available employees&quot;, response = List.class)
    @ApiResponses(value = {
        @ApiResponse(code = 200, message = &quot;Successfully retrieved list&quot;),
        @ApiResponse(code = 401, message = &quot;You are not authorized to view the resource&quot;),
        @ApiResponse(code = 403, message = &quot;Accessing the resource you were trying to reach is forbidden&quot;),
        @ApiResponse(code = 404, message = &quot;The resource you were trying to reach is not found&quot;)
    })
    @GetMapping(&quot;/employees&quot;)
    public List &lt; Employee &gt; getAllEmployees() {
        return employeeRepository.findAll();
    }

    @ApiOperation(value = &quot;Get an employee by Id&quot;)
    @GetMapping(&quot;/employees/{id}&quot;)
    public ResponseEntity &lt; Employee &gt; getEmployeeById(
        @ApiParam(value = &quot;Employee id from which employee object will retrieve&quot;, required = true) @PathVariable(value = &quot;id&quot;) Long employeeId)
    throws ResourceNotFoundException {
        Employee employee = employeeRepository.findById(employeeId)
            .orElseThrow(() - &gt; new ResourceNotFoundException(&quot;Employee not found for this id :: &quot; + employeeId));
        return ResponseEntity.ok().body(employee);
    }

    @ApiOperation(value = &quot;Add an employee&quot;)
    @PostMapping(&quot;/employees&quot;)
    public Employee createEmployee(
        @ApiParam(value = &quot;Employee object store in database table&quot;, required = true) @Valid @RequestBody Employee employee) {
        return employeeRepository.save(employee);
    }

    @ApiOperation(value = &quot;Update an employee&quot;)
    @PutMapping(&quot;/employees/{id}&quot;)
    public ResponseEntity &lt; Employee &gt; updateEmployee(
        @ApiParam(value = &quot;Employee Id to update employee object&quot;, required = true) @PathVariable(value = &quot;id&quot;) Long employeeId,
        @ApiParam(value = &quot;Update employee object&quot;, required = true) @Valid @RequestBody Employee employeeDetails) throws ResourceNotFoundException {
        Employee employee = employeeRepository.findById(employeeId)
            .orElseThrow(() - &gt; new ResourceNotFoundException(&quot;Employee not found for this id :: &quot; + employeeId));

        employee.setEmailId(employeeDetails.getEmailId());
        employee.setLastName(employeeDetails.getLastName());
        employee.setFirstName(employeeDetails.getFirstName());
        final Employee updatedEmployee = employeeRepository.save(employee);
        return ResponseEntity.ok(updatedEmployee);
    }

    @ApiOperation(value = &quot;Delete an employee&quot;)
    @DeleteMapping(&quot;/employees/{id}&quot;)
    public Map &lt; String, Boolean &gt; deleteEmployee(
        @ApiParam(value = &quot;Employee Id from which employee object will delete from database table&quot;, required = true) @PathVariable(value = &quot;id&quot;) Long employeeId)
    throws ResourceNotFoundException {
        Employee employee = employeeRepository.findById(employeeId)
            .orElseThrow(() - &gt; new ResourceNotFoundException(&quot;Employee not found for this id :: &quot; + employeeId));

        employeeRepository.delete(employee);
        Map &lt; String, Boolean &gt; response = new HashMap &lt; &gt; ();
        response.put(&quot;deleted&quot;, Boolean.TRUE);
        return response;
    }
}</code></pre> 
<p pid="176">The output of the operation endpoints on the browser is this:</p> 
<p pid="177"><a href="https://4.bp.blogspot.com/-MAENrwKF8p4/W9CEV_vsB-I/AAAAAAAAEb8/qR2rYP-sJ1wu_2OEfYi1Gchu7JwPi0MYwCLcBGAs/s1600/swagger-annotations%2B-employee-controller.PNG" rel="nofollow"><img border="0" class="fr-dii fr-fil" data-original-height="728" data-original-width="940" src="https://4.bp.blogspot.com/-MAENrwKF8p4/W9CEV_vsB-I/AAAAAAAAEb8/qR2rYP-sJ1wu_2OEfYi1Gchu7JwPi0MYwCLcBGAs/s1600/swagger-annotations%2B-employee-controller.PNG" /></a></p> 
<p pid="178">The current documentation is missing one thing: documentation of the Employee JPA entity. We will generate documentation for our model in the next step.</p> 
<h2>10. Swagger 2 Annotations for Model</h2> 
<p pid="179">You can use the <strong>@ApiModelProperty</strong> annotation to describe the properties of the &nbsp;<code>Employee</code><span id="_tmp_pre_4">&nbsp;</span>&nbsp;model. With <strong>@ApiModelProperty</strong>, we can also document a property as required.</p> 
<p pid="180">The code of our &nbsp;<code>Employee</code><span id="_tmp_pre_3">&nbsp;</span>&nbsp;class is this.</p> 
<pre><code lang="text/x-java">package net.guides.springboot2.springboot2swagger2.model;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

@Entity
@Table(name = &quot;employees&quot;)
@ApiModel(description = &quot;All details about the Employee. &quot;)
public class Employee {

    @ApiModelProperty(notes = &quot;The database generated employee ID&quot;)
    private long id;

    @ApiModelProperty(notes = &quot;The employee first name&quot;)
    private String firstName;

    @ApiModelProperty(notes = &quot;The employee last name&quot;)
    private String lastName;

    @ApiModelProperty(notes = &quot;The employee email id&quot;)
    private String emailId;

    public Employee() {

    }

    public Employee(String firstName, String lastName, String emailId) {
        this.firstName = firstName;
        this.lastName = lastName;
        this.emailId = emailId;
    }

    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    public long getId() {
        return id;
    }

    public void setId(long id) {
        this.id = id;
    }

    @Column(name = &quot;first_name&quot;, nullable = false)
    public String getFirstName() {
        return firstName;
    }

    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    @Column(name = &quot;last_name&quot;, nullable = false)
    public String getLastName() {
        return lastName;
    }

    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    @Column(name = &quot;email_address&quot;, nullable = false)
    public String getEmailId() {
        return emailId;
    }

    public void setEmailId(String emailId) {
        this.emailId = emailId;
    }

    @Override
    public String toString() {
        return &quot;Employee [id=&quot; + id + &quot;, firstName=&quot; + firstName + &quot;, lastName=&quot; + lastName + &quot;, emailId=&quot; + emailId +
            &quot;]&quot;;
    }
}</code></pre> 
<p pid="181">The &nbsp;<code>Swagger 2</code><span id="_tmp_pre_1">&nbsp;</span>&nbsp;generated documentation for &nbsp;<code>Employee</code><span id="_tmp_pre_2">&nbsp;</span>&nbsp;is this:</p> 
<p pid="182"><a href="https://1.bp.blogspot.com/-IXsVbCro8vo/W9CFCP5-EII/AAAAAAAAEcI/VXqXhzOFn64-fsPLwoJFBbSgIb7YOO30gCLcBGAs/s1600/swagger-annotations%2B-employee-model.PNG" rel="nofollow"><img border="0" class="fr-fin fr-dib" data-original-height="418" data-original-width="878" src="https://1.bp.blogspot.com/-IXsVbCro8vo/W9CFCP5-EII/AAAAAAAAEcI/VXqXhzOFn64-fsPLwoJFBbSgIb7YOO30gCLcBGAs/s1600/swagger-annotations%2B-employee-model.PNG" /></a></p> 
<h2>11. Launching Swagger UI</h2> 
<p pid="183">Let's use the Swagger UI available at <a href="http://localhost:8080/swagger-ui.html" target="_blank" rel="nofollow">http://localhost:8080/swagger-ui.html</a>.</p> 
<p pid="184">Below screenshot shows the Home Page of Swagger UI. It shows a list of all the resources that are exposed.</p> 
<p pid="185"><a href="https://1.bp.blogspot.com/-A8Jw4VIhsVM/W9CFMJR56CI/AAAAAAAAEcM/k_--n7fEWXI49pG6qc8UEDpS1BKuzjkqACLcBGAs/s1600/swagger-config.PNG" rel="nofollow"><img border="0" class="fr-fin fr-dib" data-original-height="639" data-original-width="930" src="https://1.bp.blogspot.com/-A8Jw4VIhsVM/W9CFMJR56CI/AAAAAAAAEcM/k_--n7fEWXI49pG6qc8UEDpS1BKuzjkqACLcBGAs/s1600/swagger-config.PNG" /></a></p> 
<p pid="186">Expand employee-controller and Models looks as below screenshots:</p> 
<p pid="187"><a href="https://1.bp.blogspot.com/-o29TeFugg78/W9CFZgy_xOI/AAAAAAAAEcU/Nyijdmt6_l8LKRZzTmmzHkxqkQ3ZODW4wCLcBGAs/s1600/swagger-annotations%2B-employee-controller.PNG" rel="nofollow"><img border="0" class="fr-fin fr-dib" data-original-height="728" data-original-width="940" src="https://1.bp.blogspot.com/-o29TeFugg78/W9CFZgy_xOI/AAAAAAAAEcU/Nyijdmt6_l8LKRZzTmmzHkxqkQ3ZODW4wCLcBGAs/s1600/swagger-annotations%2B-employee-controller.PNG" /></a></p> 
<p pid="188"><a href="https://4.bp.blogspot.com/-d-Y6joYpABk/W9CFdgE_ktI/AAAAAAAAEcc/j3rmycB7ZooBqj5lvfc1XcOysbgLXB8qQCLcBGAs/s1600/swagger-annotations%2B-employee-model.PNG" rel="nofollow"><img border="0" class="fr-fin fr-dib" data-original-height="418" data-original-width="878" src="https://4.bp.blogspot.com/-d-Y6joYpABk/W9CFdgE_ktI/AAAAAAAAEcc/j3rmycB7ZooBqj5lvfc1XcOysbgLXB8qQCLcBGAs/s1600/swagger-annotations%2B-employee-model.PNG" /></a></p> 
<p pid="189">Expand each <a href="https://dzone.com/articles/developing-rest-apis" target="_blank" rel="nofollow">REST API</a> and you can use the ‘Try it out’ button to execute a request and see the response. Below are a demo of getting all employees and delete employee looks like this:</p> 
<p pid="190"><a href="https://1.bp.blogspot.com/-Hv0XsMgt-zA/W9CFuiv440I/AAAAAAAAEco/UNJgeWxxf6Ml6hIXM-w_MmDo69LsDakogCLcBGAs/s1600/swagger-getall.PNG" rel="nofollow"><img border="0" class="fr-fin fr-dib" data-original-height="601" data-original-width="863" src="https://1.bp.blogspot.com/-Hv0XsMgt-zA/W9CFuiv440I/AAAAAAAAEco/UNJgeWxxf6Ml6hIXM-w_MmDo69LsDakogCLcBGAs/s1600/swagger-getall.PNG" /></a></p> 
<p pid="191"><a href="https://3.bp.blogspot.com/-NQ1hMgGOVJk/W9CFzZS7ukI/AAAAAAAAEcs/imo3HsxP_U88W_GYgIQPYe4vVYMfyV-JgCLcBGAs/s1600/swagger-delete.PNG" rel="nofollow"><img border="0" class="fr-fin fr-dib" data-original-height="580" data-original-width="996" src="https://3.bp.blogspot.com/-NQ1hMgGOVJk/W9CFzZS7ukI/AAAAAAAAEcs/imo3HsxP_U88W_GYgIQPYe4vVYMfyV-JgCLcBGAs/s1600/swagger-delete.PNG" /></a></p> 
<blockquote>
  Check out the source code of this tutorial on GitHub - 
 <a href="https://github.com/RameshMF/spring-boot-tutorial/tree/master/springboot2-jpa-swagger2" target="_blank" rel="nofollow">https://github.com/RameshMF/spring-boot-tutorial/tree/master/springboot2-jpa-swagger2</a> 
</blockquote>
                </div>
                </div>

                <div ng-if="(articles[0].rawType == 'refcard' || articles[0].rawType == 'guide') && edition" ng-cloak>
                    <div class="content-html" dz-code-container ng-cloak>
                        <a ng-href="{{articles[0].pdf}}">
                            <img class="pub-image" dz-image-fid-width="740" dz-image-fid="{{ articles[0].articleImage }}" width="420">
                        </a>
                        <div class="pub-content content-html" ng-bind-html="article.shortDesc"></div>
                    </div>
                </div>

                <div ng-if="articles[0].readyForAd">
                    <div class="article-bumper article-bumper-bottom" ng-if="articles[0].readyForAd" dc-slot="ads.bt2.slot(articles[0], 0)"
                         tags="ads.bt2.tags(articles[0], 0)" size="ads.bt2.size(articles[0], 0)"></div>
                </div>

            <div class="article-bumper article-bumper-bottom" ng-if="articles[0].rawType != 'article'" ng-cloak>
            </div>

                    <div ng-if="!edition" class="related">
                        <h3>Like This Article? Read More From DZone</h3>
                        <div class="row">
                            <div class="relateddiv col-xs-6 col-md-6">
                                <a href="/articles/spring-boot-restful-api-documentation-with-swagger?fromrel=true">
                                    <img class="relatedimg col-xs-3 col-md-3 lazyload"
                                         src="" data-src="https://dz2cdn4.dzone.com/thumbnail?fid=4524559&w=120"
                                         alt="Spring Boot RESTful API Documentation With Swagger 2"
                                         width="60">
                                </a>
                                <a href="/articles/spring-boot-restful-api-documentation-with-swagger?fromrel=true"
                                   class="col-xs-9 col-md-9">Spring Boot RESTful API Documentation With Swagger 2</a>
                            </div>

                            <div class="relateddiv col-xs-6 col-md-6">
                                <a href="/articles/static-api-documentation-with-spring-and-swagger?fromrel=true">
                                    <img class="relatedimg col-xs-3 col-md-3 lazyload"
                                         src="" data-src="https://dz2cdn3.dzone.com/thumbnail?fid=11925950&w=120"
                                         alt="Static API Documentation With Spring and Swagger"
                                         width="60">
                                </a>
                                <a href="/articles/static-api-documentation-with-spring-and-swagger?fromrel=true" class="col-xs-9 col-md-9">
                                    Static API Documentation With Spring and Swagger</a>
                            </div>
                        </div>

                        <div class="row">
                            <div class="relateddiv col-xs-6 col-md-6">
                                <a href="/articles/spring-boot-and-swagger-documenting-restful-servic?fromrel=true">
                                    <img class="relatedimg col-xs-3 col-md-3 lazyload"
                                         src="" data-src="https://dz2cdn2.dzone.com/thumbnail?fid=10449445&w=120"
                                         alt="Spring Boot and Swagger: Documenting RESTful Services"
                                         width="60">
                                </a>
                                <a href="/articles/spring-boot-and-swagger-documenting-restful-servic?fromrel=true"
                                   class="col-xs-9 col-md-9">Spring Boot and Swagger: Documenting RESTful Services</a>
                            </div>

                            <div class="relateddiv col-xs-6 col-md-6">
                                <a href="/refcardz/introduction-to-digital-asset-management-via-apis?fromrel=true">
                                    <img class="relatedimg col-xs-3 col-md-3 lazyload"
                                         src="" data-src="https://dz2cdn3.dzone.com/thumbnail?fid=13027402&w=120"
                                         alt="Introduction to Digital Asset Management via APIs"
                                         width="60">
                                </a>
                                <a href="/refcardz/introduction-to-digital-asset-management-via-apis?fromrel=true" class="col-xs-9 col-md-9">
                                    <p class="relatedres">Free DZone Refcard</p>
                                    Introduction to Digital Asset Management via APIs</a>
                            </div>
                        </div>
                    </div>


            <div class="assetdiv" ng-if="articles[0].rawType != 'article' && articles[0].pdf">
                    <a class="btn-asset" ng-href="#" ng-click="loginForm()">DOWNLOAD</a>
            </div>


            <div class="article-topics">
                <div class="topic-label">Topics:</div>
                <div class="topics">
                        <span class="topics-tag">integration
                            ,</span><span class="topics-tag">tutorial
                            ,</span><span class="topics-tag">spring boot
                            ,</span><span class="topics-tag">restful api documentation
                            ,</span><span class="topics-tag">rest apis
                            ,</span><span class="topics-tag">swagger 2
                            ,</span><span class="topics-tag">spring boot 2</span>
                </div>
            </div>
            <div class="author-n-useraction">
                <div class="like action">
                    <dz-like template="like-article.html"
                             node="articles[0]">        <div class="dz-like"
             

<a href="#">
    <i ng-class="{'icon-thumbs-up-alt': status.liked, 'icon-thumbs-up liked': !status.liked}"></i>
    <span>Like (30)</span>
</a>
</div>

                        </dz-like>
                </div>

                <div class="comment action">
                    <p ng-show="!articles[0].isLocked" slider-toggle="commentsSlider" slider-data="{parent: articles[0]}"
                       activate-with-url-params="{showComments: articles[0].id}">
                        <span><i class="icon-comment" tooltip-html-unsafe="{{ commentTooltip(articles[0]) }}"></span></i>
                        Comment (<span class="comment-after number-of-comments"
                                       ng-bind="articles[0].nComments">2</span>)
                    </p>
                    <p ng-show="articles[0].isLocked">
            <span ng-cloak><i class="icon-icon-comment comment-disabled"
                              tooltip-html-unsafe="Comments have been disabled for this article"></i></span>
                    </p>
                </div>

                <div class="save action">
                    <dz-save template="link-article-save.html" node="articles[0]"
                             class="save">    <div class="save icon-star-empty"
         ><span
                class="action-label">Save</span></div>

                        </dz-save>
                </div>

                <div class="tweet action"><a ng-href="#"
                                             ng-click='shareTwitter($event, articles[0].header.title, articles[0].url)'
                                             class="title" target="_blank"><span><i class="icon-twitter"></i></span>
                        <span class="action-label">Tweet</span></a>
                </div>

                <div class="pull-right">
                    <div class="article-views action" ng-cloak><i class="icon-eye"></i> {{ articles[0].views |
                        formatCount}}

                        <span
                                class="action-label">Views</span></div>

                        <div class="user-n-admin-action action"
                             ng-if="!edition && (canEdit(articles[0]) || canDelete(articles[0]))">
                            <div class="mod-tools" dropdown is-open="dropdown.open" ng-cloak>
                            <span dropdown-toggle>
                                <i class="icon-cog"></i>
                            </span>
                                <ul class="dropdown-menu">
                                    <li><a ng-if="canEdit(articles[0])"
                                           ng-href="/content/{{ articles[0].id }}/edit.html">Edit</a></li>
                                    <li><a href="#" ng-if="canDelete(articles[0])" ng-click="delete(articles[0])">Delete</a>
                                    </li>
                                    <li><a href="#" ng-if="perms.canPublish"
                                           ng-click="toggleComments(articles[0])">{{ articles[0].isLocked
                                            ? 'Enable' : 'Disable' }} comments</a></li>
                                    <li><a href="#" ng-if="perms.canPublish && !articles[0].isLocked"
                                           ng-click="toggleLimitComments(articles[0])">
                                            {{ articles[0].isLimited ? 'Remove comment limits' : 'Enable moderated
                                            comments'
                                            }}</a></li>
                                </ul>
                            </div>
                        </div>
                </div>
            </div>
                <div class="attribution">
                    <p >Published at DZone with permission
                        of 
                            <span>Ramesh Fadatare
                        . <span ng-if="articles[0].source"><a
                                    href="http://www.javaguides.net/2018/10/spring-boot-2-restful-api-documentation-with-swagger2-tutorial.html"
                                     target="_blank">See the original article here.<i
                                        class="icon-link-ext-alt"></i></a></span></p>
                    <p>Opinions expressed by DZone contributors are their own.</p>
                </div>
            <load-article node="article || articles[0]"></load-article>
        </article>

        <div class="col-md-12 col-sm-12 col-xs-12">
            <th-if-scroll relative-to="bottom" from="-20" to="0" callback="activateB(articles[0])"></th-if-scroll>
        </div>
    </div>

        <!-- Had to use a nested ng-if to ensure that this section loads after the top of the page-->
        <!-- TODO: Figure out why partnerResources get loaded before the rest of the article -->
        <div ng-if="true">
          <div ng-if="true">

<div class="layout-card widget-top-border partner-resources-block" style="width:100%;margin-bottom: 1em;">

    <div class="main-container">
        <div class="featured-header">
            <h2>
                    Integration<span> Partner Resources</span>
            </h2>
        </div>

        <div class="partner-resources-container">
                <div class="resource-block" dc-slot="'/2916070/dz2_partner_resource_link'" tags="ads.partnerResources.tags(articles[0], 'pr' + calculatePartnerResourceIndex())" size="['fluid']"></div>
                <div class="resource-block" dc-slot="'/2916070/dz2_partner_resource_link'" tags="ads.partnerResources.tags(articles[0], 'pr' + calculatePartnerResourceIndex())" size="['fluid']"></div>
                <div class="resource-block" dc-slot="'/2916070/dz2_partner_resource_link'" tags="ads.partnerResources.tags(articles[0], 'pr' + calculatePartnerResourceIndex())" size="['fluid']"></div>
                <div class="resource-block" dc-slot="'/2916070/dz2_partner_resource_link'" tags="ads.partnerResources.tags(articles[0], 'pr' + calculatePartnerResourceIndex())" size="['fluid']"></div>
                <div class="resource-block" dc-slot="'/2916070/dz2_partner_resource_link'" tags="ads.partnerResources.tags(articles[0], 'pr' + calculatePartnerResourceIndex())" size="['fluid']"></div>
                <div class="resource-block" dc-slot="'/2916070/dz2_partner_resource_link'" tags="ads.partnerResources.tags(articles[0], 'pr' + calculatePartnerResourceIndex())" size="['fluid']"></div>
        </div>

    </div>
</div>



          </div>
        </div>

        <div class="ad-silver row" ng-if="articles[1] && !articles[1].partner.isSponsoringArticle && width >= 768">

    </div>

        <div class="ad-gold row" ng-if="articles[1] && !articles[1].partner.isSponsoringArticle && width < 768">
            <div class="col-md-12">
                <div ng-if="ads.gold1.show()" dc-slot="ads.gold1.slot()" tags="ads.gold1.tags(articles[0])"
                     class="leaderboard-ad" size="ads.gold1.size()"></div>
            </div>
        </div>


</div>
<div class="articles-wrap" ng-repeat="article in articles" ng-if="$index > 0 || article.id != 2559278" ng-include="'/static/article/article.html'"></div>

<div style="clear: both;"></div>
<th-if-scroll ng-if="!isPreview" relative-to="bottom" from="-50" to="50" callback="loadMore()"></th-if-scroll></div></div></div><div class="container-fluid footerOuter" th-element="footerOuter" th-element-groups="[]" ng-hide="$root.isHidden('footerOuter')" data-th-element-name="footerOuter"><div class="row row2" th-element="row2" th-element-groups="['footerOuter']" ng-hide="$root.isHidden('row2')" data-th-element-name="row2"><div class="col-md-12 container3" th-element="container3" th-element-groups="['footerOuter','row2']" ng-hide="$root.isHidden('container3')" data-th-element-name="container3"><div class="container container3" th-element="container3" th-element-groups="['footerOuter','row2','container3']" ng-hide="$root.isHidden('container3')" data-th-element-name="container3"><div class="row footer" th-element="footer" th-element-groups="['footerOuter','row2','container3','container3']" ng-hide="$root.isHidden('footer')" data-th-element-name="footer"></div></div></div></div></div><div class=" sidebar sidebarTapBar oUhbkSMadabbWQbVkcC oUhbkSMadabfWVcC" th-element="sidebar" th-element-groups="[]" ng-hide="$root.isHidden('sidebar')" data-th-element-name="sidebar" data-th-widget="sidebar.tapBar" data-widget-sidebar-tap-bar="" ng-controller="sidebar"><div class="content" ng-if="!$root.botInfo.isRenderBot" sidebar-list>
<div class=" sidebar.content" th-element="sidebar.content" th-element-groups="['sidebar']" ng-hide="$root.isHidden('sidebar.content')" data-th-element-name="sidebar.content"><div class="col-md-12 sidebarContentList7 sidebarContentList oUhbkSMaaqbcdvVkcC" th-element="sidebarContentList7" th-element-groups="['sidebar','sidebar.content']" ng-hide="$root.isHidden('sidebarContentList7')" data-th-element-name="sidebarContentList7" data-th-widget="sidebar.content.list" data-widget-sidebar-content-list="" ng-controller="sidebarContentList7"><ul class="nodes-list" dnd-list="display">

    <div class="header" ng-if="edition">
        <h3><strong>{{ editionName }}</strong></h3>
    </div>

    <li ng-repeat="node in display" id="{{::node.id}}-{{edition}}-{{$index}}" class="list-entry" ng-class="{active: isActive(node)}" sidebar-item="node"
        >
            <div ng-if="node.type != 'article' && node.type != 'ad'" class="resource {{ node.type }}">
                <div class="sidebar-content">{{ node.blurb }}</div>
            </div>
        <div class="sidebar-content ">
            <a ng-class="{badge1: edition}" data-badge="{{$index + 1}}" ng-if="node.type != 'ad'" ng-href="{{ ::node.url }}" ng-click="tap()" sidebar-click="node">
                <div class="sidebar-node-image" ng-if="edition"><img class="imageList" dz-image-fid-width="80" dz-image-fid="{{ ::node.imageUrl }}"></div>
                <div ng-class="{'sidebar-node-title' : edition}">
                    <div ng-if="node.type == 'whitepaper' || node.type == 'refcard' || node.type == 'guide'" class="sidebar-resource">Free&nbsp;{{node.type}}</div>
                    <p>{{ ::node.title }}</p>
                </div>
            </a>
        </div>
    </li>
    <th-if-scroll relative-to="bottom" from="-100" to="50" callback="loadMore()"></th-if-scroll>
    <th-loader flag="loading()" />
</ul>
</div></div></div>
<span class="tap" ng-class="{tapEdition: edition}" ng-click="tap()" ng-if="!$root.botInfo.isRenderBot">
    <i class="icon-angle-double-left left"></i>
    <i class="icon-angle-double-right right"></i>
</span>
</div><div class=" componentsSlider5 componentsSlider oUhballbvbdSaoUhM" th-element="componentsSlider5" th-element-groups="[]" ng-hide="$root.isHidden('componentsSlider5')" data-th-element-name="componentsSlider5" data-th-widget="components.slider" data-widget-components-slider="" ng-controller="componentsSlider5"><div class="background" ng-class="{open: _sliderOpen}" ng-if="_ready" ng-click="close()">
</div>

<div class="slider-outer-wrapper" ng-class="{open: _sliderOpen}">

    <div class="row slider-inner-wrapper" ng-if="_ready">
        <div class=" componentsSlider5.widgets" th-element="componentsSlider5.widgets" th-element-groups="['componentsSlider5']" ng-hide="$root.isHidden('componentsSlider5.widgets')" data-th-element-name="componentsSlider5.widgets"><div class="col-md-12 contentCommentsSlider6 contentCommentsSlider oUhbaqbcaibvnWffWVcC" th-element="contentCommentsSlider6" th-element-groups="['componentsSlider5','componentsSlider5.widgets']" ng-hide="$root.isHidden('contentCommentsSlider6')" data-th-element-name="contentCommentsSlider6" data-th-widget="content.commentsSlider" data-widget-content-comments-slider="" ng-controller="contentCommentsSlider6"><script type="text/ng-template" id="link-article-save.html">
    <div ng-class="{'icon-star gold': status.saved, 'icon-star-empty': !status.saved}" ng-click="save()" class="save"><span class="save-title">Save</span><span ng-if="status.saved" class="d-letter">d</span></div>
</script>

<div class="comment-slider-content">

    <div class="node-info">
        <div class="comment-title">
            <h1 class="parent-title">{{ parent.title || parent.header.title}}</h1>
            <p ng-if="parent.tldr"  class="tldr">{{ parent.tldr }}</p>
            <h3 ng-if="parent.title" class="link-description" >{{ parent.linkDescription }}</h3>
            <a ng-if="parent.title" ng-href="{{parent.url}}" class="link-source">{{ parent.urlSource.name }}</a>
        </div>
    </div>
    <div class="author-n-article-info">
        <div class="author-avatar">
            <a ng-href="{{ parent.authors[0].url || parent.authorUrl }}">
                <img dz-image-fid-width="80" dz-image-fid="{{ parent.authors[0].avatar || parent.authorAvatar }}" class="avatar" width="40" />
            </a>
        </div>
        <div class="author-name">
            by
            <a ng-bind-html="parent.authors[0].realName ? parent.authors[0].realName : parent.author" th-popup="users.profile.mini" popup-data="{user: parent.authors[0].id || parent.authorId }" ng-href="{{ parent.authors[0].url || parent.authorUrl }}"></a>

            <div ng-if="parent.authors[0].isStaff || parent.isStaff" class="mbv-award staff-area">
                <i tooltip="Staff of DZone" class="icon-staff"></i>
            </div>

            <div ng-if="parent.authors[0].isMVB || parent.isMVB" class="mbv-award">
                <i tooltip="Most Valuable Blogger" class="icon-mvb-1"></i>
            </div>

            <div class="mvb-partner">
                <user-is-partner user="parent.authors[0].id"></user-is-partner>
            </div>

            <div class="badge-container badge-text-md" ng-if="parent.authors[0].isCore || parent.isCore">
                <i tooltip="DZone Core" class="icon-core-1"></i>CORE
            </div>

            <div class="zone-leader">
                <user-is-zone-leader user="parent.authors[0].id"></user-is-zone-leader>
            </div>

        </div>
        <div class="publish-date">
            &middot; <span class="author-date">{{ parent.articleDate | date:'MMM. dd, yyyy' }} {{ parent.linkDate | date:'MMM. dd, yyyy' }}</span>
        </div>
        <div class="portal-link">
            &middot; <a href="{{ parent.portal.url }}" id="portal-name" ng-cloak><span class="portal-name">{{ parent.portal.name }} Zone</span></a>
        </div>
    </div>
    <div class="user-actions">
        <div class="like action" ng-if="parent.title">
            <dz-like template="like-article.html" callback="addVoter()" node="parent" ng-if="parent.articleDate"></dz-like>
            <dz-like callback="addVoter()" callback="addVoter()" node="parent" ng-if="parent.linkDate"></dz-like>
        </div>

        <div class="like action" ng-if="!parent.title">
            <dz-like template="like-article.html" callback="addVoter()" node="parent"></dz-like>
        </div>

        <div class="save-article action"><dz-save template="link-article-save.html" node="parent" class="save"></dz-save></div>

        <div class="tweet action">
            <a ng-href="#" ng-click='shareTwitter($event, parent.title || parent.header.title,parent.linkSource || parent.url)' class="title" target="_blank"><i class="icon-twitter"></i>Tweet</a>
        </div>

        <div class="pull-right">
            <div class="view-count action">
                <i class="icon-eye"></i> {{ parent.views }} <span ng-if="!parent.title">Views</span><span ng-if="parent.title" class="action-label">Clicks</span>
            </div>

            <div class="user-n-admin-action action" ng-if="canEdit(parent) || canDelete(parent)">
                <div class="mod-tools" dropdown is-open="dropdown.open">
                    <span dropdown-toggle><i class="icon-cog"></i></span>
                    <ul class="dropdown-menu">
                        <li><a ng-href="/content/{{ parent.id }}/edit.html">Edit</a></li>
                        <li><a href="#" ng-if="canDelete(parent)" ng-click="deleteLink(parent)">Delete</a></li>
                        <li><a href="#" ng-if="canPublish && !parent.title" ng-click="toggleComments(parent)">{{ parent.isLocked ? 'Enable' : 'Disable' }} comments</a></li>
                        <li><a href="#" ng-if="canPublish && !parent.isLocked && !parent.title" ng-click="toggleLimitComments(parent)">
                            {{ parent.isLimited ? 'Remove comment limits' : 'Enable moderated comments' }}
                        </a></li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
    <div th-defer-until="_sliderOpen">
        <!--<div content-comment-box parent="parent.id" count="parent.nComments" limited="parent.isLimited" class="comment-box"></div>-->
    </div>
</div></div></div>    </div>
</div>

</div>

    <div class="row">
        <a href="#" class="back-to-top"><i class="icon-up-big"></i></a>
    </div>


    <script type="text/ng-template" id="/themes/dz20/widgets/header/sections/widget.html">
<span dropdown is-open="dropdown.open" ng-class="{small: width < 768}">
    <span dropdown-toggle class="sections"><i class="icon-menu"></i>
        <span class="menuLabel" ng-if="width < 768"></span></span>
    <ul class="dropdown-menu ul-first" ng-style="width < 768 ? {'top': headerSize + 0 + 'px', 'padding-top': '15px'} : {}">
        <li><a href="/links">Links</a></li>
        <li><a href="/refcardz">Refcardz</a></li>
        <li><a href="/guides">Guides</a></li>
        <li><a href="/about">About Us</a></li>
        <li class="divider"></li>

        <li class="post-title"><span>Zones</span></li>
        <li ng-repeat="topic in portals" class="dropdown">
            <a ng-href="{{ topic.url }}">{{ topic.name }}</a>
        </li>
        <li class="divider"></li>
        <li class="post-title"><span>Post</span></li>
        <li><a href="/links">Link</a></li>
        <li><a href="/article/post.html">Article</a></li>
    </ul>
</span>


    </script>

<script type="text/ng-template" id="followus.html">
<div class="top-social">
    <p>Let's be friends:</p>
    <ul class="icons-only" ng-class="{open: isOpen}" click-outside="outside()">
        <li class="rss-icon" id="rss-spotlight-1">
            <a href="/pages/feeds"><i class="icon-rss-1"></i></a>
        </li>
        <li class="twitter-icon">
            <a href="https://twitter.com/DZoneInc" target="_blank"><i class="icon-twitter"></i></a>
        </li>
        <li class="facebook-icon">
            <a href="https://www.facebook.com/DZoneInc" target="_blank"><i class="icon-facebook-1"></i></a>
        </li>
        <li class="google-icon">
            <a href="https://plus.google.com/+dzone/posts" target="_blank"><i class="icon-gplus"></i></a>
        </li>
        <li class="linkedin-icon">
            <a href="https://www.linkedin.com/company/devada-team" target="_blank"><i class="icon-linkedin-1"></i></a>
        </li>

            <ul class="social-dropdown dropdown-menu">
                <li class="rss" id="rss-spotlight"><a href="/pages/feeds"><i class="icon-rss-squared"></i> <span>RSS Feed</span></a></li>
                <li class="twitter" id="twitter-spotlight">
                    <a href="https://twitter.com/DZoneInc" class="twitter-follow-button" data-show-count="true"
                       data-show-screen-name="false">Follow @DZoneInc</a>
                </li>
                <li class="fb-like" id="fb-spotlight" data-href="https://www.facebook.com/DZoneInc"
                    data-layout="button_count" data-action="like" data-show-faces="true" data-share="false"></li>
                <li class="google-plus" id="gplus-spotlight">
                    <div class="g-follow" data-annotation="bubble" data-height="20"
                         data-href="https://plus.google.com/108688665090780146602" data-rel="publisher"></div>
                </li>
                <li class="linkedin" id="linkedin-spotlight">
                    <script type="IN/FollowCompany" data-id="114427" data-counter="right"></script>
                </li>
            </ul>
    </ul>
</div>
</script><script type="text/ng-template" id="dzlike.html">
<div class="dz-like " ng-class="{liked: status.liked}" ng-click="like()">
    <a href="#">
        <i class="icon-up-dir"></i>
        <span>{{ status.score }}</span>
    </a>
</div>
</script><script type="text/ng-template" id="dztopicselect.html"><ui-select  ng-if="canAddTopics" ng-model="editing.topics" theme="bootstrap" multiple tagging tagging-label="(add topic)"
           tagging-tokens=",">
    <ui-select-match class="input-tags"><div class="topics-tag">{{ $item }}</div></ui-select-match>
    <ui-select-choices
            refresh="topicsRefresh($select.search)"
            refresh-delay="250"
            repeat="topic in foundTopics | filter: $select.search">
        <div ng-bind-html="topic | highlight: $select.search"></div>
    </ui-select-choices>
</ui-select>
<ui-select ng-if="!canAddTopics" ng-model="editing.topics" theme="bootstrap" multiple>
    <ui-select-match><div class="topics-tag">{{ $item }}</div></ui-select-match>
    <ui-select-choices
            refresh="topicsRefresh($select.search)"
            refresh-delay="250"
            repeat="topic in foundTopics | filter: $select.search">
        <div ng-bind-html="topic | highlight: $select.search"></div>
    </ui-select-choices>
</ui-select></script><script type="text/ng-template" id="dzsave.html"><i class="icon-star-empty" ng-class="{'icon-star gold': status.saved, 'icon-star-empty': !status.saved}" tooltip-html-unsafe="{{status.saved ? 'Saved' : 'Save'}}" ng-click="save()"></i>
<!--<span ng-class="{'gold count': status.saved}">{{ status.count }}</span>--></script><script type="text/ng-template" id="overlay.html"><div class="ngdialog th-overlay">
    <div class="ngdialog-overlay">
        <div class="overlay-box">
            <i class="icon-spin5 animate-spin"></i>

            <p>{{ message }}</p>
        </div>
    </div>
</div></script><script type="text/ng-template" id="inline-editable.html"><div class="inline-editable" ng-if="!status.editing" ng-click="edit()" ng-transclude></div>
<div class="inline-editor-wrapper" ng-if="status.editing">
    <textarea class="inline-editor" ng-model="status.editValue" ng-if="type == 'textarea'"></textarea>
    <input class="inline-editor" ng-model="status.editValue" ng-if="type == 'input'"></textarea>
    <div class="inline-editor-tools">
        <button class="btn select-ok" ng-disabled="!status.editValue" ng-click="save()"><i class="icon-check-1"></i></button>
        <button class="btn select-cancel" ng-disabled="!editable" ng-click="cancel()"><i class="icon-cancel-1"></i></button>
    </div>
</div></script><script type="text/ng-template" id="dzupload.html"><span class="btn btn-upload" >
    <div ng-bind-html="label"></div>
    <div class="progress-container" ng-style="{visibility: uploading ? 'visible' : 'hidden'}">
        <progressbar max="100" value="progress"><span>{{ progress }}</span></progressbar>
    </div>
    <input type="file" ng-file-drop ng-file-select ng-file-change="upload($files)" />
</span></script><script type="text/ng-template" id="dzfollow.html"><button class="btn btn-follow" ng-class="{'btn-success': !status.followed, 'btn-warning': status.followed, 'hidden': followed.id == $root.user.id}" ng-click="follow()"><span ng-if="!status.followed"><i class="icon-plus"></i> Follow</span><span ng-if="status.followed" class="following">Following</span><span ng-if="status.followed" class="hover">Unfollow</span></button></script><script type="text/ng-template" id="dzphoto.html"><i class="icon-camera-alt photo" type="file" ng-file-drop ng-file-select ng-file-change="upload($files)"></i></script><script type="text/ng-template" id="dialog.confirm.html"><p>{{ message }}</p></script><script type="text/ng-template" id="dialog.skeleton.html"><div class="dialog-title">
    <h1 ng-if="$dialog.title">{{ $dialog.title }}</h1>
</div>
<div class="dialog-body {{ $dialog.extraClass }}" ng-include="$dialog.template"></div>
<div class="dialog-footer">
    <div class="dialog-buttons" ng-if="$dialog.buttons">
        <button ng-repeat="button in $dialog.buttons" ng-hide="button.hidden" ng-disabled="button.disabled || $dialog.executing"
                class="btn btn-{{ button.type || 'info' }}" ng-click="$dialog.runAction(button)">
            <span class="icon-spin6 animate-spin" ng-if="button.executing"></span>{{ button.label || button.name }}</button>
    </div>
</div></script><script type="text/ng-template" id="dialog.message.html"><div class="message-icon">
    <i class="icon-{{ icon }}"></i>
</div>
<div class="message-text">
    <p class="message-title" ng-bind-html="trustAsHtml(title)"></p>
    <p ng-bind-html="trustAsHtml(message)"></p>
</div>
</script>
<script type="text/javascript">

    var TH_CORE_VARS = {};

    try {
        TH_CORE_VARS.additional = {};

        TH_CORE_VARS.additional.matchedUrl = {"name":"dzone:articles:view","mapping":"/articles/**","mappingPatterns":{}};
        TH_CORE_VARS.additional.request = [{"site":{"keywords":"programming, software development, devops, java, agile, web, iot, database, mobile, big data, cloud","name":"DZone.com","description":"Programming, Web Development, and DevOps news, tutorials and tools for beginners to experts. Hundreds of free publications, over 1M members, totally free.","id":7,"title":"DZone: Programming & DevOps news, tutorials & tools"},"dev":false,"context":"","theme":"dz20","cdn":["dz2cdn1.dzone.com","dz2cdn2.dzone.com","dz2cdn3.dzone.com","dz2cdn4.dzone.com"],"user":{"realName":null,"authenticated":false,"profile":"/users/2500002/anon-user.html","name":"Anonymous","GDPRStatus":null,"id":2500002,"avatar":"https://secure.gravatar.com/avatar/?d=identicon&r=PG"}}];
        TH_CORE_VARS.additional.loadedScripts = [["/lib/jquery/jquery.js","/lib/lodash/lodash.js","/lib/moment/moment.js","/scripts/utils.js","/lib/angular/angular.js","/lib/angular/angular-sanitize.js","/lib/local-storage/angular-local-storage.js","/lib/bootstrap/dropdown.js","/lib/angular-ui/bootstrap.js","/lib/angular-ui/select.js","/lib/bootstrap-switch/bootstrap-switch.js","/lib/ngDialog/js/ngDialog.js","/lib/angular-moment/angular-moment.js","/scripts/app.js","/scripts/socket.js","/scripts/services.js","/scripts/ui-services.js","/scripts/directives.js","/scripts/filters.js","/lib/angular/angular-cookies.js","/lib/angulartics/angulartics.js","/lib/angulartics/angulartics-ga.js","/lib/angular-touch/angular-touch.min.js","/lib/dataTables/datatables.min.js","/lib/elastic/elastic.js","/lib/ng-file-upload/angular-file-upload-all.js","/scripts/dzone.js","/scripts/ads.js","/scripts/social-media.js","/scripts/head.js","/scripts/links.js","/scripts/utilities/directives.js","/scripts/utilities/services.js","/scripts/utilities/editor.js","/lib/bootstrap-slider/bootstrap-slider.js","/lib/bootstrap-slider/directive.js","/lib/sb/sb.js","/lib/angular-animate.min.js","/lib/angular-sanitize.min.js","/lib/ngToast.min.js","/lib/lazysizes.min.js","/lib/angular-draganddrop/draganddrop.js","/widgets/article/content/utils.js","/widgets/components/slider/service.js","/widgets/header/headerV2/resize.js","/widgets/sidebar/content/list/service.js","/widgets/sidebar/tapBar/directive.js","/widgets/sidebar/tapBar/service.js"]];
        TH_CORE_VARS.additional.botInfo = [{"isRenderBot":false}];
        TH_CORE_VARS.additional.portals = [[{"hideFromHomepageWidgets":false,"hideFromNav":false,"code":"agile","color":"red","name":"Agile","topic":8,"id":2,"shortTitle":"agile-methodology-training-tools-news","url":"/agile-methodology-training-tools-news"},{"hideFromHomepageWidgets":false,"hideFromNav":false,"code":"ai","color":"purple","name":"AI","topic":2551,"id":4001,"shortTitle":"artificial-intelligence-tutorials-tools-news","url":"/artificial-intelligence-tutorials-tools-news"},{"hideFromHomepageWidgets":false,"hideFromNav":false,"code":"big-data","color":"green","name":"Big Data","topic":6129,"id":3,"shortTitle":"big-data-analytics-tutorials-tools-news","url":"/big-data-analytics-tutorials-tools-news"},{"hideFromHomepageWidgets":false,"hideFromNav":false,"code":"cloud","color":"orange","name":"Cloud","topic":30,"id":4,"shortTitle":"cloud-computing-tutorials-tools-news","url":"/cloud-computing-tutorials-tools-news"},{"hideFromHomepageWidgets":false,"hideFromNav":false,"code":"database","color":"purple","name":"Database","topic":59,"id":5,"shortTitle":"database-sql-nosql-tutorials-tools-news","url":"/database-sql-nosql-tutorials-tools-news"},{"hideFromHomepageWidgets":false,"hideFromNav":false,"code":"devops","color":"yellow","name":"DevOps","topic":31,"id":6,"shortTitle":"devops-tutorials-tools-news","url":"/devops-tutorials-tools-news"},{"hideFromHomepageWidgets":false,"hideFromNav":false,"code":"integration","color":"green","name":"Integration","topic":1138,"id":7,"shortTitle":"enterprise-integration-training-tools-news","url":"/enterprise-integration-training-tools-news"},{"hideFromHomepageWidgets":false,"hideFromNav":false,"code":"iot","color":"orange","name":"IoT","topic":48,"id":8,"shortTitle":"iot-developer-tutorials-tools-news-reviews","url":"/iot-developer-tutorials-tools-news-reviews"},{"hideFromHomepageWidgets":false,"hideFromNav":false,"code":"java","color":"purple","name":"Java","topic":1,"id":1,"shortTitle":"java-jdk-development-tutorials-tools-news","url":"/java-jdk-development-tutorials-tools-news"},{"hideFromHomepageWidgets":false,"hideFromNav":false,"code":"microservices","color":"green","name":"Microservices","topic":13268,"id":6001,"shortTitle":"microservices-news-tutorials-tools","url":"/microservices-news-tutorials-tools"},{"hideFromHomepageWidgets":true,"hideFromNav":true,"code":"mobile","color":"yellow","name":"Mobile","topic":29,"id":9,"shortTitle":"mobile-app-developer-tutorials-tools-news","url":"/mobile-app-developer-tutorials-tools-news"},{"hideFromHomepageWidgets":false,"hideFromNav":false,"code":"open-source","color":"purple","name":"Open Source","topic":75,"id":7001,"shortTitle":"open-source-news-tutorials-tools","url":"/open-source-news-tutorials-tools"},{"hideFromHomepageWidgets":false,"hideFromNav":false,"code":"performance","color":"red","name":"Performance","topic":653,"id":10,"shortTitle":"apm-tools-performance-monitoring-optimization","url":"/apm-tools-performance-monitoring-optimization"},{"hideFromHomepageWidgets":false,"hideFromNav":false,"code":"security","color":"green","name":"Security","topic":85,"id":2001,"shortTitle":"application-web-network-security","url":"/application-web-network-security"},{"hideFromHomepageWidgets":false,"hideFromNav":false,"code":"webdev","color":"orange","name":"Web Dev","topic":35,"id":11,"shortTitle":"web-development-programming-tutorials-tools-news","url":"/web-development-programming-tutorials-tools-news"},{"hideFromHomepageWidgets":true,"hideFromNav":true,"code":"inspiration-station ","color":"purple","name":"Writers'","topic":16873,"id":3001,"shortTitle":"writers-zone","url":"/writers-zone"}]];
        TH_CORE_VARS.additional.loadedStyles = [["/lib/bootstrap/bootstrap.less","/lib/fontello/css/fontello.css","/lib/fontello/css/animation.css","/lib/angular-ui/select.css","/lib/ngDialog/css/ngDialog.css","/less/ngDialog-theme.less","/less/container.less","/lib/bootstrap-switch/bootstrap-switch.css","/lib/dataTables/datatables.min.css","/less/dzone20.less","/less/fonts.less","/less/directives.less","/lib/sb/sb.css","/lib/bootstrap-slider/bootstrap-slider.css","/lib/codemirror/lib/codemirror.css","/less/ngToast.min.css","/less/ngToast-animations.min.css","/less/layout.less","/widgets/announcementBar/widget.less","/widgets/article/content/article-content.less","/widgets/components/slider/widget.less","/widgets/content/commentsSlider/widget.less","/widgets/header/headerV2/widget.less","/widgets/sidebar/content/list/list.less","/widgets/sidebar/tapBar/sidebar-list.less","/widgets/sidebar/tapBar/widget.less"]];
        TH_CORE_VARS.additional.model = [{"metaData":{"title":"Spring Boot 2 RESTful API Documentation With Swagger 2 Tutorial - DZone Integration","description":"This article takes an in-depth look at Spring Boot 2 RESTful API documentation with Swagger 2 tutorial.","keywords":"programming, software development, devops, java, agile, web, iot, database, mobile, big data, cloud,integration,tutorial,spring boot,restful api documentation,rest apis,swagger 2,spring boot 2,article","siteName":"dzone.com","url":"https://dzone.com","img":"https://dz2cdn4.dzone.com/storage/article-thumb/10654447-thumb.jpg","imgprop":"og:image","twitterImage":"https://dz2cdn4.dzone.com/storage/article-thumb/10654447-thumb.jpg","type":"article","wordCount":2513,"canonical":"https://dzone.com/articles/spring-boot-2-restful-api-documentation-with-swagg","noIndex":false,"noFollow":false,"prevPage":null,"nextPage":null,"pubDate":"2018-11-12","id":2559278,"author":"Ramesh Fadatare","section":"Integration","useEscapedFragment":false,"robots":false,"robotsTag":""},"lastAuthor":{"id":3439641,"username":"Ramesh Fadatare","type":"user","plug":"ramesh-fadatare","gold":0,"silver":1,"bronze":2,"reputation":1877,"moderator":false,"superuser":false,"avatar":"https://dzone.com/users/3439641/photo/view.html","website":"http://www.javaguides.net"},"articleType":"article/tutorial","zonetop":"laurenf","claimed":{"id":3063817,"username":"DZone_karap","type":"user","plug":"dzone-karap","gold":0,"silver":0,"bronze":0,"reputation":6694,"moderator":false,"superuser":false,"avatar":"https://dzone.com/users/3063817/photo/view.html","website":"https://twitter.com/KaraPhelps15"},"publisher":"laurenf","enableThreadedComments":true,"portal":{"id":7,"code":"integration","title":"Integration","shortTitle":"enterprise-integration-training-tools-news","blurb":"Enterprise Integration news, design patterns and training resources from DZone, the trusted source for advanced software design and devops best practices."},"contentType":"article","content":{"id":"2559278","type":"article","plug":"spring-boot-2-restful-api-documentation-with-swagg","creationDate":"2018-11-12 18:05:03.0"}}];
        TH_CORE_VARS.additional.requiresModule = ["dndLists","generalDirectives","monospaced.elastic","angularFileUpload","ui.bootstrap-slider","angulartics","angulartics.google.analytics","ngCookies","ngSanitize","ui.select","ui.bootstrap","angularMoment","ngTouch","ngDialog","LocalStorageModule"];
        TH_CORE_VARS.additional.TH_CSRF = "7614665659009752706";
            } catch (e) {
        console.error(e);
    }
</script>
<script type='text/javascript'>
    var googletag = googletag || {};
    googletag.cmd = googletag.cmd || [];
    (function () {
        var gads = document.createElement('script');
        gads.async = true;
        gads.type = 'text/javascript';
        var useSSL = 'https:' == document.location.protocol;
        gads.src = (useSSL ? 'https:' : 'http:') +
                '//www.googletagservices.com/tag/js/gpt.js';
        var node = document.getElementsByTagName('script')[0];
        node.parentNode.insertBefore(gads, node);
    })();
</script>

<script type="text/javascript" src="//dz2cdn2.dzone.com/storage/pub/13202137-combined.js" charset="utf-8"></script><script type="text/javascript" src="//dz2cdn2.dzone.com/storage/pub/13202152-combined.js" charset="utf-8"></script><script>
    (function (i, s, o, g, r, a, m) {
        i['GoogleAnalyticsObject'] = r;
        i[r] = i[r] || function () {
                    (i[r].q = i[r].q || []).push(arguments)
                }, i[r].l = 1 * new Date();
        a = s.createElement(o),
                m = s.getElementsByTagName(o)[0];
        a.async = 1;
        a.src = g;
        m.parentNode.insertBefore(a, m)
    })(window, document, 'script', '//www.google-analytics.com/analytics.js', 'ga');

    ga('create', 'UA-410289-1', 'auto');
    ga('require', 'linkid', 'linkid.js');
    ga('require', 'GTM-TSD9TZP');
    ga('set', 'siteSpeedSampleRate', 25);
</script>

<!-- Google Tag Manager -->
<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
        new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
        j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
        'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
})(window,document,'script','dataLayer','GTM-K25QL22');</script>
<noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-K25QL22"
                  height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<!-- End Google Tag Manager -->

    <style>
#adtoniq-msgr-bar {
	position: fixed;
	bottom: -20%;
	left: 0;
	width: 100%;
	min-height: 30px;
	z-index: 99999;
	padding: 15px 0;
	font-family: sans-serif;
	font-size: 16px;
	text-align: center;
	background: #222;
	color: #fff;
	-webkit-transition: bottom 500ms ease-in-out;
	transition: bottom 500ms ease-in-out
}

#adtoniq-msgr-bar p {
	margin: 0 0 10px !important
}

#adtoniq-msgr-bar a {
	color: #fff !important;
	text-decoration: underline !important
}

#adtoniq-msgr-bar a:hover {
	color: #d3d3d3 !important;
	text-decoration: underline !important
}

#adtoniq-msgr-bar.reveal-alert {
	bottom: 0;
	-webkit-transition: bottom 500ms ease-in-out;
	transition: bottom 500ms ease-in-out
}

#adtoniq-msgr-bar #adtoniq-msg-buttons {
	display: inline-block;
}

#adtoniq-msg-buttons button {
	margin-left: 20px;
}


#adtoniq-msgr-bar .btn-msg-bar {
	display: inline-block;
	text-align: center;
	vertical-align: middle;
	cursor: pointer;
	border: 1px solid transparent;
	white-space: nowrap;
	padding: 10px 30px;
	border-radius: 0;
	background-color: #395972;
	color: #fff !important;
	-webkit-user-select: none;
	-moz-user-select: none;
	-ms-user-select: none;
	user-select: none
}

#adtoniq-msgr-bar .btn-msg-bar:hover {
	background: #283e50
}

#adtoniq-msgr-bar .btn-msg-bar+.btn-msg-bar {
	margin-left: 10px
}

#adtoniq-msgr-bar #adtoniq-msg {
	display: inline
}

#adtoniq-msgr-bar #adtoniq-btns {
	display: inline
}

</style>
<script>
adtoniq=function(){var L="";var R=document.createElement("a");R.href=window.location.href;var T="dzone.com";var J="ontouchstart" in window||navigator.msMaxTouchPoints;var B="https://p.syllabuses.net";var I="https://p.syllabuses.net/";var aD="https://d3g3pwzdli68pp.cloudfront.net/e/3eJyrVkpVslJQyi8oycxT0lFQygHxElNK8zJLQNxyEDelKj8vVS85P1epFgA8Bg27."+Math.random()+".png";var b="https://d3g3pwzdli68pp.cloudfront.net/e/3eJyrVkpVslJQyi8oycxT0lFQygHxclOLixPTM/PSQSLlIJGUqvy8VL3k/FylWgBu3g70."+Math.random()+".png";var Q="https://d3g3pwzdli68pp.cloudfront.net/e/3eJyrVkpVslJQyi8oyS8tUdJRUMoBcXNTi4sT0zPz0kEi5SCRlKr8vFS95PxcpVoAhmMPdQ==."+Math.random()+".png";var ak="https://d3g3pwzdli68pp.cloudfront.net/e/3eJyrVkpVslJQKkotTi1R0lFQygHxyhMzixNBvHIQL6UqPy9VLzk/V6kWACqMDUQ=."+Math.random()+".png";var C="https://p.syllabuses.net/";var u="d88d08db-7ae3-461d-9fd8-656d42073b89";var j="1389";var n="master-live";var H="";var w="${maxAdUnits}";var aq=[];var an=[];var q="${stripeSplit}";var Y="${waisaDisable}";var g="${ad_template}";var o=[];var am="";var ah="";var ay="off";var M="w79028";var aA=null;var D=null;var Z;var ag=false;var ax=false;var au=false;var ae=false;var h=false;var aB=false;var aj=false;var c=false;var t="";var O=0;var y=false;var P=0;var W=Math.floor(Math.random()*10000000);var p=0;var ab=[];var e=[];var ao=[];var aw=[];var af=[];var K=[];var N=[];var X=null;var aa=A("adtoniq_choice");var G=null;var al=false;if(aa=="track"){ar("adtoniq_choice","opted-in",365)}else{if(aa=="do-not-track"){ar("adtoniq_choice","opted-out",365)}}aa=A("adtoniq_choice");function av(){return/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)}function v(aI){if(document.getElementsByClassName){return document.getElementsByClassName(aI)}var l=[];var aH=new RegExp("(^| )"+aI+"( |$)");var aG=document.getElementsByTagName("*");for(var aF=0,aE=aG.length;aF<aE;aF++){if(aH.test(aG[aF].className)){l.push(aG[aF])}}return l}function r(l){aC(l,"")}function aC(aF,aE){var aG=v(aF);if(aG){for(var l=0;l<aG.length;l++){aG[l].style.display=aE}}}function az(){aC("adtoniq_adblocked","none");aC("adtoniq_acceptable","none");aC("adtoniq_blocked_analytics","none");r("adtoniq_nonblocked");r("adtoniq_protect")}function ad(l){if(document.readyState==="loading"){window.addEventListener("DOMContentLoaded",function(){l()})}else{l()}}function S(){var aE=e.length;for(var l=0;l<aE;l++){e[l]()}r("adtoniq_nonblocked");r("adtoniq_protect")}function f(){r("adtoniq_adblocked");if(ae){r("adtoniq_acceptable")}else{r("adtoniq_adblocked_no_acceptable")}}var V=false,E=false;var U=false;function ac(){if(!U&&(au||ax)){if(aa=="opted-in"){ad(f)}function l(){U=true;if(aA&&!aA()){return}var aH=aw.length;for(var aG=0;aG<aH;aG++){aw[aG](aa,C)}}if(document.readyState==="loading"){window.addEventListener("DOMContentLoaded",function(){l()})}else{l()}}if(V&&E){if(au||ax){if(av()){document.body.className+=" adtoniq-mobile"}}else{ad(S)}var aF=ab.length;for(var aE=0;aE<aF;aE++){ab[aE](au,ax,ae,aj)}}}function A(l){var aE="; "+document.cookie;var aF=aE.split("; "+l+"=");if(aF.length==2){return aF.pop().split(";").shift()}}function ar(aF,aG,aH){var l="";if(aH){var aE=new Date();aE.setTime(aE.getTime()+(aH*24*60*60*1000));l="; expires="+aE.toUTCString()}document.cookie=aF+"="+aG+l+"; path=/"}function x(){V=true;ac()}function ap(){E=true;ac()}function ai(aE,l){if(!l){l=window.location.href}aE=aE.replace(/[\[\]]/g,"\\$&");var aG=new RegExp("[?&]"+aE+"(=([^&#]*)|&|#|$)"),aF=aG.exec(l);if(!aF){return null}if(!aF[2]){return""}return decodeURIComponent(aF[2].replace(/\+/g," "))}function F(aE,l){l.parentNode.insertBefore(aE,l.nextSibling)}function at(){if(am!=="${msgAdUnitMsg}"&&am.length>0&&ah!=="${msgAdUnitMsgSelector}"&&ah.length>0){var aF=document.querySelectorAll(ah);for(i=0;i<aF.length;i++){var l=aF[i];var aE=document.createElement("div");aE.insertAdjacentHTML("beforeend",am);var aG=aE.getElementsByClassName("adtoniq-optin");if(aG&&aG.length==1){aG[0].onclick=function(){function aI(){ar("adtoniq_choice","opted-in",365);location.reload()}const aH=document.createElement("img");aH.src=aD;aH.style.width="1px";aH.style.height="1px";document.body.appendChild(aH);if(aH.complete){aI()}else{aH.addEventListener("load",aI);aH.addEventListener("error",aI)}}}F(aE,l);l.parentNode.removeChild(l)}}}return{setup:function(){isSetPreviewCookie=ai("atdoniq-preview");if(isSetPreviewCookie=="1"){ar("adt_mc",1,0)}if(n=="master-preview"){var aE=A("adt_mc");al=(aE!="1")}if(ay=="on"){var l=document.querySelector("meta[name='adtoniq-exclude']");if(l){al=true}}if(!al){adtoniq.setup2()}},addBobber:function(l){ab.push(l)},addAdBlockerCallback:function(l){ab.push(l)},setAdUnitLocator:function(l){X=l},onBlocked:function(l){if(U){if(au||ax){if(aa!="opted-in"){f();l(aa,true)}}}else{aw.push(l)}},onMessaging:function(l){ao.push(l)},messagingEvent:function(l){var aF=ao.length;for(var aE=0;aE<aF;aE++){ao[aE](l)}},onAnalyticsBlocked:function(l){af.push(l)},setGA:function(aE,aF,l){t=aE;O=aF;y=l},setIntegration:function(aE,l){B=aE},setProxy:function(l){C=l},getProxy:function(){return C},setCollector:function(l){I=l},setId:function(l){j=l},optOut:function(aF){function aG(){ar("adtoniq_choice","opted-out",365)}const l=document.createElement("img");l.src=Q;l.style.width="1px";l.style.height="1px";document.body.appendChild(l);if(l.complete){aG()}else{l.addEventListener("load",aG);l.addEventListener("error",aG)}for(var aE=0;aE<N.length;aE++){N[aE]()}},optIn:function(aF){function aG(){ar("adtoniq_choice","opted-in",365)}const l=document.createElement("img");l.src=b;l.style.width="1px";l.style.height="1px";document.body.appendChild(l);if(l.complete){aG()}else{l.addEventListener("load",aG);l.addEventListener("error",aG)}for(var aE=0;aE<K.length;aE++){K[aE]()}},onOptIn:function(l){K.push(l)},onOptOut:function(l){N.push(l)},setEnableAdtoniq:function(l){aA=l},setShouldShowAds:function(l){D=l},addNoAdBlockerCallback:function(l){e.push(l)},laybait:function(){function aE(aF,aH){var aG=new XMLHttpRequest();aG.open("get",aF);aG.responseType="blob";aG.onload=function(){var aI=new FileReader();aI.onload=function(){aH(this.result)};aI.readAsDataURL(aG.response)};aG.send()}function l(){var aF=new Image();aF.onload=function(){aE(aF.src,function(aG){au=aG.length<=5;ap()})};aF.onerror=function(){au=true;ap()};aF.src="https://static-42andpark-com.s3-us-west-2.amazonaws.com/ads/ad-300x250.png"}l();document.addEventListener("DOMContentLoaded",function(aI){var aH=document.createElement("iframe");aH.src="https://d3g3pwzdli68pp.cloudfront.net/f/3eJyrVspUslJQMjS2sFTSUVAqB3FSqvLzUvWS83NBIiUgkTSlWgDREgpT==/1389.html?o="+(typeof(aa)!="undefined"?(aa=="opted-in"?"t":"d"):"u")+"&r="+document.referrer+"&l="+document.location;aH.setAttribute("style","position:absolute;left:-10px;width:1px;height:1px;");document.body.appendChild(aH);var aG=null;function aJ(){var aO="pub_300x250 pub_300x250m pub_728x90 text-ad textAd text_ad text_ads text-ads text-ad-links";var aN="width: 1px !important; height: 1px !important; position: absolute !important; left: -10000px !important; top: -1000px !important;";aG=document.createElement("div");aG.id="zippity";aG.setAttribute("class",aO);aG.setAttribute("style",aN);document.body.appendChild(aG)}function aM(){var aO=window.document.body.getAttribute("abp")!==null||aG.offsetParent===null||aG.offsetHeight==0||aG.offsetWidth==0||aG.offsetLeft==0||aG.offsetTop==0||aG.clientHeight==0||aG.clientWidth==0;if(window.getComputedStyle!==undefined&&!aO){var aN=window.getComputedStyle(aG,null);aO=aN.getPropertyValue("display")=="none"||aN.getPropertyValue("visibility")=="hidden"}if(aO){ax=true}return aO}aJ();var aL=new Date();var aK=null;var aF=setInterval(function(){if(aM()){if(aK){clearTimeout(aK)}try{document.body.removeChild(aG)}catch(aN){}clearInterval(aF);x()}},100);aK=setTimeout(function(){clearInterval(aF);try{document.body.removeChild(aG)}catch(aN){}x()},1*1000)})},setup2:function(){if(typeof T==="undefined"){return}if(aa=="opted-in"){r("adtoniq_nonblocked")}adtoniq.onBlocked(function(aE,aF){function l(){adtoniq.inflateAdUnit()}if(aE=="opted-out"){at()}else{if(aE!="opted-in"){adtoniq.onOptIn(l)}else{l()}}});adtoniq.laybait()},waisaChoice:function(aH){var l=!!window.adtoniqAlertData?window.adtoniqAlertData:null;var aE=document.getElementById("adtoniq-msgr-bar");if(!aE){var aE=document.createElement("div");aE.id="adtoniq-msgr-bar"}aE.classList.add("adtoniq-waisa");aE.innerHTML=l.waisaContent;var aI=document.createElement("div");aI.id="adtoniq-msg-buttons";aI.classList.add("adtoniq-waisa");var aG=document.createElement("button");aG.innerHTML="Clear my choice";aI.appendChild(aG);aG.onclick=function(aK){function aL(){document.cookie="adtoniq_choice=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;";location.reload()}const aJ=document.createElement("img");aJ.src=ak;aJ.style.width="1px";aJ.style.height="1px";document.body.appendChild(aJ);if(aJ.complete){aL()}else{aJ.addEventListener("load",aL);aJ.addEventListener("error",aL)}};var aF=document.createElement("button");aF.innerHTML="Close";aI.appendChild(aF);aF.onclick=function(aJ){document.body.classList.remove("adtoniq-body");adtoniq.messagingEvent("hide");aE.parentNode.removeChild(aE)};aE.appendChild(aI);document.body.appendChild(aE);aE.classList.add("reveal-alert");document.body.classList.add("adtoniq-body");adtoniq.messagingEvent("show");aH.preventDefault();return false},inflateAdUnit:function(){if(n=="master-preview"){var aH=A("adt_mc");if(aH!="1"){return}}if(!(isSetPreviewCookie=="1")&&q!=="${stripeSplit}"&&q.length>0){if(Math.floor(Math.random()*parseInt(q))!=0){return}}function aF(aW){if(Y!=="on"){var aU=document.createElement("img");aU.src="//d2t7a3zbo166a9.cloudfront.net/images/logos/A-15x15.png";aU.style.setProperty("float","right");var aV=document.createElement("span");aV.innerText="Why am I seeing this ad?";aV.style.display="none";aV.style.fontSize="10px";aV.style.paddingRight="10px";aV.style.verticalAlign="top";aV.style.right="-20px";aV.style.top="-20px";aV.style.position="absolute";aV.style.width="160px";aV.style.color="rgb(0, 0, 0)";var aT=document.createElement("a");aT.href="#";aT.appendChild(aU);aT.appendChild(aV);aT.style.position="relative";aT.style.display="block";aT.style.zIndex="9";aT.style.setProperty("float","right");aT.style.height="20px";aT.style.boxShadow="none";aT.onmouseenter=function(){aV.style.display=""};aT.onmouseleave=function(){aV.style.display="none"};aT.onclick=adtoniq.waisaChoice;aW.appendChild(aT);if(H=="on"){aW.style.border="2px solid  red"}}}function l(aU,aT){if(typeof aT.count==="undefined"){aT.count=1}else{aT.count++}aU.insertAdjacentHTML("beforeend","<a href='"+aT.clickThroughUrl+"?n="+aT.count+"' target='_blank'><img src = '"+aT.imageUrl+"?n="+aT.count+"'></a>")}function aQ(aW){const aX=[];for(a in aW){const aU=aW[a].contextKeywords;const aT=aM[aU];aX.push(aT||0)}aK(aX);const aV=aN(aX);return aV}function aO(aX,a1,aU){if(aX instanceof Array){var aZ=aQ(aX);var aW=aX;aW.ad=a1;aW.weights=aZ;aW.counts=Array.from({length:aZ.length});aW.counts.fill(0);aW.count=0;var aT=Math.floor(Math.random()*aW.length);aX=aW[aT];if(aU!=null){var a0=Math.max(30,aU);var aY=new Date();function aV(){aY=new Date()}document.addEventListener("mousemove",aV,false);setInterval(function(){if(document.hidden){return}if(new Date().getTime()-aY.getTime()>1000*60*5){return}var a2=0;if(aW.length>1){a2=aI(aW.weights);aW.count++;aW.counts[a2]++}aW.lastAdNum=a2;aX=aW[a2];aW.ad.innerHTML="";l(aW.ad,aX)},a0*1000)}}return aX}function aI(aU){const aV=Math.random();var aT=0;while(aT<aU.length-1&&aV>=aU[aT]){aT++}return Math.floor(aT)}function aR(aX,aT,aW){for(i in aT){const aV=aT[i];const aU=aX.match(aT[i]);aW[i]+=(aX.match(aT[i])||[]).length}}function aK(aV,aT){if(aT==null){aT=0.1}total=0;zeroes=0;for(i in aV){m=aV[i];total+=m;if(m==0){zeroes++}}if(zeroes>0){const aU=(aT*total)/zeroes;for(z in aV){if(aV[z]==0){aV[z]=aU}else{aV[z]*=1-aT}}}}function aL(aT,aV){var aW=document.createTreeWalker(document.body,NodeFilter.SHOW_ELEMENT,{acceptNode:function(aX){return NodeFilter.SHOW_TEXT}},false);var aU=aW.currentNode;while(aU){aR(aU.innerText,aT,aV);aU=aW.nextNode()}}function aP(aT,aX){const aZ=document.getElementsByTagName("meta");for(var aV=0;aV<aZ.length;aV++){const aU=aZ[aV].getAttribute("name");const aW=aZ[aV].getAttribute("property");if(aU==="description"||aW==="og:description"||aW==="og:title"){const aY=aZ[aV].getAttribute("content");aR(aY,aT,aX)}}}function aG(aU){const aT=[];for(stripe in aU){if(!aU[stripe]){continue}const aW=aU[stripe].split(/[ ,]/);if(aW.length==0){continue}const aV=[];for(i in aW){aV.push("("+aW[i]+"[s]?($|\\W)+)")}const aX="("+aV.join("|")+")";aT.push(new RegExp(aX,"gi"))}return aT}function aN(aW){const aU=[];var aT=0;for(i in aW){aT+=aW[i]}if(aT==0){aT=aW.length*1;aW.fill(1)}var aV=0;for(i in aW){weight=aW[i]/aT;aU.push(weight+aV);aV+=weight}return aU}function aE(){const aY={};var aU=[];for(s in aq){const a0=aq[s];const aT=a0.directAd;if(aT!=null&&aT instanceof Array){for(a in aT){const aX=aT[a];if(aX.contextKeywords){const aW=aX.contextKeywords;if(!aY[aW]){aU.push(aW);aY[aW]=[]}}}}}if(aU&&aU.length>0){const aV=aG(aU);const aZ=new Array(aU.length).fill(0);aL(aV,aZ);aP(aV,aZ);for(k in aU){aY[aU[k]]=aZ[k]}}return aY}const aM=aE();function aJ(){if("${powerinboxPreview}"==="on"&&A("adt_mc")!=="1"){return}for(var a7=0;a7<aq.length;a7++){var be=aq[a7];var a5=be.width;var a3=be.height;var aW=be.cssSelector;var aU=be.stripeId;var aY=be.url;var aT=be.preMarkup;var a2=be.postMarkup;var a8=be.format;var bc=be.autoRotate;var a9=be.directAd;var aX=be.wrapperStyle;var a4=be.preview;var bf=be.platform;if(bf==="desktop"&&av()){continue}else{if(bf==="mobile"&&!av()){continue}}if(aY!=null&&!location.pathname.match(aY)){continue}if(a4==="on"&&A("adt_mc")!=="1"){continue}var bb=X?X():document.querySelectorAll(aW);var aV=Math.min(bb.length,w,6);var bd;if(a8){bd=o[a8]}else{bd=g}for(i=0;i<aV;i++){var a1=bb[i];if(a1){var aZ=document.createElement("div");aZ.classList=M;F(aZ,a1);if(typeof aX!=="undefined"){aZ.style=aX}a1.parentNode.removeChild(a1);aF(aZ);var ba=document.createElement("div");if(a9!=null){a9=aO(a9,ba,bc);l(ba,a9)}else{ba.classList.add("pi_"+aU);var a6=document.createAttribute("powerinbox");ba.setAttributeNode(a6);ba.innerHTML=atob(bd).split("%stripeid%").join(aU).split("%stripe_width%").join(a5)}if(aT){var a0=document.createElement("div");a0.insertAdjacentHTML("beforeend",aT+a2);a0=a0.firstChild;a0.appendChild(ba);aZ.appendChild(a0)}else{aZ.appendChild(ba)}}}}}function aS(){for(var a7=0;a7<an.length;a7++){var aV=an[a7].cssSelector;var a1=an[a7].src_id;var aW=an[a7].url;var aT=an[a7].preMarkup;var a3=an[a7].postMarkup;var a6=an[a7].width;var a4=an[a7].height;var a8=an[a7].format;var a0=an[a7].cn;if(aW!=null&&!location.pathname.match(aW)){continue}var ba=X?X():document.querySelectorAll(aV);var aY=Math.min(ba.length,w,6);for(i=0;i<aY;i++){var aZ=ba[i];if(aZ){if(aT){var aU="_x"+(Math.floor(Math.random()*10000)+1)+"x_";var a2=aT+"<div id='"+aU+"'></div>"+a3;d=document.createElement("div");d.insertAdjacentHTML("beforeend",a2);F(d.firstChild,aZ);aZ.parentNode.removeChild(aZ);aZ=document.querySelector("#"+aU)}var a9;var a5=Math.round(new Date().getTime()/1000);if(a8){var bb=document.createElement("iframe");bb.setAttribute("scrolling","no");bb.frameBorder=0;bb.style.position="absolute";bb.style.height="100%";bb.style.width="100%";bb.style.left=0;bb.style.top=0;bb.src=C+"m/f?a=${encryptedArgs}&s="+a1+"&f="+encodeURIComponent(a8+":"+a0)+"&b="+a5;a9=document.createElement("div");a9.style.overflow="hidden";var aX=a8.split("x");a9.style.paddingTop=(100*aX[1]/aX[0]).toFixed(2)+"%";a9.style.position="relative";a9.appendChild(bb)}else{a9=document.createElement("iframe");a9.setAttribute("scrolling","no");a9.frameBorder=0;a9.style.position="relative";a9.style.height=a4+"px";a9.style.width=a6+"px";a9.src=C+"m/f?a=${encryptedArgs}&s="+a1+"&f="+encodeURIComponent(a6+":"+a4+":"+a0)+"&b="+a5}F(a9,aZ);aF(aZ);aZ.parentNode.removeChild(aZ)}}}}aJ();aS()},setFilter:function(l){ar("adtoniq-filter",l,365)},setJson:function(l){aq=l}}}();adtoniq.setup();(function(){var e={targetedUsers:"adsonly",greetingMsg:'<span style="max-width: 800px;padding-top: 3px;"> <h2 style=" color: #ffffff!important; margin-bottom: 10px; margin-top: 0; font-family: Helvetica Neue,Helvetica,sans-serif; margin-bottom: 10px; line-height: 1.2; font-weight: 600; font-size: 1.5em; margin-top: 0;">You can leave your ad blocker on and still support us</h2> <div id=""> <p class="targetadt" style="color: #ffffff; font-family: Helvetica Neue,Helvetica,sans-serif; font-size: 14px; line-height: 1.3; max-width: 680px; margin: 0!important;">We respect your decision to block adverts and trackers while browsing the Internet. If you would like to support our content, though, you can choose to view a small number of premium adverts on our site by hitting the \'Support\' button. These heavily vetted ads will not track you, and will fund our work. </p><p class="targetadt" style="color: #ffffff; font-family: Helvetica Neue,Helvetica,sans-serif; font-size: 14px; line-height: 1.3; max-width: 680px; margin: 0!important;">Thank you for your support!</p></div></span>',confirmMsg:"",protectionUrl:"",rejectMsg:"",customBtnClass:"",waisaContent:"<p>We respect your decision to block adverts and trackers while browsing the internet. You're currently supporting The DZone's content by seeing a small number of premium adverts. These heavily vetted ads will not track you, and will fund our work.<br><br>If you changed your mind you can click opt out. Thanks for being a part of DZone.</p>",rejectBtnText:"No Thanks",protectionCss:"",protectionStatus:"none",confirmBtnText:"Support"};var p={};window.adtoniqAlertData=e;var y=!!window.adtoniqAlertData?window.adtoniqAlertData:null;var v=r();var l=null;var j=true;var B=w("adtoniq_choice");var n=function(D){var C=document.createElement("a");C.href=D;return C};function g(){var C=h();return y.protectionStatus!="none"&&C&&n(C).pathname==location.pathname}window.addEventListener("DOMContentLoaded",function(){if(!window.adtoniq){console.error("Cannot run messenger bar module -- adtoniq global is not found");return false}if(!y){console.error("Cannot run messenger bar module -- no data found");return false}if((y.targetedUsers==="all"&&!B)||g()){A()}else{if(y.targetedUsers==="adsplus"){adtoniq.onAnalyticsBlocked(f)}if(y.targetedUsers==="adsonly"){adtoniq.onBlocked(b)}}},false);function h(){var C=y.protectionUrl;if(C.length==0){return""}if(C.substr(0,1)!="/"){C="/"+C}if(C.substr(C.length-1,1)!="/"){C=C+"/"}return C}function t(E){var D=false,C=h();if(C.length>0){switch(y.protectionStatus){case"none":break;case"allButHome":D=location.pathname!="/"&&location.pathname!=C;if(D&&(!E||E!="track")){location.href=C}else{document.body.style.display="block !important"}break;case"all":D=location.pathname!=C;if(D&&(!E||E!="track")){location.href=C}else{document.body.style.display="block !important"}break;case"css":break}}return D}function f(C,D){if(C&&!D){A()}}function b(C){if(!C){A()}}function A(){t(B);document.body.appendChild(v);l=setTimeout(function(){v.classList.add("reveal-alert");v.addEventListener("click",q,false);document.body.classList.add("adtoniq-body");adtoniq.messagingEvent("show")},50)}function q(C){if(C.target.id==="adtoniq-msg-track-btn"||C.target.id==="adtoniq-msg-no-track-btn"){if(typeof adtoniq.optIn==="function"){if(C.target.name=="track"){adtoniq.optIn()}else{adtoniq.optOut()}u(C.target.name);v.removeEventListener("click",q,false);clearTimeout(l)}}}function r(){var C=document.createElement("div");C.id="adtoniq-msgr-bar";C.innerHTML=c();return C}function c(F){var C=y.confirmBtnText.length>0?'<button id="adtoniq-msg-track-btn" name="track" class="btn-msg-bar '+y.customBtnClass+'">'+y.confirmBtnText+"</button>":"";var D=y.rejectBtnText.length>0?'<button id="adtoniq-msg-no-track-btn" name="do-not-track" class="btn-msg-bar '+y.customBtnClass+'">'+y.rejectBtnText+"</button>":"";var E='<button id="adtoniq-msg-close-btn" name="close" class="btn-msg-bar">Close</button>';var H=!F?y.greetingMsg:F==="confirm"?y.confirmMsg:y.rejectMsg;H='<div id="adtoniq-msg">'+H+"</div>";var G=!F?C+D:E;H+='<div id="adtoniq-btns">'+G+"</div>";return H}function u(C){if(e.confirmMsg.length==0){o()}else{v.innerHTML=c(C==="track"?"confirm":"reject");v.addEventListener("click",o,false)}}function o(){v.classList.remove("reveal-alert");v.addEventListener("click",o,false);v.addEventListener("transitionend",x,false);document.body.classList.remove("adtoniq-body");adtoniq.messagingEvent("hide")}function x(){document.body.removeChild(v);v.removeEventListener("transitionend",x,false)}function w(C){var D="; "+document.cookie;var E=D.split("; "+C+"=");if(E.length===2){return E.pop().split(";").shift()}return null}}());
</script>
<style>#adtoniq-msgr-bar #adtoniq-msg {display: inline-block;}
#adtoniq-msg {width: 75%;float: left;text-align: left;}
#adtoniq-msgr-bar #adtoniq-btns {display: inline-block;}
#adtoniq-btns { width: 25%!important; float: right!important; margin-right: 0px!important; max-width: 150px;}
button#adtoniq-msg-track-btn { width: 100%; display: block;}
button#adtoniq-msg-no-track-btn { background-color: transparent!important; width: 100%; margin: 0!important; margin-top: 11px!important; color: #000000!important; font-weight: 600; font-size: 12px; border: 0; border: none;}

#adtoniq-msgr-bar #adtoniq-msg-no-track-btn.btn-msg-bar {color: #ffffff!important;}

#adtoniq-msgr-bar, #adtoniq-msgr-bar.reveal-alert {background-color: #222635; opacity: 1; width: 100%; max-width: 1300px; margin: 0 auto; left: 0; right: 0; padding: 20px; border-top:2px solid #29a8ff;z-index: 999999999;} #adtoniq-msg-track-btn, #adtoniq-msg-close-btn, .adtoniq-waisa button {color: #ffffff!important;background-color: #29a8ff!important;margin-top: 0px;font-size: 13px;line-height: 24px;border-radius: 2px!important;font-weight: 500;padding: 10px 18px!important;letter-spacing: 1px;text-transform: uppercase; border: 0; border: none;} #adtoniq-msg {width: 70%;float: left;text-align: left;}#adtoniq-btns {width: 30%;float: none;text-align: right; margin-right:40px;} #adtoniq-msgr-bar.adtoniq-waisa p { font-size: 14px !important; line-height: 1.2; display: block; width: 100%; margin: 0 auto !important; text-align: center; max-width: 80%;} #adtoniq-msg-buttons.adtoniq-waisa { width: 100%; margin-top: 20px; } button#adtoniq-msg-track-btn {float: right;} p.a_deets {color: #ffffff;} #adtoniq-msgr-bar.adtoniq-waisa p { color: #ffffff; min-height: 120px; }


#a_hider .a_deets { display: inline-block; margin-bottom: 0!important;}
#a_hider.a_showme .a_deets, #a_hider.a_showme .arrow { display: none; }
#a_hider .targetadt { display: none; }
#a_hider.a_showme .targetadt { display: block; }

#a_hider { cursor: pointer; }

#a_hider:hover { cursor: pointer; }
#a_hider:hover .a_deets { text-decoration: underline; }

.arrow { height: 7px; width: 7px; border: 1px solid #000000; border-width: 2px 2px 0 0; -webkit-transform: rotate(45deg); -ms-transform: rotate(45deg); transform: rotate(45deg); display: inline-block; -webkit-transform: rotate(135deg); -ms-transform: rotate(135deg); transform: rotate(135deg); margin-left: 10px; padding-bottom: 2px; padding-left: 2px; }

@media screen and (max-width:1015px){ 
#adtoniq-msgr-bar .p.targetadt{max-width: 100%!important;margin: 0 auto!important;}

button#adtoniq-msg-track-btn, #adtoniq-msgr-bar #adtoniq-msg-no-track-btn.btn-msg-bar { width: auto; float: right; }
div#adtoniq-msg h2 { font-size: 20px!important; }

p.a_deets { font-size: 14px!important; }
#adtoniq-msg { width: 60%; }
#a_hider.a_showme p.targetadt { font-size: 12px!important;}
#adtoniq-msgr-bar, #adtoniq-msgr-bar.reveal-alert {width: auto!important; padding: 15px;}
#adtoniq-msgr-bar #adtoniq-msg-no-track-btn.btn-msg-bar { padding: 10px 0;}
} 

@media screen and (max-width:640px){ 
#adtoniq-msgr-bar .p.targetadt{max-width: 100%!important;margin: 0 auto!important;}

div#adtoniq-msg h2 { font-size: 18px!important; }
p.a_deets { font-size: 11px!important; }
#adtoniq-msg { width: 60%; }
#a_hider.a_showme p.targetadt { font-size: 12px!important;}
} 

@media screen and (max-width:565px){ 
#adtoniq-msg { width: 170px; padding-right: 30px; width: 65%; padding-right: 25px; }

#adtoniq-msgr-bar, #adtoniq-msgr-bar.reveal-alert { padding: 10px; width: auto!important; max-width: none; }
#adtoniq-msg-track-btn, #adtoniq-msg-close-btn, .adtoniq-waisa button, #adtoniq-msgr-bar #adtoniq-msg-no-track-btn.btn-msg-bar { font-size: 11px; line-height: 17px; padding: 8px 14px!important;}
}


@media screen and (max-width:339px){ 
    #adtoniq-msg { width: 99%; padding-bottom: 7px; }
	#adtoniq-btns {width: 100%!important; float: none!important; margin-top: 20px;text-align: center;display: block!important;}
	#adtoniq-msgr-bar #adtoniq-btns { display: inline!important; }
	#adtoniq-msg-track-btn, #adtoniq-msg-no-track-btn { display: inline-block!important; }
	button#adtoniq-msg-track-btn, #adtoniq-msgr-bar #adtoniq-msg-no-track-btn.btn-msg-bar { float: left; }
	button#adtoniq-msg-no-track-btn { margin-top: 0!important; }
}


#adtoniq-msgr-bar.adtoniq-waisa.reveal-alert { z-index: 999; }
.adtoniq-waisa.reveal-alert #adtoniq-msg-buttons { text-align: center; }
.adtoniq-waisa.reveal-alert #adtoniq-msg-buttons button { margin: 10px; }

@media (max-width: 768px)
.adtoniq-mobile .articles-wrap.ng-scope .ad-container.ng-scope .ng-isolate-scope {
    display: none;
}</style>
<style>#adtoniq-msgr-bar #adtoniq-msg {display: inline-block;}
#adtoniq-msg {width: 75%;float: left;text-align: left;}
#adtoniq-msgr-bar #adtoniq-btns {display: inline-block;}
#adtoniq-btns { width: 25%!important; float: right!important; margin-right: 0px!important; max-width: 150px;}
button#adtoniq-msg-track-btn { width: 100%; display: block;}
button#adtoniq-msg-no-track-btn { background-color: transparent!important; width: 100%; margin: 0!important; margin-top: 11px!important; color: #000000!important; font-weight: 600; font-size: 12px; border: 0; border: none;}

#adtoniq-msgr-bar #adtoniq-msg-no-track-btn.btn-msg-bar {color: #ffffff!important;}

#adtoniq-msgr-bar, #adtoniq-msgr-bar.reveal-alert {background-color: #222635; opacity: 1; width: 100%; max-width: 1300px; margin: 0 auto; left: 0; right: 0; padding: 20px; border-top:2px solid #29a8ff;z-index: 999999999;} #adtoniq-msg-track-btn, #adtoniq-msg-close-btn, .adtoniq-waisa button {color: #ffffff!important;background-color: #29a8ff!important;margin-top: 0px;font-size: 13px;line-height: 24px;border-radius: 2px!important;font-weight: 500;padding: 10px 18px!important;letter-spacing: 1px;text-transform: uppercase; border: 0; border: none;} #adtoniq-msg {width: 70%;float: left;text-align: left;}#adtoniq-btns {width: 30%;float: none;text-align: right; margin-right:40px;} #adtoniq-msgr-bar.adtoniq-waisa p { font-size: 14px !important; line-height: 1.2; display: block; width: 100%; margin: 0 auto !important; text-align: center; max-width: 80%;} #adtoniq-msg-buttons.adtoniq-waisa { width: 100%; margin-top: 20px; } button#adtoniq-msg-track-btn {float: right;} p.a_deets {color: #ffffff;} #adtoniq-msgr-bar.adtoniq-waisa p { color: #ffffff; min-height: 120px; }


#a_hider .a_deets { display: inline-block; margin-bottom: 0!important;}
#a_hider.a_showme .a_deets, #a_hider.a_showme .arrow { display: none; }
#a_hider .targetadt { display: none; }
#a_hider.a_showme .targetadt { display: block; }

#a_hider { cursor: pointer; }

#a_hider:hover { cursor: pointer; }
#a_hider:hover .a_deets { text-decoration: underline; }

.arrow { height: 7px; width: 7px; border: 1px solid #000000; border-width: 2px 2px 0 0; -webkit-transform: rotate(45deg); -ms-transform: rotate(45deg); transform: rotate(45deg); display: inline-block; -webkit-transform: rotate(135deg); -ms-transform: rotate(135deg); transform: rotate(135deg); margin-left: 10px; padding-bottom: 2px; padding-left: 2px; }

@media screen and (max-width:1015px){ 
#adtoniq-msgr-bar .p.targetadt{max-width: 100%!important;margin: 0 auto!important;}

button#adtoniq-msg-track-btn, #adtoniq-msgr-bar #adtoniq-msg-no-track-btn.btn-msg-bar { width: auto; float: right; }
div#adtoniq-msg h2 { font-size: 20px!important; }

p.a_deets { font-size: 14px!important; }
#adtoniq-msg { width: 60%; }
#a_hider.a_showme p.targetadt { font-size: 12px!important;}
#adtoniq-msgr-bar, #adtoniq-msgr-bar.reveal-alert {width: auto!important; padding: 15px;}
#adtoniq-msgr-bar #adtoniq-msg-no-track-btn.btn-msg-bar { padding: 10px 0;}
} 

@media screen and (max-width:640px){ 
#adtoniq-msgr-bar .p.targetadt{max-width: 100%!important;margin: 0 auto!important;}

div#adtoniq-msg h2 { font-size: 18px!important; }
p.a_deets { font-size: 11px!important; }
#adtoniq-msg { width: 60%; }
#a_hider.a_showme p.targetadt { font-size: 12px!important;}
} 

@media screen and (max-width:565px){ 
#adtoniq-msg { width: 170px; padding-right: 30px; width: 65%; padding-right: 25px; }

#adtoniq-msgr-bar, #adtoniq-msgr-bar.reveal-alert { padding: 10px; width: auto!important; max-width: none; }
#adtoniq-msg-track-btn, #adtoniq-msg-close-btn, .adtoniq-waisa button, #adtoniq-msgr-bar #adtoniq-msg-no-track-btn.btn-msg-bar { font-size: 11px; line-height: 17px; padding: 8px 14px!important;}
}


@media screen and (max-width:339px){ 
    #adtoniq-msg { width: 99%; padding-bottom: 7px; }
	#adtoniq-btns {width: 100%!important; float: none!important; margin-top: 20px;text-align: center;display: block!important;}
	#adtoniq-msgr-bar #adtoniq-btns { display: inline!important; }
	#adtoniq-msg-track-btn, #adtoniq-msg-no-track-btn { display: inline-block!important; }
	button#adtoniq-msg-track-btn, #adtoniq-msgr-bar #adtoniq-msg-no-track-btn.btn-msg-bar { float: left; }
	button#adtoniq-msg-no-track-btn { margin-top: 0!important; }
}


#adtoniq-msgr-bar.adtoniq-waisa.reveal-alert { z-index: 999; }
.adtoniq-waisa.reveal-alert #adtoniq-msg-buttons { text-align: center; }
.adtoniq-waisa.reveal-alert #adtoniq-msg-buttons button { margin: 10px; }

@media (max-width: 768px)
.adtoniq-mobile .articles-wrap.ng-scope .ad-container.ng-scope .ng-isolate-scope {
    display: none;
}</style>

<script type="text/javascript">
    (function() {
            function controller($scope, TH$Dialog, $location, $rootScope, $timeout, TH$SharedVars, $service, TH$LocalStorage) {

    $scope.searchT ='';
    $scope.zonesOpen = false;

    TH$SharedVars.bind($scope, 'searchT', 'searchTerm', true);

    $scope.login = function() {
        TH$Dialog.open({
            loadWidget: 'users.loginForm',
            size: 'modalForm',
            showClose: true
        });
    };

    $scope.signIn = function() {
        TH$Dialog.open({
            loadWidget: 'users.registration',
            size: 'modalFormExtended',
            showClose: true
        });
    };

    $scope.allResults = function() {
        window.location='/search';
    };

    $("#search").keyup(function(e) {
        var length = ($scope.searchT ? $scope.searchT.length : 0);
        $scope.searchT = ($scope.searchT ? $scope.searchT : '');

        if (e.keyCode === 13 && length > 2) {
            $scope.allResults();
        } else {
            $scope.search();
        }
    });

    $scope.focusSearch = function() {
        $timeout(function() {
            $("#search").focus();
        }, 100)
    };

    $scope.search = function() {
        var length = ($scope.searchT ? $scope.searchT.length : 0);
        $scope.loading = (length > 2);
        if (length < 3) {
            if ($scope.nodes || $scope.nodes == []) {
                $timeout(function() {
                    $scope.nodes = [];
                    $scope.cType = [];
                    $scope.related = [];
                    $scope.pager = [];
                    $scope.searchParam = [];
                    $scope.totalResults = null;

                }, 100)
            }
            return false;
        }

        var term = $scope.searchT;
        if ($scope.prevTerm == term) {
            return;
        }

        $scope.prevTerm = term;

        TH$LocalStorage.value('searchValue', term);
        term = (term ? term : '');
        $service.nextPage({term: term, pageSize: 7}, null, true).then(function(data) {
            $scope.loading = false;
            var curPage = 1;
            $scope.nodes = data.pages.newest[curPage];
            $scope.haveResults = ($scope.nodes) ? true : false;
            $scope.totalResults = data.totalItems;
        });
    }

    $scope.toggleZones = function(url, $event) {
        $event.preventDefault();
        $scope.zonesOpen = !$scope.zonesOpen;
    }
}

            var WMODEL_DATA = {};
            WMODEL_DATA.isAdmin = false;
        WMODEL_DATA.getPortals = null;
        WMODEL_DATA.OPTIONS = {};
        WMODEL_DATA.user = {"karma":40,"country":null,"website":null,"city":null,"about":null,"avatar":"https://secure.gravatar.com/avatar/?d=identicon&r=PG","realName":"$$ANON_USER$$","websiteUrl":"","jobRole":null,"tagline":null,"company":null,"id":2500002,"job":null};
        TH.installWidgetController('header.headerV2', 'mainHeader', WMODEL_DATA, typeof controller == 'function' ? controller : null, [{name: 'nextPage', data: true}], ' oUhbWOfRPSwBoUhM', null);
        })();
        (function() {
            function controller($scope, TH$Dialog, TH$Service, $window, $rootScope) {

    var body = $(".body"),
        announcement = $(".announcementBar"),
        marginRight = body.css("marginRight"),
        marginLeft = body.css("marginLeft");

    $scope.goToRegistration = function() {
        TH$Dialog.open({
            loadWidget: 'users.registration',
            size: 'modalFormExtended',
            showClose: true,
            data: {
                fromDownload: true,
                redirectUrl: $scope.announcement.link
            }
        });
    };

    $scope.track = function(id) {
        var data = {
            siteNotification: id
        };
        if ($rootScope.user.authenticated) {
            TH$Service.exec('dzoneUsers.trackAnnouncementBar', data).then(function() {
            });
            $window.location.href = $scope.announcement.link;
        } else {
            $scope.goToRegistration();
        }
    };

    $(window).resize(function() {
        marginRight = body.css("marginRight");
        marginLeft = body.css("marginLeft");
        $scope.setBarWidth()
    });

    if (!(announcement.next().is(".layout-card"))) {
        announcement.css("margin-bottom", "10px");
    }

    $scope.toShow = ($scope.announcement && $scope.announcement.anononly) ? !($rootScope.user.authenticated) : true;

    $scope.setBarWidth = function() {
        var container = $("#acontainer");
        container.css("margin-right", "-" + marginRight);
        container.css("margin-left", "-" + marginLeft);
    }
}

TH.directive('backImg', function() {
    return function(scope, element, attrs) {
        if (attrs.hasimage == "true") {
            var img = new Image();
            img.onload = a(attrs.img, element, scope);
            img.onerror = a(attrs.imgbackup, element, scope);
            img.src = attrs.img;
        }
        scope.setBarWidth();
    };
});

var a = function(url, element) {
    element.css({
        'background-image': 'url(' + url + ')',
        'background-size': 'cover'
    });
};
            var WMODEL_DATA = {};
            WMODEL_DATA.OPTIONS = {};
        WMODEL_DATA.announcement = {"id":4283072,"body":"[REFCARD RELEASE] Introduction to Data Security as a Service (DSaaS)","link":"https://bit.ly/2RsAogF","title":"Download Now","img2":"/notificationImage.html?id=4283072","img":"https://dz2cdn1.dzone.com/notificationImage.html?id=4283072","hasImage":false,"anononly":false};
        TH.installWidgetController('announcementBar', 'announcementBar1', WMODEL_DATA, typeof controller == 'function' ? controller : null, null, ' oUhbYlrRaqMaoUhM', null);
        })();
        (function() {
            function controller($scope, $sce, $analytics, $service, SideBarService, TH$Dialog,$rootScope, TH$Location, $q, $window,
                    DZtopicsString, shareThis, $location, TH$Service, DZHeadService, $timeout, ArticleAdsService) {

    var current = ($scope.articles && $scope.articles.length) ? $scope.articles[0] : null;
    var loading = null;
    var lastLoaded = current;
    var cache = {};


    $scope.width = $(window).width();
    $scope.voted = null;
    $scope.articleJson = {};
    $scope.serp = {
        'title': '',
        'url': '',
        'description': ''
    };

    $scope.canDelete = function(article) {
        return article.canDelete;
    };

    $scope.canEdit = function(article) {
        return article.canEdit;
    };

    $scope.canPublish = function (article) {
        return article.canPublish;
    };

    $scope.loginForm = function () {

        TH$Dialog.open({
            loadWidget: 'users.loginForm',
            size: 'modalForm',
            showClose: true,
            data: {
                fromDownload: true
            }
        });
    };

    $scope.delete= function(article) {
        TH$Dialog.confirm("Are you sure you want to permanently delete this article?").then(function() {
            TH$Service.action('delete', {type: 'node', id: article.id}).then(function() {
                TH$Dialog.success('Article deleted');
                newArticle(article.type);
            });
        });
    };

    $scope.publish = function(article) {
        TH$Dialog.confirm("Are you sure you want to publish this article?").then(function () {
            TH$Service.action('nodes.publish', {type: 'node', id: article.id}, {}, true)
                .then(function () {
                    TH$Dialog.success('Article Published', 'Your article was successfully published');
                    article.published = true;
                }, function () {
                    TH$Dialog.error('Article not Published', 'There was an error publishing teh article');
                });
        });
    };

    $scope.shareTwitter = function($event, title, url){
        $event.preventDefault();
        $event.stopPropagation();
        var twitter = 'https://twitter.com/intent/tweet';
        var link = $location.protocol() + '://' + location.host + url;
        var ref = location.host;
        var params = '?text=' + encodeURIComponent(title) + '&url=' + link + '&ref=dzone.com&via=DZoneInc';
        var win = window.open(twitter + params, '_blank');
        win.focus();
    };

    function newArticle(type) {
        current.article = {
            body: '',
            title: '',
            image: null,
            topics: [],
            sources: [],
            notes: '',
            published: false,
            canDelete: false
        };

        current.bodyImages = [];
        setEditUrl(null, type);
    };

    function setEditUrl(id, type) {
        TH$Location.apply(function ($location) {

            var url;

            if (id) {
                if (type == 'article') {
                    url = '/content/' + id + '/edit.html';
                } else {
                    url = '/dzone/staff/' + type + (type == 'refcard' ? 'z' : 's') + '/' + id + '/edit.html';
                }
            } else {
                if (type == 'article') {
                    url = '/content/article/post.html';
                } else if (type == 'refcard'){
                    url = '/dzone/staff/' + type + 'z' + '/add.html';
                }else{
                    url = '/content/article/post.html'
                }
            }
            $timeout(function(){
                $location.path(url);
            },1000);
        });
    };

    function setCurrentInSidebar(article) {
        var title = (article.header) ? article.header.title : article.title;
        var titleEll = (article.header) ? article.header.titleEll : article.title;
        SideBarService.active = article.title ? article : {
            id: article.id,
            type: 'article',
            title:  $scope.edition ? titleEll : title,
            url: article.url,
            imageUrl: article.articleImage
        }
    }

    if (current) {
        loadPartner(current);
        loadRichSnippetData(current);
        setCurrentInSidebar(current);
        setMeta(current);
        current.fullHtml = $sce.trustAsHtml(current.articleContent);
    }

    function setMeta(current){
        var portal = (current.portal) ? current.portal.name : '';
        var keywords = (current.articleTags) ? current.articleTags.toString() : portal;
        var title = current.header ? current.header.title : current.title;

        if(!title){
            return;
        }
        DZHeadService.title = title+' - DZone '+portal;
        DZHeadService.description = current.metaDescription;
        DZHeadService.keywords = keywords;
        DZHeadService.url = $location.absUrl();
        DZHeadService.canonical = $location.protocol() + '://' + $location.host() + current.url;
        var imageLink = current.header ? current.header.imageLink : current.imageLink;
        DZHeadService.img = imageLink;
        DZHeadService.type = current.articleType;
        DZHeadService.wordCount = current.wordCount;

        var maxTitleLength = 70;
        var localTitle = title;
        if (localTitle.length > maxTitleLength) {
            localTitle = localTitle.substring(0, maxTitleLength);
        }

        var maxDescriptionLength = 150;
        var description = current.metaDescription;
        if (description.length > maxDescriptionLength) {
            description = description.substring(0, maxDescriptionLength) + ' ...';
        }

        $scope.serp.title = localTitle + ' - DZone ' + portal;
        $scope.serp.url = DZHeadService.canonical;
        $scope.serp.description = description;
    }

    function getArticle(id) {

        if (cache[id]) {
            return $q.when(cache[id]);
        } else {
            var promise =  $service({article: id});

            promise.then(function(article) {
                article.fullHtml = $sce.trustAsHtml(article.articleContent);
            });

            return promise;
        }
    }

    function loadArticleInList(id) {
        loading = id;

        if (cache[id]) {
            $scope.articles.push(cache[id]);
            lastLoaded = cache[id];
            loading = null;
        } else {
            $scope.articles.push({type: 'loader'});

            getArticle(id)
                .then(function(article) {
                    $scope.articles.pop();
                    $scope.articles.push(article);
                    lastLoaded = article;
                    loading = null;
                    cache[article.id] = article;

                    loadPartner(article);
                    loadRichSnippetData(current);
                });
        }
    }

    function loadRichSnippetData(article) {

        var rs = {
            bodyProp: 'articleBody',
            date: moment(article.articleDate).format(),
            articleType: 'https://schema.org/Article'
        };

        article.rs = rs;
    }

    var articleNumber = 1;

    function attachPartner(article, partners) {

        article.showLogo = true;

        if (!_.isNumber(partners.lastUsed)) {
            toUse = partners.lastUsed
        }else{
            toUse = partners.lastUsed + 1;
        }

        if (toUse >= partners.length || !toUse) {
            toUse = 0;
        }

        if(partners){
            article.showLogo = (partners.length < 2 && articleNumber % 2) ? false : article.showLogo;
        }else{
            article.showLogo = false;
        }

        if(!articleNumber || article.partner){
            return;
        }

        article.readyForAd = true;
        article.partner = partners[toUse];
        $scope.partners.lastUsed = toUse;
        articleNumber++;
    }


    function loadPartner(article) {

        var partners = $scope.partners;

        if (!article.portalId) {
            if ($scope.portal) {
                article.portal = _.findWhere($scope.portals, {id: $scope.portal.id});
            } else {
            }
        } else {
            article.portal = _.findWhere($scope.portals, {id: article.portalId});
        }
        if (article.portal) {
            if (partners[article.portal.id]) {
                var _partners = partners[article.portal.id];
                _partners.lastUsed = $scope.partners.lastUsed;
                attachPartner(article, _partners);
            } else {
                $service.partners({portal: article.portal.id}).then(function(_partners) {
                    partners[article.portal.id] = _partners;
                    attachPartner(article, _partners);
                });
            }
        }

        if (article.readyForAd || article.partner) {
            article.readyForAd = true;
            return;
        }

    }

    $scope.loadMore = function() {

        if (loading) {
            return;
        }

        var next = SideBarService.findNext(lastLoaded ? lastLoaded.id : null);

        if (next) {
            loadArticleInList(next);

            // Fetch json data for creating the JSON-LD script in DOM
            TH$Service.data('articles.getArticleJsonData', {articleId: next}).then(function(result) {
                $scope.articleJson[next] = result;
            }).catch(function(error) {
                console.error(error);
            });
        }
    };

    // Watch the articleJson dictionary for any new JSON data being inserted
    // When new values are added, put a watch on the next article's div
    // used for adding the JSON-LD script to. Once the DOM has been rendered
    // containing this div, create the JSON-LD script and attach it to this container.
    $scope.$watch('articleJson', function(newValue) {
        var keys = Object.keys(newValue);
        if (keys.length) {
            var selector = '#article-' + keys[0];
            var articleId = parseInt(keys[0]);
            $scope.waitForElement(selector, function() {
                $scope.injectArticleJson(articleId)
            });
        }
    }, true);

    /**
     * Wait for the given element to be rendered in the DOM and then
     * run the given callback once the element is ready.
     *
     * @param selector - selector used to query the element
     * @param callback - callback run once the element has been rendered
     */
    $scope.waitForElement = function(selector, callback) {
        if ($(selector).length) {
            callback();
        } else {
            setTimeout(function() {
                $scope.waitForElement(selector, callback);
            }, 100);
        }
    };

    /**
     * Builds the JSON-LD script for the given article and injects
     * it into the appropriate place in the DOM.
     *
     * @param article - id of the article
     */
    $scope.injectArticleJson = function(article) {
        var json = $scope.articleJson[article];
        var script = document.createElement('script');
        script.type = 'application/ld+json';
        script.text = json;
        var jsonDivId = '#article-' + article;
        var jsonDiv = angular.element(jsonDivId);
        if (jsonDiv.length) {
            jsonDiv.append(script);
            // Remove the key/value pair from the dictionary now
            // that is has been dealt with
            delete $scope.articleJson[article];
        }
    };

    $scope.activate = function(article) {

        if(article.type == 'loader'){
            return;
        }

        $rootScope.model.portal = article.portal;
        $scope.addShareCount(article);

        if (current && article.id == current.id) {
            return;
        }

        current = article;
        setCurrentInSidebar(article);

        TH$Location.apply(function($location) {
            $location.path(article.url);
        });

        var title = article.header ? article.header.title : article.title;

        setMeta(article);
        $timeout(function(){
            if (!article.viewTracked) {
                TH$Service.action('nodes.trackView', {type: 'node', id: article.id}, {}, true);
                article.views++;
                article.viewTracked = true;
                if (window.ga) {
                    window.ga('set', 'dimension2', article.articleType ? ('article/' + article.articleType) : 'article');
                    window.ga('set', 'dimension3', moment(article.articleDate).format('YYYY-MM-DD'));
                    window.ga('set', 'dimension4', _.indexOf($scope.articles, article));
                    window.ga('set', 'dimension5', article.zonetop || 'undefined');
                    window.ga('set', 'dimension6', article.pubPlug || 'undefined');
                    window.ga('set', 'dimension7', article.articleTags || 'undefined');
                    var lastAuthor = article.authors[article.authors.length - 1].name;
                    var lastAuthorCompany = article.authors[article.authors.length - 1].company;
                    window.ga('set', 'dimension8', lastAuthor || 'undefined');
                    window.ga('set', 'dimension9', article.partner ? article.partner.details.name : 'undefined');
                    window.ga('set', 'dimension10', lastAuthorCompany || 'undefined');
                    window.ga('set', 'dimension11', article.authors[0].claimed || 'undefined');
                }
                $analytics.pageTrack(article.url);
            }
        },0);
    };

    $scope.toggleComments = function(article) {
        if(!article.isLocked) {
            TH$Service.action('articles.lockNode', {type: 'node', id: article.id}).then(function(result) {
                if(result){
                    article.isLocked = true;
                    TH$Dialog.success('You have disabled all comments for this Article');
                }else{
                    TH$Dialog.error('error','Your requested was denied')
                }
            });
        }else {
            TH$Service.action('articles.unlockNode', {type: 'node', id: article.id}).then(function(result) {
                if(result){
                    article.isLocked = false;
                    TH$Dialog.success('You have enabled all comments for this Article');
                }else{
                    TH$Dialog.error('error','Your requested was denied')
                }
            });
        }
    };

    $scope.toggleLimitComments = function (article) {
        if (!article.isLimited) {
            TH$Service.action('articles.limitNode', {type: 'node', id: article.id}).then(function (result) {
                if (result) {
                    article.isLimited = true;
                    TH$Dialog.success('You have limited comments for this Article. Now all comments will go through moderation.');
                } else {
                    TH$Dialog.error('error', 'Your requested was denied')
                }
            });
        } else {
            TH$Service.action('articles.unlimitNode', {type: 'node', id: article.id}).then(function (result) {
                if (result) {
                    article.isLimited = false;
                    TH$Dialog.success('You removed the limits for comments on this Article');
                } else {
                    TH$Dialog.error('error', 'Your requested was denied')
                }
            });
        }
    };

    $scope.activateT = function(article) {
        $scope.activate(article);
    };

    $scope.activateB = function(article) {
        $scope.activate(article);
    };

    SideBarService.fn.onSelected = function(node) {
        $scope.articles = [];

        loadArticleInList(node.id);

        $scope.activate(node);
        $($window).scrollTop(0);
    };

    $scope.upvoteArticle = function () {
    };

    $scope.addShareCount = function(article){
    };

    $scope.share = function(socialNet, url, title){
        shareThis.shareThis(socialNet, $location.protocol()+'://'+$location.host()+':'+$location.port()+url, title);
    };

    Object.size = function(obj) {
        var size = 0, key;
        for (key in obj) {
            if (obj.hasOwnProperty(key)) size++;
        }
        return size;
    };


    $scope.share = function(socialNet, url, title){
        shareThis.shareThis(socialNet, $location.protocol()+'://'+$location.host()+':'+$location.port()+url, title);
    };

    $scope.mailShareLink = function(article) {
        var title = article.header ? article.header.title : article.title;
        var link = article.header ? article.header.link : article.link;
        return 'mailto:?subject=' + encodeURIComponent(title) +  '&body=Article: ' + encodeURIComponent('https://dzone.com/' + link);
    };

    $scope.ads = ArticleAdsService($scope.edition, $scope.width);

    var partnerResourceIndex = 0;

    $scope.calculatePartnerResourceIndex = function() {
      partnerResourceIndex++;

      return partnerResourceIndex;
    }
}
            var WMODEL_DATA = {};
            WMODEL_DATA.authenticated = false;
        WMODEL_DATA.firstArticleContent = null;
        WMODEL_DATA.daysOldBody = "Technology moves quickly and this #type was published #time.  Some or all of its contents may be outdated.";
        WMODEL_DATA.isPreview = false;
        WMODEL_DATA.partners = {"lastUsed":0,"7":[{"top":{"id":339555,"text":"<p><strong>Every year Cloud Elements puts on the most comprehensive breakdown of the API Industry. Don’t miss out,&nbsp;<a href=\"https://offers.cloud-elements.com/the-state-of-api-integration-2019-webinar?utm_campaign=2019-SOAI-Pre-Launch&amp;utm_source=dzone&amp;utm_medium=display&amp;utm_content=pre-roll\" target=\"_blank\" rel=\"nofollow\">register for the April 4th webinar</a>&nbsp;to get early access to the full report.</strong></p>"},"bottom":{"id":333521,"text":"<p><strong>Build  and deploy API integrations 7x faster. Try the Cloud Elements 100% RESTful platform for 30 days free. Access your trial <a href=\"https://offers.cloud-elements.com/cloud-elements-30-day-free-trial?utm_campaign=New%252030%2520Day%2520Free%2520Trial%25202018&amp;utm_source=dzone&amp;utm_medium=display&amp;utm_content=pre-roll\" rel=\"nofollow\" target=\"_blank\">here</a>.</strong></p>"},"campaign":48413,"details":{"code":"cloudelements","level":2,"partnerUrl":"http://cloud-elements.com/","name":"Cloud Elements","logo":"//dz2cdn1.dzone.com/storage/partner-logo/12768892-logo-cloud-elements.png","leveldesc":"Platinum","id":37412}},{"top":{"id":325808,"text":"<p><strong><a href=\"https://go2.axway.com/en-API-microservices-whitepaper.html?utm_medium=affiliate&amp;utm_source=dzone&amp;utm_campaign=gc_innovation&amp;utm_content=api\" rel=\"nofollow\" target=\"_blank\">Discover how</a> you can get APIs and microservices to work at true enterprise scale.</strong></p>"},"bottom":{"id":325809,"text":"<p><strong>APIs and microservices are maturing, quickly. <a href=\"https://go2.axway.com/en-API-microservices-whitepaper.html?utm_medium=affiliate&amp;utm_source=dzone&amp;utm_campaign=gc_innovation&amp;utm_content=api\" rel=\"nofollow\" target=\"_blank\">Learn what it takes to manage modern APIs and microservices at enterprise scale.</a></strong></p>"},"campaign":224968,"details":{"code":"axway","level":2,"partnerUrl":"https://www.axway.com?utm_medium=affiliate&utm_source=dzone&utm_campaign=direct_dzone_2019","name":"Axway","logo":"//dz2cdn2.dzone.com/storage/partner-logo/12768885-logo-axway.png","leveldesc":"Platinum","id":10411}}]};
        WMODEL_DATA.edition = null;
        WMODEL_DATA.perms = {"canDecidePick":false,"canPublish":false};
        WMODEL_DATA.OPTIONS = {};
        WMODEL_DATA.daysOldTitle = "Heads up...this #type is old!";
        WMODEL_DATA.articles = [{"pubPlug":"laurenf","modDate":1565341440000,"articleImage":"//dz2cdn4.dzone.com/storage/article-thumb/10654447-thumb.jpg","rawType":"article","canEdit":false,"viewTracked":true,"source":"http://www.javaguides.net/2018/10/spring-boot-2-restful-api-documentation-with-swagger2-tutorial.html","accessMode":["textual","visual"],"metaDescription":"This article takes an in-depth look at Spring Boot 2 RESTful API documentation with Swagger 2 tutorial.","articleType":"tutorial","draft":false,"portalId":7,"isLocked":false,"relatedRefcard":[{"img":13027402,"id":2947333,"title":"Introduction to Digital Asset Management via APIs","url":"/refcardz/introduction-to-digital-asset-management-via-apis"}],"readyForAd":true,"canPublish":false,"articleContent":"","articleTypePre":"https://schema.org/Article","canDelete":false,"likeStatus":{"score":30,"canLike":false,"liked":false},"id":2559278,"nComments":2,"views":353002,"bodyProp":"articleBody","originalSource":"http://www.javaguides.net/2018/10/spring-boot-2-restful-api-documentation-with-swagger2-tutorial.html","isOld":false,"isLimited":false,"image":"//dz2cdn4.dzone.com/storage/article-thumb/10654447-thumb.jpg","wordCount":2739,"articleTags":["integration","tutorial","spring boot","restful api documentation","rest apis","swagger 2","spring boot 2"],"canonical":"https://dzone.com/articles/spring-boot-2-restful-api-documentation-with-swagg","published":true,"url":"/articles/spring-boot-2-restful-api-documentation-with-swagg","tldr":"Let's look at Spring Boot 2 RESTful API documentation with Swagger 2 tutorial.","saveStatus":{"saved":false,"count":51,"canSave":false},"deleted":false,"pdf":null,"partner":{"top":{"id":339555,"text":"<p><strong>Every year Cloud Elements puts on the most comprehensive breakdown of the API Industry. Don’t miss out,&nbsp;<a href=\"https://offers.cloud-elements.com/the-state-of-api-integration-2019-webinar?utm_campaign=2019-SOAI-Pre-Launch&amp;utm_source=dzone&amp;utm_medium=display&amp;utm_content=pre-roll\" target=\"_blank\" rel=\"nofollow\">register for the April 4th webinar</a>&nbsp;to get early access to the full report.</strong></p>"},"bottom":{"id":333521,"text":"<p><strong>Build  and deploy API integrations 7x faster. Try the Cloud Elements 100% RESTful platform for 30 days free. Access your trial <a href=\"https://offers.cloud-elements.com/cloud-elements-30-day-free-trial?utm_campaign=New%252030%2520Day%2520Free%2520Trial%25202018&amp;utm_source=dzone&amp;utm_medium=display&amp;utm_content=pre-roll\" rel=\"nofollow\" target=\"_blank\">here</a>.</strong></p>"},"campaign":48413,"details":{"code":"cloudelements","level":2,"partnerUrl":"http://cloud-elements.com/","name":"Cloud Elements","logo":"//dz2cdn1.dzone.com/storage/partner-logo/12768892-logo-cloud-elements.png","leveldesc":"Platinum","id":37412}},"relatedArticles":[{"img":4524559,"id":1479014,"title":"Spring Boot RESTful API Documentation With Swagger 2","url":"/articles/spring-boot-restful-api-documentation-with-swagger"},{"img":11925950,"id":2792403,"title":"Static API Documentation With Spring and Swagger","url":"/articles/static-api-documentation-with-spring-and-swagger"},{"img":10449445,"id":2499833,"title":"Spring Boot and Swagger: Documenting RESTful Services","url":"/articles/spring-boot-and-swagger-documenting-restful-servic"}],"zonetop":"laurenf","publisher":{"name":"DZone","logo":"https://dzone.com/themes/dz20/images/logo.png"},"header":{"imageLink":"//dz2cdn4.dzone.com/storage/article-thumb/10654447-thumb.jpg","titleEll":"Spring Boot 2 RESTful API Documentation With...","imageUrl":"//dz2cdn4.dzone.com/storage/article-thumb/10654447-thumb.jpg","link":"/articles/spring-boot-2-restful-api-documentation-with-swagg","id":2559278,"title":"Spring Boot 2 RESTful API Documentation With Swagger 2 Tutorial","type":"article"},"articleDate":"2018-11-12","shortDesc":"<p pid=\"140\">In this article, we will discuss how to use <em>Swagger 2</em> for a Spring Boot 2 RESTful API Documentation. For this article, we will use the <em>Springfox</em> implementation of the <em>Swagger 2</em> specification.</p>\n<p pid=\"141\">As we know that <a href=\"http://www.javaguides.net/p/spring-boot-tutorial.html\" target=\"_blank\">Spring Boot</a> makes developing RESTful services ridiculously easy — and using <a href=\"https://swagger.io/\" target=\"_blank\">Swagger</a> makes documenting your RESTful services easy.</p>\n<p pid=\"142\">In this article, we will create Spring Boot 2 JPA CRUD RESTFul application and MySQL as a database and then we will integrate &nbsp;<code>Swagger 2</code><span id=\"_tmp_pre_8\">&nbsp;</span>&nbsp;for REST APIs documentation.</p>\n<p pid=\"143\">In order to generate the Swagger documentation, swagger-core offers a set of annotations to declare and manipulate the output. In this tutorial, we will use below set of swagger-core annotations to build a RESTFul API documentation.</p>\n<h2>A Quick Overview of Swagger-Core Annotations</h2>\n<div>\n <table>\n  <tbody>\n   <tr>\n    <td>@Api</td>\n    <td>Marks a class as a Swagger resource.</td>\n   </tr>\n   <tr>\n   ...","plug":"spring-boot-2-restful-api-documentation-with-swagg","authors":[{"isStaff":false,"aboutAuthor":"Java/J2EE Programmer, Blogger and sharing Programming knowledge across the globe via http://www.javaguides.net. Connect with me on twitter @FadatareRamesh","claimed":"DZone_karap","partnerOf":[],"isCore":false,"avatar":10398005,"url":"/users/3439641/ramesh-fadatare.html","realName":"Ramesh Fadatare","isMVB":false,"name":"Ramesh Fadatare","tagline":"Java Developer Blogger, Sharing knowledge and work experience about Java related technologies on http://www.javaguides.net","company":"GSLab","id":3439641,"isClaimed":true}]}];
        TH.installWidgetController('article.content', 'articleContent4', WMODEL_DATA, typeof controller == 'function' ? controller : null, [{name: 'partners', data: true},{name: 'DEFAULT', data: true}], ' oUhbblYOaqbcblYOaqbcC', null);
        })();
        (function() {
            function controller($scope, $service, $location, SideBarService, $timeout) {

    if ($scope.edition) {
        $scope.date = moment($scope.editionDate).utc().format('MMM DD, YYYY');
    }

    SideBarService.ctx.pageSize = $scope.pageSize;
    SideBarService.ctx.isPreview = $scope.isPreview;
    SideBarService.ctx.mode = $scope.mode;

    SideBarService.fn.loader = $service;

    var $window = $(window);

    function checkWidth() {
        var windowsize = $window.width();
        $scope.width = windowsize;
    }
    // Execute on load
    checkWidth()
    // Bind event listener
    $(window).resize(checkWidth);


    if ($scope.edition) {
        SideBarService.ctx.edition = $scope.edition;
    }

    SideBarService.fn.scrollCheck = function() {
        $scope.$emit('thIfScrollCheck');
    };

    var currentFilter;

    $scope.$on('$locationChangeSuccess', function() {

        if (!$location.search().filter) {
            $scope.filter = 'latest';
        } else {
            $scope.filter = $location.search().filter;

            if ($scope.filter == 'latest') {
                $location.search('filter', null);
            }
        }

        if (currentFilter == $scope.filter) {
            return;
        }

        currentFilter = $scope.filter;

        SideBarService.ctx.filter = $scope.filter;
    });

    $scope.display = SideBarService.getList();

    $scope.$watchCollection(function() {
        return SideBarService.getList();
    }, function (n) {
        $scope.display = n;
    });

    $scope.isActive = SideBarService.isActive;

    $scope.isExcluded = SideBarService.isExcluded;

    $scope.loadMore = SideBarService.load;

    $scope.loading = function() {
        return SideBarService.ctx.loading;
    };

    TH.on('TapBarStatusChange', function(expanded) {
        if (expanded) {
            SideBarService.unblock();
        }
    })

}
            var WMODEL_DATA = {};
            WMODEL_DATA.mode = null;
        WMODEL_DATA.isPreview = false;
        WMODEL_DATA.editionName = "";
        WMODEL_DATA.editionDate = null;
        WMODEL_DATA.pageSize = 20;
        WMODEL_DATA.edition = null;
        WMODEL_DATA.OPTIONS = {};
        TH.installWidgetController('sidebar.content.list', 'sidebarContentList7', WMODEL_DATA, typeof controller == 'function' ? controller : null, [{name: 'DEFAULT', data: true}], ' oUhbkSMaaqbcdvVkcC', null);
        })();
        (function() {
            function controller($scope) {
    var $window = $(window);

    function checkWidth() {
        var windowsize = $window.width();
        var $element = $('div.sidebar.sidebarTapBar');
        $scope.width = windowsize;
        if(windowsize <= 1024 && $scope.edition){
            $('.fixContentRight').removeClass('fixContentRight');
            $('.tap').show();
        }else if($scope.edition){
            $('.tap').hide();
            $('.mainContentRow').addClass('fixContentRight');
            $element.removeClass('tapNotExpanded');
            $element.addClass('expanded');
        }
    }
    // Execute on load
    checkWidth();
    // Bind event listener
    $(window).resize(checkWidth);
}
            var WMODEL_DATA = {};
            WMODEL_DATA.edition = null;
        WMODEL_DATA.slot = null;
        WMODEL_DATA.OPTIONS = {};
        TH.installWidgetController('sidebar.tapBar', 'sidebar', WMODEL_DATA, typeof controller == 'function' ? controller : null, null, ' oUhbkSMadabfWVcC oUhbkSMadabbWQbVkcC', null);
        })();
        (function() {
            function controller($scope,  shareThis, TH$Dialog, TH$Service, $location) {
    $scope.getEditUrl = function(id, type) {
        if (!type || type == 'article') {
            return '/content/' + id + '/edit.html';
        } else {
            return '/dzone/staff/' + type + (type == 'refcard' ? 'z' : 's') + '/' + id + '/edit.html';
        }
    };

    $scope.share = function(socialNet, url, title){
        shareThis.shareThis(socialNet, url, title);
    };

    $scope.canDelete = function(article) {
        return article.canDelete;
    };

    $scope.canPublish = function(article) {
        return article.canPublish;
    };

    $scope.canEdit = function(article) {
        return article.canEdit;
    };

    $scope.toggleComments = function(article) {
        if(!article.isLocked) {
            TH$Service.action('articles.lockNode', {type: 'node', id: article.id}).then(function(result) {
                if(result){
                    article.isLocked = true;
                    TH$Dialog.success('You have disabled all comments for this Article');
                }else{
                    TH$Dialog.error('error','Your requested was denied')
                }
            });
        }else {
            TH$Service.action('articles.unlockNode', {type: 'node', id: article.id}).then(function(result) {
                if(result){
                    article.isLocked = false;
                    TH$Dialog.success('You have enabled all comments for this Article');
                }else{
                    TH$Dialog.error('error','Your requested was denied')
                }
            });
        }
    };

    $scope.toggleLimitComments = function (article) {
        if (!article.isLimited) {
            TH$Service.action('articles.limitNode', {type: 'node', id: article.id}).then(function (result) {
                if (result) {
                    article.isLimited = true;
                    TH$Dialog.success('You have limited comments for this Article. Now all comments will go through moderation.');
                } else {
                    TH$Dialog.error('error', 'Your requested was denied')
                }
            });
        } else {
            TH$Service.action('articles.unlimitNode', {type: 'node', id: article.id}).then(function (result) {
                if (result) {
                    article.isLimited = false;
                    TH$Dialog.success('You removed the limits for comments on this Article');
                } else {
                    TH$Dialog.error('error', 'Your requested was denied')
                }
            });
        }
    };

    $scope.shareTwitter = function($event, title, url){

        $event.preventDefault();
        $event.stopPropagation();
        var twitter = 'https://twitter.com/intent/tweet';
        var link = $location.protocol() + '://' + location.host + url;
        var ref = location.host;
        var params = '?text=' + encodeURIComponent(title) + '&url=' + link + '&ref=dzone.com&via=DZoneInc';
        var win = window.open(twitter + params, '_blank');
        win.focus();
    };

    $scope.edit = function(link) {
        TH$Dialog.open({
            loadWidget: 'links.postPreview',
            widgetArgs: {
                edit: link.id
            },
            size: 'xbig'
        }).then(function (result) {
            $scope.link.title = result.title;
            $scope.link.linkDescription = result.content;
            $scope.link.thumb = result.thumb;
            $scope.link.tags = result.topics;
        });
    };

    $scope.deleteLink = function(article) {
        var title = article.title;
        var type = 'link';
        if(article.header){
            title = (article.header.type == 'article') ? article.header.title : article.title;
            type = (article.header.type == 'article') ? 'article' : 'link';
        }
        TH$Dialog.confirm('Do you want to delete "' + title + '"?').then(function() {
            return TH$Service.action('delete', {type: type, id: article.id});
        }).then(function() {
            article.deleted = true;
        });
    };
}


            var WMODEL_DATA = {};
            WMODEL_DATA.OPTIONS = {};
        TH.installWidgetController('content.commentsSlider', 'contentCommentsSlider6', WMODEL_DATA, typeof controller == 'function' ? controller : null, null, ' oUhbaqbcaibvnWffWVcC', null);
        })();
        (function() {
            
            var WMODEL_DATA = {};
            WMODEL_DATA.name = "commentsSlider";
        WMODEL_DATA.slot = null;
        WMODEL_DATA.OPTIONS = {"name":"commentsSlider"};
        TH.installWidgetController('components.slider', 'componentsSlider5', WMODEL_DATA, typeof controller == 'function' ? controller : null, null, ' oUhballbvbdSaoUhM', null);
        })();
        </script>
    <script type="text/javascript">

        TH.installWidgetDirective('users.profile.mini', 'usersProfileMini', {"service":{"user":"="},"extra":null}, 'widget.html', '/widgets/users/profile/mini/widget.js', [{name: 'DEFAULT', data: true}], ' oUhbwfbqddOeffWVcC', null, ['widget.less']);
        
        TH.installWidgetDirective('header.sections', 'headerSections', {"service":null,"extra":null}, 'widget.html', '/widgets/header/sections/widget.js', null, ' oUhbWOfbRllbgfgpM', null, ['sections.less']);
        
        TH.installWidgetDirective('users.registration', 'usersRegistration', {"service":null,"extra":null}, 'widget.html', '/widgets/users/registration/widget.js', [{name: 'validateMail', data: false},{name: 'validateUsername', data: false}], ' oUhbwfbfZvbllfWVcC', ['/scripts/utilities/tools.js'], ['widget.less']);
        
        TH.installWidgetDirective('errors.recaptcha', 'errorsRecaptcha', {"service":null,"extra":null}, 'widget.html', '/widgets/errors/recaptcha/widget.js', null, ' oUhbfptaR_fSfWVcC', null, ['widget.less']);
        
        TH.installWidgetDirective('links.sources.mini', 'linksSourcesMini', {"service":{"link":"="},"extra":null}, 'widget.html', '', [{name: 'DEFAULT', data: true}], ' oUhbdhbqvRbefWfSC', null, ['mini.less']);
        
        TH.installWidgetDirective('assets.mini', 'assetsMini', {"service":{"asset":"="},"extra":null}, 'widget.html', '', [{name: 'DEFAULT', data: true}], ' oUhbcgvWfSoUhM', null, ['widget.less']);
        
        TH.installWidgetDirective('links.postPreview', 'linksPostPreview', {"service":{"url":"=","edit":"="},"extra":null}, 'widget.html', '/widgets/links/postPreview/widget.js', [{name: 'topics', data: true},{name: 'DEFAULT', data: true}], ' oUhbdhbnvqjXfoUhM', null, ['widget.less']);
        
        TH.installWidgetDirective('manage.revisions', 'manageRevisions', {"service":{"node":"=","body":"=","masterTemplate":"=","format":"=","mode":"="},"extra":null}, 'widget.html', '/widgets/manage/revisions/widget.js', [{name: 'DEFAULT', data: true},{name: 'revision', data: true}], ' oUhbXYVajkgpfWVcC', null, ['widget.less']);
        
        TH.installWidgetDirective('leads.addCRM', 'leadsAddCRM', {"service":null,"extra":null}, 'widget.html', '/widgets/leads/addCRM/widget.js', [{name: 'DEFAULT', data: true}], ' oUhb_ObOQnKRMnM oUhbcgvKRcgcONfPC', ['/scripts/utilities/tools.js'], ['add-crm.less','add-ref.less']);
        
        TH.installWidgetDirective('links.postV2', 'linksPostV2', {"service":null,"extra":null}, 'widget.html', '/widgets/links/postV2/widget.js', null, ' oUhbdhbnvXZqyBC', null, ['postV2.less']);
        
        TH.installWidgetDirective('users.questionForm', 'usersQuestionForm', {"service":null,"extra":null}, 'widget.html', '/widgets/users/questionForm/widget.js', null, ' oUhbwfbuglldnfWVcC', null, ['widget.less']);
        
        TH.installWidgetDirective('loading', 'loading', {"service":null,"extra":null}, 'widget.html', '/widgets/loading/widget.js', null, ' oUhbjOfQoUhM', null, ['widget.less']);
        
        TH.installWidgetDirective('refcardz.mini', 'refcardzMini', {"service":{"asset":"="},"extra":null}, 'widget.html', '', [{name: 'DEFAULT', data: true}], ' oUhbfSbmWfSoUhM', null, ['widget.less']);
        
        TH.installWidgetDirective('links.listV2', 'linksListV2', {"service":null,"extra":null}, 'widget.ftl', '/widgets/links/listV2/widget.js', [{name: 'linkData', data: true},{name: 'parseLink', data: true},{name: 'list', data: true}], ' oUhbdhbdvXVkyBC', ['directives.js','filters.js'], ['listV2.less']);
        
        TH.installWidgetDirective('users.uiPrefs', 'usersUiPrefs', {"service":null,"extra":null}, 'widget.html', '/widgets/users/uiPrefs/widget.js', null, '', null, null);
        
        TH.installWidgetDirective('users.loginForm', 'usersLoginForm', {"service":null,"extra":null}, 'widget.html', '/widgets/users/loginForm/widget.js', null, ' oUhbwfbjZcpWoUhM', null, ['widget.less']);
        
        TH.installWidgetDirective('users.noMembership', 'usersNoMembership', {"service":null,"extra":null}, 'widget.html', '/widgets/users/noMembership/widget.js', null, ' oUhbwfblaYfjhfWVcC', null, ['widget.less']);
        
        TH.installWidgetDirective('errors.general', 'errorsGeneral', {"service":null,"extra":null}, 'widget.html', '/widgets/errors/general/widget.js', null, ' oUhbfptQbfWfWVcC', null, ['widget.less']);
        
        TH.installWidgetDirective('manage.customNotifications.preview', 'manageCustomNotificationsPreview', {"service":null,"extra":null}, 'widget.html', '/widgets/manage/customNotifications/preview/widget.js', null, ' oUhbXYVMwrjrYVdgpZfnkZfnkM dLgZWBLPpWkKeXB', null, ['preview.less','/lib/froala-2/css/froala_style.min.css']);
        
        TH.installWidgetDirective('header.zonesDropdown', 'headerZonesDropdown', {"service":{"portal":"="},"extra":{"hover":"="}}, 'widget.html', '/widgets/header/zonesDropdown/widget.js', [{name: 'DEFAULT', data: true}], '', null, null);
        
        TH.installWidgetDirective('manage.customNotifications.test', 'manageCustomNotificationsTest', {"service":{"customNotification":"="},"extra":null}, 'widget.html', '/widgets/manage/customNotifications/test/widget.js', [{name: 'searchGroups', data: true},{name: 'DEFAULT', data: true},{name: 'searchUsers', data: true}], ' oUhbXYVMwrjrYVdgpcgcoUhM', null, ['widget.less']);
        
        TH.installWidgetDirective('content.commentBox', 'contentCommentBox', {"service":{"parent":"="},"extra":{"count":"=","limited":"="}}, 'widget.html', '/widgets/content/commentBox/widget.js', [{name: 'post', data: false},{name: 'edit', data: false},{name: 'DEFAULT', data: true}], ' oUhbaqbcaibevMkaqbC', null, ['comments.less']);
        
        TH.installWidgetDirective('article.listV2', 'articleListV2', {"service":null,"extra":null}, 'widget.html', '/widgets/article/listV2/widget.js', [{name: 'list', data: true},{name: 'sortCount', data: true}], ' oUhbblYOdvXKuV_VkcC', ['directives.js'], ['article-list.less']);
            </script>
</body>